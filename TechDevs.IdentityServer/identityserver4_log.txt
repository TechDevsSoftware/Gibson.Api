2018-07-23 15:38:29.299 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-07-23 15:38:29.450 +01:00 [DBG] Using idsrv as default scheme for authentication
2018-07-23 15:38:29.455 +01:00 [DBG] Using idsrv as default scheme for sign-in
2018-07-23 15:38:29.455 +01:00 [DBG] Using idsrv as default scheme for sign-out
2018-07-23 15:38:29.456 +01:00 [DBG] Using idsrv as default scheme for challenge
2018-07-23 15:38:29.458 +01:00 [DBG] Using idsrv as default scheme for forbid
2018-07-23 15:38:30.760 +01:00 [INF] idsrv was not authenticated. Failure message: Unprotect ticket failed
2018-07-23 15:38:30.786 +01:00 [INF] idsrv was not authenticated. Failure message: Unprotect ticket failed
2018-07-23 15:38:43.336 +01:00 [INF] idsrv was not authenticated. Failure message: Unprotect ticket failed
2018-07-23 15:38:43.336 +01:00 [INF] idsrv was not authenticated. Failure message: Unprotect ticket failed
2018-07-23 15:38:43.337 +01:00 [INF] idsrv was not authenticated. Failure message: Unprotect ticket failed
2018-07-23 15:38:43.337 +01:00 [INF] idsrv was not authenticated. Failure message: Unprotect ticket failed
2018-07-23 15:38:43.369 +01:00 [INF] idsrv was not authenticated. Failure message: Unprotect ticket failed
2018-07-23 15:38:43.370 +01:00 [INF] idsrv was not authenticated. Failure message: Unprotect ticket failed
2018-07-23 15:38:43.458 +01:00 [INF] idsrv was not authenticated. Failure message: Unprotect ticket failed
2018-07-23 15:38:43.458 +01:00 [INF] idsrv was not authenticated. Failure message: Unprotect ticket failed
2018-07-23 15:38:43.458 +01:00 [INF] idsrv was not authenticated. Failure message: Unprotect ticket failed
2018-07-23 15:38:43.458 +01:00 [INF] idsrv was not authenticated. Failure message: Unprotect ticket failed
2018-07-23 15:38:43.458 +01:00 [INF] idsrv was not authenticated. Failure message: Unprotect ticket failed
2018-07-23 15:38:43.458 +01:00 [INF] idsrv was not authenticated. Failure message: Unprotect ticket failed
2018-07-23 15:38:44.924 +01:00 [INF] idsrv was not authenticated. Failure message: Unprotect ticket failed
2018-07-23 15:38:44.924 +01:00 [INF] idsrv was not authenticated. Failure message: Unprotect ticket failed
2018-07-23 15:38:45.004 +01:00 [INF] AuthenticationScheme: idsrv was challenged.
2018-07-23 15:38:45.014 +01:00 [INF] idsrv was not authenticated. Failure message: Unprotect ticket failed
2018-07-23 15:38:45.014 +01:00 [INF] idsrv was not authenticated. Failure message: Unprotect ticket failed
2018-07-23 15:38:48.995 +01:00 [INF] idsrv was not authenticated. Failure message: Unprotect ticket failed
2018-07-23 15:38:48.996 +01:00 [INF] idsrv was not authenticated. Failure message: Unprotect ticket failed
2018-07-23 15:38:49.026 +01:00 [INF] AuthenticationScheme: Google was challenged.
2018-07-23 15:38:51.122 +01:00 [INF] AuthenticationScheme: idsrv.external signed in.
2018-07-23 15:38:51.132 +01:00 [INF] idsrv was not authenticated. Failure message: Unprotect ticket failed
2018-07-23 15:38:51.132 +01:00 [INF] idsrv was not authenticated. Failure message: Unprotect ticket failed
2018-07-23 15:38:51.149 +01:00 [INF] AuthenticationScheme: idsrv.external was successfully authenticated.
2018-07-23 15:38:51.223 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Provider": "Google",
  "ProviderUserId": "107387075381855787656",
  "SubjectId": "da113436b5c14348726a9175cdd931b1c05ea61bb9717666fbb253371e622266",
  "DisplayName": "Steve Kent",
  "Endpoint": "UI",
  "ActivityId": "0HLFGL7QO98MM:00000004",
  "TimeStamp": "2018-07-23T14:38:51Z",
  "ProcessId": 19960,
  "LocalIpAddress": "127.0.0.1:20842",
  "RemoteIpAddress": "::1"
}
2018-07-23 15:38:51.237 +01:00 [DBG] Augmenting SignInContext
2018-07-23 15:38:51.239 +01:00 [DBG] Adding amr claim with value: external
2018-07-23 15:38:51.245 +01:00 [INF] idsrv was not authenticated. Failure message: Unprotect ticket failed
2018-07-23 15:38:51.248 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2018-07-23 15:38:51.267 +01:00 [INF] AuthenticationScheme: idsrv.external signed out.
2018-07-23 15:38:51.279 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-23 15:38:51.280 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-23 15:38:52.083 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-23 15:38:52.083 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-23 15:38:52.083 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-23 15:38:52.083 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-23 15:38:52.101 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-23 15:38:52.101 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-23 15:38:52.101 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-23 15:38:52.101 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-23 15:38:52.102 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-23 15:38:52.101 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-23 15:38:54.362 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-23 15:38:54.362 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-23 15:38:56.569 +01:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2018-07-23 15:38:56.570 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-23 15:38:56.570 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-23 15:38:56.717 +01:00 [INF] AuthenticationScheme: idsrv signed out.
2018-07-23 15:38:56.729 +01:00 [INF] {
  "Name": "User Logout Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1002,
  "SubjectId": "da113436b5c14348726a9175cdd931b1c05ea61bb9717666fbb253371e622266",
  "DisplayName": "Steve Kent",
  "ActivityId": "0HLFGL7QO98MN:00000006",
  "TimeStamp": "2018-07-23T14:38:56Z",
  "ProcessId": 19960,
  "LocalIpAddress": "127.0.0.1:20842",
  "RemoteIpAddress": "::1"
}
2018-07-23 15:38:59.920 +01:00 [INF] AuthenticationScheme: idsrv was challenged.
2018-07-23 15:39:01.361 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2018-07-23 15:39:01.392 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "alice",
  "SubjectId": "818727",
  "DisplayName": "alice",
  "Endpoint": "UI",
  "ActivityId": "0HLFGL7QO98MO:00000007",
  "TimeStamp": "2018-07-23T14:39:01Z",
  "ProcessId": 19960,
  "LocalIpAddress": "127.0.0.1:20842",
  "RemoteIpAddress": "::1"
}
2018-07-23 15:39:01.396 +01:00 [DBG] Augmenting SignInContext
2018-07-23 15:39:01.396 +01:00 [DBG] Adding idp claim with value: local
2018-07-23 15:39:01.396 +01:00 [DBG] Adding amr claim with value: pwd
2018-07-23 15:39:01.398 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2018-07-23 15:39:01.407 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-23 15:39:01.407 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-23 15:39:03.136 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-23 15:39:03.136 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-23 15:39:03.593 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-23 15:39:03.593 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 20:12:51.654 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-07-24 20:12:51.726 +01:00 [DBG] Using idsrv as default scheme for authentication
2018-07-24 20:12:51.732 +01:00 [DBG] Using idsrv as default scheme for sign-in
2018-07-24 20:12:51.732 +01:00 [DBG] Using idsrv as default scheme for sign-out
2018-07-24 20:12:51.732 +01:00 [DBG] Using idsrv as default scheme for challenge
2018-07-24 20:12:51.732 +01:00 [DBG] Using idsrv as default scheme for forbid
2018-07-24 20:13:01.936 +01:00 [INF] AuthenticationScheme: idsrv was challenged.
2018-07-24 20:13:04.441 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2018-07-24 20:13:04.605 +01:00 [INF] {
  "Name": "User Login Failure",
  "Category": "Authentication",
  "EventType": "Failure",
  "Id": 1001,
  "Username": "stevekent55@gmail.com",
  "Endpoint": "UI",
  "Message": "invalid credentials",
  "ActivityId": "0HLFHJ5Q03U6D:00000004",
  "TimeStamp": "2018-07-24T19:13:04Z",
  "ProcessId": 5132,
  "LocalIpAddress": "127.0.0.1:22405",
  "RemoteIpAddress": "::1"
}
2018-07-24 20:13:10.461 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2018-07-24 20:13:10.473 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "alice",
  "SubjectId": "818727",
  "DisplayName": "alice",
  "Endpoint": "UI",
  "ActivityId": "0HLFHJ5Q03U6G:00000003",
  "TimeStamp": "2018-07-24T19:13:10Z",
  "ProcessId": 5132,
  "LocalIpAddress": "127.0.0.1:22405",
  "RemoteIpAddress": "::1"
}
2018-07-24 20:13:10.495 +01:00 [DBG] Augmenting SignInContext
2018-07-24 20:13:10.498 +01:00 [DBG] Adding idp claim with value: local
2018-07-24 20:13:10.498 +01:00 [DBG] Adding amr claim with value: pwd
2018-07-24 20:13:10.514 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2018-07-24 20:13:10.521 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 20:13:10.521 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 20:13:13.886 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 20:13:13.886 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 20:13:16.028 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 20:13:16.028 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 20:13:16.047 +01:00 [INF] AuthenticationScheme: Google was challenged.
2018-07-24 20:13:25.112 +01:00 [INF] AuthenticationScheme: idsrv.external signed in.
2018-07-24 20:13:25.118 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 20:13:25.118 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 20:13:25.125 +01:00 [INF] AuthenticationScheme: idsrv.external was successfully authenticated.
2018-07-24 20:13:25.152 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Provider": "Google",
  "ProviderUserId": "107387075381855787656",
  "SubjectId": "da37b3810dc6df3947c5f8c311444882731a79fc884e87edb71e169b3d575959",
  "DisplayName": "Steve Kent",
  "Endpoint": "UI",
  "ActivityId": "0HLFHJ5Q03U6E:00000005",
  "TimeStamp": "2018-07-24T19:13:25Z",
  "ProcessId": 5132,
  "LocalIpAddress": "127.0.0.1:22405",
  "RemoteIpAddress": "::1"
}
2018-07-24 20:13:25.157 +01:00 [DBG] Augmenting SignInContext
2018-07-24 20:13:25.158 +01:00 [DBG] Adding amr claim with value: external
2018-07-24 20:13:25.158 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2018-07-24 20:13:25.173 +01:00 [INF] AuthenticationScheme: idsrv.external signed out.
2018-07-24 20:13:25.182 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 20:13:25.182 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 20:13:26.965 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 20:13:26.965 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 20:38:50.829 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-07-24 20:38:50.917 +01:00 [DBG] Using idsrv as default scheme for authentication
2018-07-24 20:38:50.922 +01:00 [DBG] Using idsrv as default scheme for sign-in
2018-07-24 20:38:50.922 +01:00 [DBG] Using idsrv as default scheme for sign-out
2018-07-24 20:38:50.922 +01:00 [DBG] Using idsrv as default scheme for challenge
2018-07-24 20:38:50.923 +01:00 [DBG] Using idsrv as default scheme for forbid
2018-07-24 20:38:58.245 +01:00 [INF] AuthenticationScheme: idsrv was challenged.
2018-07-24 20:38:58.302 +01:00 [ERR] An unhandled exception has occurred while executing the request
System.InvalidOperationException: Unable to resolve service for type 'TechDevs.Accounts.IUserRepository' while attempting to activate 'TechDevs.Accounts.AccountService'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, ISet`1 callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, ISet`1 callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, ISet`1 callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, ISet`1 callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, ISet`1 callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(Type serviceType, ServiceProvider serviceProvider)
   at System.Collections.Concurrent.ConcurrentDictionaryExtensions.GetOrAdd[TKey,TValue,TArg](ConcurrentDictionary`2 dictionary, TKey key, Func`3 valueFactory, TArg arg)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.GetService(IServiceProvider sp, Type type, Type requiredBy, Boolean isDefaultParameterRequired)
   at lambda_method(Closure , IServiceProvider , Object[] )
   at Microsoft.AspNetCore.Mvc.Controllers.ControllerActivatorProvider.<>c__DisplayClass4_0.<CreateActivator>b__0(ControllerContext controllerContext)
   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass5_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeInnerFilterAsync>d__14.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeNextResourceFilter>d__22.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeFilterPipelineAsync>d__17.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeAsync>d__15.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.AspNetCore.Builder.RouterMiddleware.<Invoke>d__4.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 72
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.<Invoke>d__6.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.<Invoke>d__7.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at IdentityServer4.Hosting.BaseUrlMiddleware.<Invoke>d__3.MoveNext() in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\Hosting\BaseUrlMiddleware.cs:line 36
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()
2018-07-24 20:41:25.681 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-07-24 20:41:25.743 +01:00 [DBG] Using idsrv as default scheme for authentication
2018-07-24 20:41:25.746 +01:00 [DBG] Using idsrv as default scheme for sign-in
2018-07-24 20:41:25.746 +01:00 [DBG] Using idsrv as default scheme for sign-out
2018-07-24 20:41:25.746 +01:00 [DBG] Using idsrv as default scheme for challenge
2018-07-24 20:41:25.746 +01:00 [DBG] Using idsrv as default scheme for forbid
2018-07-24 20:41:32.531 +01:00 [INF] AuthenticationScheme: idsrv was challenged.
2018-07-24 20:41:45.535 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2018-07-24 20:41:45.725 +01:00 [ERR] An unhandled exception has occurred while executing the request
System.NullReferenceException: Object reference not set to an instance of an object.
   at IdentityServer4.Quickstart.UI.AccountController.<Login>d__7.MoveNext() in C:\Users\Steve\Documents\GitHub\TechDevs.Accounts\TechDevs.IdentityServer\Quickstart\Account\AccountController.cs:line 114
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeActionMethodAsync>d__12.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeNextActionFilterAsync>d__10.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeInnerFilterAsync>d__14.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeNextResourceFilter>d__22.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeFilterPipelineAsync>d__17.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeAsync>d__15.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.AspNetCore.Builder.RouterMiddleware.<Invoke>d__4.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 72
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.<Invoke>d__6.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.<Invoke>d__7.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at IdentityServer4.Hosting.BaseUrlMiddleware.<Invoke>d__3.MoveNext() in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\Hosting\BaseUrlMiddleware.cs:line 36
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()
2018-07-24 20:42:26.729 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2018-07-24 20:43:07.042 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-07-24 20:43:07.104 +01:00 [DBG] Using idsrv as default scheme for authentication
2018-07-24 20:43:07.107 +01:00 [DBG] Using idsrv as default scheme for sign-in
2018-07-24 20:43:07.107 +01:00 [DBG] Using idsrv as default scheme for sign-out
2018-07-24 20:43:07.107 +01:00 [DBG] Using idsrv as default scheme for challenge
2018-07-24 20:43:07.107 +01:00 [DBG] Using idsrv as default scheme for forbid
2018-07-24 20:43:14.837 +01:00 [INF] AuthenticationScheme: idsrv was challenged.
2018-07-24 20:43:18.226 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2018-07-24 20:43:27.475 +01:00 [ERR] An unhandled exception has occurred while executing the request
System.Exception: User not found
   at TechDevs.Accounts.AccountService.<ValidatePassword>d__12.MoveNext() in C:\Users\Steve\Documents\GitHub\TechDevs.Accounts\TechDevs.Accounts\Services\AccountService.cs:line 123
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Quickstart.UI.AccountController.<Login>d__7.MoveNext() in C:\Users\Steve\Documents\GitHub\TechDevs.Accounts\TechDevs.IdentityServer\Quickstart\Account\AccountController.cs:line 114
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeActionMethodAsync>d__12.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeNextActionFilterAsync>d__10.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeInnerFilterAsync>d__14.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeNextResourceFilter>d__22.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeFilterPipelineAsync>d__17.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeAsync>d__15.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.AspNetCore.Builder.RouterMiddleware.<Invoke>d__4.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 72
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.<Invoke>d__6.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.<Invoke>d__7.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at IdentityServer4.Hosting.BaseUrlMiddleware.<Invoke>d__3.MoveNext() in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\Hosting\BaseUrlMiddleware.cs:line 36
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()
2018-07-24 20:45:12.390 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-07-24 20:45:12.430 +01:00 [DBG] Using idsrv as default scheme for authentication
2018-07-24 20:45:12.433 +01:00 [DBG] Using idsrv as default scheme for sign-in
2018-07-24 20:45:12.433 +01:00 [DBG] Using idsrv as default scheme for sign-out
2018-07-24 20:45:12.433 +01:00 [DBG] Using idsrv as default scheme for challenge
2018-07-24 20:45:12.434 +01:00 [DBG] Using idsrv as default scheme for forbid
2018-07-24 20:45:18.723 +01:00 [INF] AuthenticationScheme: idsrv was challenged.
2018-07-24 20:45:21.959 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2018-07-24 20:45:26.398 +01:00 [INF] {
  "Name": "User Login Failure",
  "Category": "Authentication",
  "EventType": "Failure",
  "Id": 1001,
  "Username": "stevekent55@gmail.com",
  "Endpoint": "UI",
  "Message": "invalid credentials",
  "ActivityId": "0HLFHJNSAP4LV:00000003",
  "TimeStamp": "2018-07-24T19:45:26Z",
  "ProcessId": 7248,
  "LocalIpAddress": "127.0.0.1:15590",
  "RemoteIpAddress": "::1"
}
2018-07-24 20:45:35.771 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2018-07-24 20:45:35.798 +01:00 [INF] {
  "Name": "User Login Failure",
  "Category": "Authentication",
  "EventType": "Failure",
  "Id": 1001,
  "Username": "steve@techdevs.tk",
  "Endpoint": "UI",
  "Message": "invalid credentials",
  "ActivityId": "0HLFHJNSAP4M0:00000003",
  "TimeStamp": "2018-07-24T19:45:35Z",
  "ProcessId": 7248,
  "LocalIpAddress": "127.0.0.1:15590",
  "RemoteIpAddress": "::1"
}
2018-07-24 20:45:50.778 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2018-07-24 20:45:50.809 +01:00 [INF] {
  "Name": "User Login Failure",
  "Category": "Authentication",
  "EventType": "Failure",
  "Id": 1001,
  "Username": "steve@techdevs.tk",
  "Endpoint": "UI",
  "Message": "invalid credentials",
  "ActivityId": "0HLFHJNSAP4LV:00000004",
  "TimeStamp": "2018-07-24T19:45:50Z",
  "ProcessId": 7248,
  "LocalIpAddress": "127.0.0.1:15590",
  "RemoteIpAddress": "::1"
}
2018-07-24 20:45:53.720 +01:00 [INF] AuthenticationScheme: idsrv was challenged.
2018-07-24 20:47:17.150 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2018-07-24 20:47:17.811 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "steve@techdevs.net",
  "DisplayName": "steve@techdevs.net",
  "Endpoint": "UI",
  "ActivityId": "0HLFHJNSAP4M1:00000001",
  "TimeStamp": "2018-07-24T19:47:17Z",
  "ProcessId": 7248,
  "LocalIpAddress": "127.0.0.1:15590",
  "RemoteIpAddress": "::1"
}
2018-07-24 20:47:17.937 +01:00 [ERR] An unhandled exception has occurred while executing the request
System.ArgumentException: SubjectId is mandatory
Parameter name: subjectId
   at IdentityServer4.IdentityServerUser..ctor(String subjectId) in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\IdentityServerUser.cs:line 55
   at Microsoft.AspNetCore.Http.AuthenticationManagerExtensions.<SignInAsync>d__3.MoveNext() in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\Extensions\HttpContextAuthenticationExtensions.cs:line 97
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at IdentityServer4.Quickstart.UI.AccountController.<Login>d__7.MoveNext() in C:\Users\Steve\Documents\GitHub\TechDevs.Accounts\TechDevs.IdentityServer\Quickstart\Account\AccountController.cs:line 132
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeActionMethodAsync>d__12.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeNextActionFilterAsync>d__10.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeInnerFilterAsync>d__14.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeNextResourceFilter>d__22.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeFilterPipelineAsync>d__17.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeAsync>d__15.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.AspNetCore.Builder.RouterMiddleware.<Invoke>d__4.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 72
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.<Invoke>d__6.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.<Invoke>d__7.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at IdentityServer4.Hosting.BaseUrlMiddleware.<Invoke>d__3.MoveNext() in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\Hosting\BaseUrlMiddleware.cs:line 36
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()
2018-07-24 20:52:05.111 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-07-24 20:52:05.226 +01:00 [DBG] Using idsrv as default scheme for authentication
2018-07-24 20:52:05.231 +01:00 [DBG] Using idsrv as default scheme for sign-in
2018-07-24 20:52:05.231 +01:00 [DBG] Using idsrv as default scheme for sign-out
2018-07-24 20:52:05.231 +01:00 [DBG] Using idsrv as default scheme for challenge
2018-07-24 20:52:05.231 +01:00 [DBG] Using idsrv as default scheme for forbid
2018-07-24 20:53:39.082 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-07-24 20:53:39.126 +01:00 [DBG] Using idsrv as default scheme for authentication
2018-07-24 20:53:39.130 +01:00 [DBG] Using idsrv as default scheme for sign-in
2018-07-24 20:53:39.130 +01:00 [DBG] Using idsrv as default scheme for sign-out
2018-07-24 20:53:39.130 +01:00 [DBG] Using idsrv as default scheme for challenge
2018-07-24 20:53:39.130 +01:00 [DBG] Using idsrv as default scheme for forbid
2018-07-24 20:59:17.361 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-07-24 20:59:17.403 +01:00 [DBG] Using idsrv as default scheme for authentication
2018-07-24 20:59:17.406 +01:00 [DBG] Using idsrv as default scheme for sign-in
2018-07-24 20:59:17.406 +01:00 [DBG] Using idsrv as default scheme for sign-out
2018-07-24 20:59:17.406 +01:00 [DBG] Using idsrv as default scheme for challenge
2018-07-24 20:59:17.406 +01:00 [DBG] Using idsrv as default scheme for forbid
2018-07-24 21:05:48.081 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-07-24 21:05:48.125 +01:00 [DBG] Using idsrv as default scheme for authentication
2018-07-24 21:05:48.129 +01:00 [DBG] Using idsrv as default scheme for sign-in
2018-07-24 21:05:48.129 +01:00 [DBG] Using idsrv as default scheme for sign-out
2018-07-24 21:05:48.129 +01:00 [DBG] Using idsrv as default scheme for challenge
2018-07-24 21:05:48.129 +01:00 [DBG] Using idsrv as default scheme for forbid
2018-07-24 21:05:55.049 +01:00 [INF] AuthenticationScheme: idsrv was challenged.
2018-07-24 21:06:15.323 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2018-07-24 21:06:16.437 +01:00 [INF] {
  "Name": "User Login Failure",
  "Category": "Authentication",
  "EventType": "Failure",
  "Id": 1001,
  "Username": "steve@techdevs.net",
  "Endpoint": "UI",
  "Message": "invalid credentials",
  "ActivityId": "0HLFHK3CKR2K9:00000004",
  "TimeStamp": "2018-07-24T20:06:16Z",
  "ProcessId": 14928,
  "LocalIpAddress": "127.0.0.1:21790",
  "RemoteIpAddress": "::1"
}
2018-07-24 21:07:28.299 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2018-07-24 21:07:28.654 +01:00 [INF] {
  "Name": "User Login Failure",
  "Category": "Authentication",
  "EventType": "Failure",
  "Id": 1001,
  "Username": "steve@techdevs.net",
  "Endpoint": "UI",
  "Message": "invalid credentials",
  "ActivityId": "0HLFHK3CKR2KD:00000001",
  "TimeStamp": "2018-07-24T20:07:28Z",
  "ProcessId": 14928,
  "LocalIpAddress": "127.0.0.1:21790",
  "RemoteIpAddress": "::1"
}
2018-07-24 21:07:52.081 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2018-07-24 21:08:58.220 +01:00 [INF] {
  "Name": "User Login Failure",
  "Category": "Authentication",
  "EventType": "Failure",
  "Id": 1001,
  "Username": "steve@techdevs.net",
  "Endpoint": "UI",
  "Message": "invalid credentials",
  "ActivityId": "0HLFHK3CKR2KD:00000002",
  "TimeStamp": "2018-07-24T20:08:58Z",
  "ProcessId": 14928,
  "LocalIpAddress": "127.0.0.1:21790",
  "RemoteIpAddress": "::1"
}
2018-07-24 21:09:06.679 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2018-07-24 21:09:06.915 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "steve@techdevs.net",
  "SubjectId": "7a88f82d-c205-4113-aa77-3fa4316f9f21",
  "DisplayName": "steve@techdevs.net",
  "Endpoint": "UI",
  "ActivityId": "0HLFHK3CKR2KD:00000003",
  "TimeStamp": "2018-07-24T20:09:06Z",
  "ProcessId": 14928,
  "LocalIpAddress": "127.0.0.1:21790",
  "RemoteIpAddress": "::1"
}
2018-07-24 21:09:06.953 +01:00 [DBG] Augmenting SignInContext
2018-07-24 21:09:06.956 +01:00 [DBG] Adding idp claim with value: local
2018-07-24 21:09:06.956 +01:00 [DBG] Adding amr claim with value: pwd
2018-07-24 21:09:06.972 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2018-07-24 21:09:06.980 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:09:06.980 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:09:16.654 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:09:16.654 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:09:24.045 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:09:24.045 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:09:26.357 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:09:26.357 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:09:27.638 +01:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2018-07-24 21:09:27.639 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:09:27.639 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:09:27.667 +01:00 [INF] AuthenticationScheme: idsrv signed out.
2018-07-24 21:09:27.677 +01:00 [INF] {
  "Name": "User Logout Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1002,
  "SubjectId": "TechDevs",
  "DisplayName": "steve@techdevs.net",
  "ActivityId": "0HLFHK3CKR2KD:00000008",
  "TimeStamp": "2018-07-24T20:09:27Z",
  "ProcessId": 14928,
  "LocalIpAddress": "127.0.0.1:21790",
  "RemoteIpAddress": "::1"
}
2018-07-24 21:09:31.214 +01:00 [INF] AuthenticationScheme: idsrv was challenged.
2018-07-24 21:09:42.265 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2018-07-24 21:09:42.292 +01:00 [INF] {
  "Name": "User Login Failure",
  "Category": "Authentication",
  "EventType": "Failure",
  "Id": 1001,
  "Username": "adam@techdevs.net",
  "Endpoint": "UI",
  "Message": "invalid credentials",
  "ActivityId": "0HLFHK3CKR2KD:0000000C",
  "TimeStamp": "2018-07-24T20:09:42Z",
  "ProcessId": 14928,
  "LocalIpAddress": "127.0.0.1:21790",
  "RemoteIpAddress": "::1"
}
2018-07-24 21:09:49.727 +01:00 [INF] AuthenticationScheme: Google was challenged.
2018-07-24 21:09:54.024 +01:00 [INF] AuthenticationScheme: idsrv.external signed in.
2018-07-24 21:09:54.069 +01:00 [INF] AuthenticationScheme: idsrv.external was successfully authenticated.
2018-07-24 21:09:54.107 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Provider": "Google",
  "ProviderUserId": "107387075381855787656",
  "SubjectId": "4d63b2caa5985579c5277d2973d3309d680806de24b99183c7311efc94559a7d",
  "DisplayName": "Steve Kent",
  "Endpoint": "UI",
  "ActivityId": "0HLFHK3CKR2KD:0000000F",
  "TimeStamp": "2018-07-24T20:09:54Z",
  "ProcessId": 14928,
  "LocalIpAddress": "127.0.0.1:21790",
  "RemoteIpAddress": "::1"
}
2018-07-24 21:09:54.113 +01:00 [DBG] Augmenting SignInContext
2018-07-24 21:09:54.113 +01:00 [DBG] Adding amr claim with value: external
2018-07-24 21:09:54.113 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2018-07-24 21:09:54.114 +01:00 [INF] AuthenticationScheme: idsrv.external signed out.
2018-07-24 21:09:54.122 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:09:54.122 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:09:57.795 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:09:57.795 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:14:26.043 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-07-24 21:14:26.087 +01:00 [DBG] Using idsrv as default scheme for authentication
2018-07-24 21:14:26.090 +01:00 [DBG] Using idsrv as default scheme for sign-in
2018-07-24 21:14:26.090 +01:00 [DBG] Using idsrv as default scheme for sign-out
2018-07-24 21:14:26.090 +01:00 [DBG] Using idsrv as default scheme for challenge
2018-07-24 21:14:26.090 +01:00 [DBG] Using idsrv as default scheme for forbid
2018-07-24 21:14:32.243 +01:00 [INF] AuthenticationScheme: idsrv was challenged.
2018-07-24 21:14:35.362 +01:00 [INF] AuthenticationScheme: Google was challenged.
2018-07-24 21:14:39.903 +01:00 [INF] AuthenticationScheme: idsrv.external signed in.
2018-07-24 21:14:39.919 +01:00 [INF] AuthenticationScheme: idsrv.external was successfully authenticated.
2018-07-24 21:30:33.643 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-07-24 21:30:33.690 +01:00 [DBG] Using idsrv as default scheme for authentication
2018-07-24 21:30:33.694 +01:00 [DBG] Using idsrv as default scheme for sign-in
2018-07-24 21:30:33.694 +01:00 [DBG] Using idsrv as default scheme for sign-out
2018-07-24 21:30:33.694 +01:00 [DBG] Using idsrv as default scheme for challenge
2018-07-24 21:30:33.694 +01:00 [DBG] Using idsrv as default scheme for forbid
2018-07-24 21:30:46.874 +01:00 [INF] AuthenticationScheme: idsrv was challenged.
2018-07-24 21:31:07.836 +01:00 [INF] AuthenticationScheme: Google was challenged.
2018-07-24 21:31:11.051 +01:00 [INF] AuthenticationScheme: idsrv.external signed in.
2018-07-24 21:31:11.064 +01:00 [INF] AuthenticationScheme: idsrv.external was successfully authenticated.
2018-07-24 21:31:11.761 +01:00 [ERR] An unhandled exception has occurred while executing the request
System.Exception: User not found
   at TechDevs.Accounts.AccountService.<GetByProvider>d__9.MoveNext() in C:\Users\Steve\Documents\GitHub\TechDevs.Accounts\TechDevs.Accounts\Services\AccountService.cs:line 106
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at Host.Quickstart.Account.ExternalController.<FindUserFromExternalProvider>d__8.MoveNext() in C:\Users\Steve\Documents\GitHub\TechDevs.Accounts\TechDevs.IdentityServer\Quickstart\Account\ExternalController.cs:line 205
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at Host.Quickstart.Account.ExternalController.<Callback>d__6.MoveNext() in C:\Users\Steve\Documents\GitHub\TechDevs.Accounts\TechDevs.IdentityServer\Quickstart\Account\ExternalController.cs:line 96
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeActionMethodAsync>d__12.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeNextActionFilterAsync>d__10.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeInnerFilterAsync>d__14.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeNextResourceFilter>d__22.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeFilterPipelineAsync>d__17.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeAsync>d__15.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.AspNetCore.Builder.RouterMiddleware.<Invoke>d__4.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 72
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.<Invoke>d__6.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.<Invoke>d__7.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at IdentityServer4.Hosting.BaseUrlMiddleware.<Invoke>d__3.MoveNext() in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\Hosting\BaseUrlMiddleware.cs:line 36
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()
2018-07-24 21:32:07.386 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-07-24 21:32:07.428 +01:00 [DBG] Using idsrv as default scheme for authentication
2018-07-24 21:32:07.431 +01:00 [DBG] Using idsrv as default scheme for sign-in
2018-07-24 21:32:07.431 +01:00 [DBG] Using idsrv as default scheme for sign-out
2018-07-24 21:32:07.431 +01:00 [DBG] Using idsrv as default scheme for challenge
2018-07-24 21:32:07.431 +01:00 [DBG] Using idsrv as default scheme for forbid
2018-07-24 21:32:16.096 +01:00 [INF] AuthenticationScheme: idsrv was challenged.
2018-07-24 21:32:18.577 +01:00 [INF] AuthenticationScheme: Google was challenged.
2018-07-24 21:32:22.523 +01:00 [INF] AuthenticationScheme: idsrv.external signed in.
2018-07-24 21:32:22.536 +01:00 [INF] AuthenticationScheme: idsrv.external was successfully authenticated.
2018-07-24 21:32:24.184 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Provider": "Google",
  "ProviderUserId": "107387075381855787656",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "DisplayName": "steve@techdevs.net",
  "Endpoint": "UI",
  "ActivityId": "0HLFHKI38OOHN:00000004",
  "TimeStamp": "2018-07-24T20:32:24Z",
  "ProcessId": 4152,
  "LocalIpAddress": "127.0.0.1:2324",
  "RemoteIpAddress": "::1"
}
2018-07-24 21:32:24.196 +01:00 [DBG] Augmenting SignInContext
2018-07-24 21:32:24.199 +01:00 [DBG] Adding amr claim with value: external
2018-07-24 21:32:24.209 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2018-07-24 21:32:24.216 +01:00 [INF] AuthenticationScheme: idsrv.external signed out.
2018-07-24 21:32:24.222 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:32:24.222 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:32:27.236 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:32:27.237 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:33:06.148 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:33:06.148 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:33:08.332 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:33:08.332 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:33:09.503 +01:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2018-07-24 21:33:09.503 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:33:09.503 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:33:09.542 +01:00 [INF] AuthenticationScheme: idsrv signed out.
2018-07-24 21:33:09.555 +01:00 [INF] {
  "Name": "User Logout Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1002,
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "DisplayName": "steve@techdevs.net",
  "ActivityId": "0HLFHKI38OOHM:00000006",
  "TimeStamp": "2018-07-24T20:33:09Z",
  "ProcessId": 4152,
  "LocalIpAddress": "127.0.0.1:2324",
  "RemoteIpAddress": "::1"
}
2018-07-24 21:33:12.664 +01:00 [INF] AuthenticationScheme: idsrv was challenged.
2018-07-24 21:33:23.356 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2018-07-24 21:33:23.601 +01:00 [INF] {
  "Name": "User Login Failure",
  "Category": "Authentication",
  "EventType": "Failure",
  "Id": 1001,
  "Username": "steve@techdevs.net",
  "Endpoint": "UI",
  "Message": "invalid credentials",
  "ActivityId": "0HLFHKI38OOHM:00000008",
  "TimeStamp": "2018-07-24T20:33:23Z",
  "ProcessId": 4152,
  "LocalIpAddress": "127.0.0.1:2324",
  "RemoteIpAddress": "::1"
}
2018-07-24 21:35:30.528 +01:00 [INF] AuthenticationScheme: idsrv was challenged.
2018-07-24 21:35:32.426 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2018-07-24 21:35:32.566 +01:00 [INF] {
  "Name": "User Login Failure",
  "Category": "Authentication",
  "EventType": "Failure",
  "Id": 1001,
  "Username": "stevekent55@gmail.com",
  "Endpoint": "UI",
  "Message": "invalid credentials",
  "ActivityId": "0HLFHKI38OOHO:00000004",
  "TimeStamp": "2018-07-24T20:35:32Z",
  "ProcessId": 4152,
  "LocalIpAddress": "127.0.0.1:2324",
  "RemoteIpAddress": "::1"
}
2018-07-24 21:35:37.026 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2018-07-24 21:35:37.192 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "stevekent55@gmail.com",
  "SubjectId": "a80aca2d-284f-4995-b85a-ca0764fbe8a4",
  "DisplayName": "stevekent55@gmail.com",
  "Endpoint": "UI",
  "ActivityId": "0HLFHKI38OOHO:00000005",
  "TimeStamp": "2018-07-24T20:35:37Z",
  "ProcessId": 4152,
  "LocalIpAddress": "127.0.0.1:2324",
  "RemoteIpAddress": "::1"
}
2018-07-24 21:35:37.195 +01:00 [DBG] Augmenting SignInContext
2018-07-24 21:35:37.195 +01:00 [DBG] Adding idp claim with value: local
2018-07-24 21:35:37.195 +01:00 [DBG] Adding amr claim with value: pwd
2018-07-24 21:35:37.196 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2018-07-24 21:35:37.202 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:35:37.202 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:35:41.974 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:35:41.974 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:35:42.869 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:35:42.869 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:35:52.113 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:35:52.113 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:35:54.235 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:35:54.235 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:39:16.377 +01:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2018-07-24 21:39:16.378 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:39:16.378 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:39:16.380 +01:00 [INF] AuthenticationScheme: idsrv signed out.
2018-07-24 21:39:16.380 +01:00 [INF] {
  "Name": "User Logout Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1002,
  "SubjectId": "TechDevs",
  "DisplayName": "stevekent55@gmail.com",
  "ActivityId": "0HLFHKI38OOHP:00000001",
  "TimeStamp": "2018-07-24T20:39:16Z",
  "ProcessId": 4152,
  "LocalIpAddress": "127.0.0.1:2324",
  "RemoteIpAddress": "::1"
}
2018-07-24 21:39:23.618 +01:00 [INF] AuthenticationScheme: idsrv was challenged.
2018-07-24 21:39:27.998 +01:00 [INF] AuthenticationScheme: Google was challenged.
2018-07-24 21:39:30.992 +01:00 [INF] AuthenticationScheme: idsrv.external signed in.
2018-07-24 21:39:30.998 +01:00 [INF] AuthenticationScheme: idsrv.external was successfully authenticated.
2018-07-24 21:39:31.285 +01:00 [ERR] An unhandled exception has occurred while executing the request
TechDevs.Accounts.UserRegistrationException: Email address has already been registered

   at TechDevs.Accounts.AccountService.<ValidateCanRegister>d__5.MoveNext() in C:\Users\Steve\Documents\GitHub\TechDevs.Accounts\TechDevs.Accounts\Services\AccountService.cs:line 68
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at TechDevs.Accounts.AccountService.<RegisterUser>d__4.MoveNext() in C:\Users\Steve\Documents\GitHub\TechDevs.Accounts\TechDevs.Accounts\Services\AccountService.cs:line 29
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at Host.Quickstart.Account.ExternalController.<AutoProvisionUser>d__9.MoveNext() in C:\Users\Steve\Documents\GitHub\TechDevs.Accounts\TechDevs.IdentityServer\Quickstart\Account\ExternalController.cs:line 223
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at Host.Quickstart.Account.ExternalController.<Callback>d__6.MoveNext() in C:\Users\Steve\Documents\GitHub\TechDevs.Accounts\TechDevs.IdentityServer\Quickstart\Account\ExternalController.cs:line 102
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeActionMethodAsync>d__12.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeNextActionFilterAsync>d__10.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeInnerFilterAsync>d__14.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeNextResourceFilter>d__22.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeFilterPipelineAsync>d__17.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeAsync>d__15.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.AspNetCore.Builder.RouterMiddleware.<Invoke>d__4.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 72
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.<Invoke>d__6.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.<Invoke>d__7.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at IdentityServer4.Hosting.BaseUrlMiddleware.<Invoke>d__3.MoveNext() in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\Hosting\BaseUrlMiddleware.cs:line 36
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()
2018-07-24 21:40:30.217 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-07-24 21:40:30.258 +01:00 [DBG] Using idsrv as default scheme for authentication
2018-07-24 21:40:30.261 +01:00 [DBG] Using idsrv as default scheme for sign-in
2018-07-24 21:40:30.261 +01:00 [DBG] Using idsrv as default scheme for sign-out
2018-07-24 21:40:30.261 +01:00 [DBG] Using idsrv as default scheme for challenge
2018-07-24 21:40:30.261 +01:00 [DBG] Using idsrv as default scheme for forbid
2018-07-24 21:41:02.676 +01:00 [INF] AuthenticationScheme: idsrv was challenged.
2018-07-24 21:41:04.962 +01:00 [INF] AuthenticationScheme: Google was challenged.
2018-07-24 21:41:07.825 +01:00 [INF] AuthenticationScheme: idsrv.external signed in.
2018-07-24 21:41:07.842 +01:00 [INF] AuthenticationScheme: idsrv.external was successfully authenticated.
2018-07-24 21:43:10.342 +01:00 [WRN] Heartbeat took longer than ""00:00:01"" at ""2018-07-24T20:43:10.2923864+00:00"".
2018-07-24 21:43:45.080 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-07-24 21:43:45.120 +01:00 [DBG] Using idsrv as default scheme for authentication
2018-07-24 21:43:45.123 +01:00 [DBG] Using idsrv as default scheme for sign-in
2018-07-24 21:43:45.123 +01:00 [DBG] Using idsrv as default scheme for sign-out
2018-07-24 21:43:45.124 +01:00 [DBG] Using idsrv as default scheme for challenge
2018-07-24 21:43:45.124 +01:00 [DBG] Using idsrv as default scheme for forbid
2018-07-24 21:43:51.366 +01:00 [INF] AuthenticationScheme: idsrv was challenged.
2018-07-24 21:43:53.815 +01:00 [INF] AuthenticationScheme: Google was challenged.
2018-07-24 21:43:56.361 +01:00 [INF] AuthenticationScheme: idsrv.external signed in.
2018-07-24 21:43:56.376 +01:00 [INF] AuthenticationScheme: idsrv.external was successfully authenticated.
2018-07-24 21:44:00.976 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Provider": "Google",
  "ProviderUserId": "107387075381855787656",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "DisplayName": "steve@techdevs.net",
  "Endpoint": "UI",
  "ActivityId": "0HLFHKOJ6RU16:00000004",
  "TimeStamp": "2018-07-24T20:44:00Z",
  "ProcessId": 15884,
  "LocalIpAddress": "127.0.0.1:18770",
  "RemoteIpAddress": "::1"
}
2018-07-24 21:44:00.991 +01:00 [DBG] Augmenting SignInContext
2018-07-24 21:44:00.993 +01:00 [DBG] Adding amr claim with value: external
2018-07-24 21:44:01.003 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2018-07-24 21:44:01.010 +01:00 [INF] AuthenticationScheme: idsrv.external signed out.
2018-07-24 21:44:01.015 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:44:01.015 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:44:03.989 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:44:03.990 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:44:06.006 +01:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2018-07-24 21:44:06.006 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:44:06.007 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:44:06.046 +01:00 [INF] AuthenticationScheme: idsrv signed out.
2018-07-24 21:44:06.060 +01:00 [INF] {
  "Name": "User Logout Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1002,
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "DisplayName": "steve@techdevs.net",
  "ActivityId": "0HLFHKOJ6RU15:00000005",
  "TimeStamp": "2018-07-24T20:44:06Z",
  "ProcessId": 15884,
  "LocalIpAddress": "127.0.0.1:18770",
  "RemoteIpAddress": "::1"
}
2018-07-24 21:44:10.432 +01:00 [INF] AuthenticationScheme: idsrv was challenged.
2018-07-24 21:44:24.816 +01:00 [INF] AuthenticationScheme: Google was challenged.
2018-07-24 21:44:27.478 +01:00 [INF] AuthenticationScheme: idsrv.external signed in.
2018-07-24 21:44:27.483 +01:00 [INF] AuthenticationScheme: idsrv.external was successfully authenticated.
2018-07-24 21:44:27.512 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Provider": "Google",
  "ProviderUserId": "107387075381855787656",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "DisplayName": "steve@techdevs.net",
  "Endpoint": "UI",
  "ActivityId": "0HLFHKOJ6RU15:00000008",
  "TimeStamp": "2018-07-24T20:44:27Z",
  "ProcessId": 15884,
  "LocalIpAddress": "127.0.0.1:18770",
  "RemoteIpAddress": "::1"
}
2018-07-24 21:44:27.512 +01:00 [DBG] Augmenting SignInContext
2018-07-24 21:44:27.512 +01:00 [DBG] Adding amr claim with value: external
2018-07-24 21:44:27.513 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2018-07-24 21:44:27.513 +01:00 [INF] AuthenticationScheme: idsrv.external signed out.
2018-07-24 21:44:27.519 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:44:27.519 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:47:27.275 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-07-24 21:47:27.319 +01:00 [DBG] Using idsrv as default scheme for authentication
2018-07-24 21:47:27.322 +01:00 [DBG] Using idsrv as default scheme for sign-in
2018-07-24 21:47:27.322 +01:00 [DBG] Using idsrv as default scheme for sign-out
2018-07-24 21:47:27.322 +01:00 [DBG] Using idsrv as default scheme for challenge
2018-07-24 21:47:27.322 +01:00 [DBG] Using idsrv as default scheme for forbid
2018-07-24 21:47:33.341 +01:00 [INF] AuthenticationScheme: idsrv was challenged.
2018-07-24 21:47:35.610 +01:00 [INF] AuthenticationScheme: Google was challenged.
2018-07-24 21:47:38.385 +01:00 [INF] AuthenticationScheme: idsrv.external signed in.
2018-07-24 21:47:38.399 +01:00 [INF] AuthenticationScheme: idsrv.external was successfully authenticated.
2018-07-24 21:47:39.034 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Provider": "Google",
  "ProviderUserId": "107387075381855787656",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "DisplayName": "steve@techdevs.net",
  "Endpoint": "UI",
  "ActivityId": "0HLFHKQLEGO20:00000004",
  "TimeStamp": "2018-07-24T20:47:38Z",
  "ProcessId": 7084,
  "LocalIpAddress": "127.0.0.1:23750",
  "RemoteIpAddress": "::1"
}
2018-07-24 21:47:39.047 +01:00 [DBG] Augmenting SignInContext
2018-07-24 21:47:39.049 +01:00 [DBG] Adding amr claim with value: external
2018-07-24 21:47:39.059 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2018-07-24 21:47:39.066 +01:00 [INF] AuthenticationScheme: idsrv.external signed out.
2018-07-24 21:47:39.071 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:47:39.071 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:47:42.444 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:47:42.444 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:47:44.067 +01:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2018-07-24 21:47:44.067 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:47:44.067 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:47:44.105 +01:00 [INF] AuthenticationScheme: idsrv signed out.
2018-07-24 21:47:44.118 +01:00 [INF] {
  "Name": "User Logout Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1002,
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "DisplayName": "Steve Kent",
  "ActivityId": "0HLFHKQLEGO1V:00000005",
  "TimeStamp": "2018-07-24T20:47:44Z",
  "ProcessId": 7084,
  "LocalIpAddress": "127.0.0.1:23750",
  "RemoteIpAddress": "::1"
}
2018-07-24 21:47:46.494 +01:00 [INF] AuthenticationScheme: idsrv was challenged.
2018-07-24 21:47:47.990 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2018-07-24 21:47:48.260 +01:00 [INF] {
  "Name": "User Login Failure",
  "Category": "Authentication",
  "EventType": "Failure",
  "Id": 1001,
  "Username": "stevekent55@gmail.com",
  "Endpoint": "UI",
  "Message": "invalid credentials",
  "ActivityId": "0HLFHKQLEGO1V:00000007",
  "TimeStamp": "2018-07-24T20:47:48Z",
  "ProcessId": 7084,
  "LocalIpAddress": "127.0.0.1:23750",
  "RemoteIpAddress": "::1"
}
2018-07-24 21:47:52.321 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2018-07-24 21:47:52.486 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "stevekent55@gmail.com",
  "SubjectId": "a80aca2d-284f-4995-b85a-ca0764fbe8a4",
  "DisplayName": "stevekent55@gmail.com",
  "Endpoint": "UI",
  "ActivityId": "0HLFHKQLEGO20:00000008",
  "TimeStamp": "2018-07-24T20:47:52Z",
  "ProcessId": 7084,
  "LocalIpAddress": "127.0.0.1:23750",
  "RemoteIpAddress": "::1"
}
2018-07-24 21:47:52.491 +01:00 [DBG] Augmenting SignInContext
2018-07-24 21:47:52.491 +01:00 [DBG] Adding idp claim with value: local
2018-07-24 21:47:52.491 +01:00 [DBG] Adding amr claim with value: pwd
2018-07-24 21:47:52.491 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2018-07-24 21:47:52.496 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:47:52.496 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:47:58.775 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:47:58.775 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:48:00.945 +01:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2018-07-24 21:48:00.946 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:48:00.946 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:48:00.948 +01:00 [INF] AuthenticationScheme: idsrv signed out.
2018-07-24 21:48:00.948 +01:00 [INF] {
  "Name": "User Logout Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1002,
  "SubjectId": "TechDevs",
  "DisplayName": "stevekent55@gmail.com",
  "ActivityId": "0HLFHKQLEGO1V:00000009",
  "TimeStamp": "2018-07-24T20:48:00Z",
  "ProcessId": 7084,
  "LocalIpAddress": "127.0.0.1:23750",
  "RemoteIpAddress": "::1"
}
2018-07-24 21:48:55.569 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-07-24 21:48:55.610 +01:00 [DBG] Using idsrv as default scheme for authentication
2018-07-24 21:48:55.613 +01:00 [DBG] Using idsrv as default scheme for sign-in
2018-07-24 21:48:55.613 +01:00 [DBG] Using idsrv as default scheme for sign-out
2018-07-24 21:48:55.613 +01:00 [DBG] Using idsrv as default scheme for challenge
2018-07-24 21:48:55.613 +01:00 [DBG] Using idsrv as default scheme for forbid
2018-07-24 21:49:01.390 +01:00 [INF] AuthenticationScheme: idsrv was challenged.
2018-07-24 21:49:07.191 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2018-07-24 21:49:08.309 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "stevekent55@gmail.com",
  "SubjectId": "a80aca2d-284f-4995-b85a-ca0764fbe8a4",
  "DisplayName": "stevekent55@gmail.com",
  "Endpoint": "UI",
  "ActivityId": "0HLFHKRFN5F4I:00000004",
  "TimeStamp": "2018-07-24T20:49:08Z",
  "ProcessId": 16552,
  "LocalIpAddress": "127.0.0.1:13505",
  "RemoteIpAddress": "::1"
}
2018-07-24 21:49:08.337 +01:00 [DBG] Augmenting SignInContext
2018-07-24 21:49:08.340 +01:00 [DBG] Adding idp claim with value: local
2018-07-24 21:49:08.340 +01:00 [DBG] Adding amr claim with value: pwd
2018-07-24 21:49:08.358 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2018-07-24 21:49:08.368 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:49:08.368 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:49:16.437 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:49:16.438 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-24 21:50:11.817 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-07-24 21:50:11.863 +01:00 [DBG] Using idsrv as default scheme for authentication
2018-07-24 21:50:11.867 +01:00 [DBG] Using idsrv as default scheme for sign-in
2018-07-24 21:50:11.867 +01:00 [DBG] Using idsrv as default scheme for sign-out
2018-07-24 21:50:11.867 +01:00 [DBG] Using idsrv as default scheme for challenge
2018-07-24 21:50:11.867 +01:00 [DBG] Using idsrv as default scheme for forbid
2018-07-24 22:16:45.041 +01:00 [FTL] Application startup exception
System.NullReferenceException: Object reference not set to an instance of an object.
   at Sentry.SentryOptionsExtensions.AddEventProcessorProvider(SentryOptions options, Func`1 processorProvider) in C:\projects\sentry-dotnet\src\Sentry\SentryOptionsExtensions.cs:line 80
   at Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.UseServiceProviderProcessors(IServiceProvider provider) in C:\projects\sentry-dotnet\src\Sentry.AspNetCore\ApplicationBuilderExtensions.cs:line 37
   at Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.UseSentry(IApplicationBuilder app) in C:\projects\sentry-dotnet\src\Sentry.AspNetCore\ApplicationBuilderExtensions.cs:line 26
   at Sentry.AspNetCore.SentryStartupFilter.<>c__DisplayClass0_0.<Configure>b__0(IApplicationBuilder e) in C:\projects\sentry-dotnet\src\Sentry.AspNetCore\SentryStartupFilter.cs:line 13
   at Microsoft.AspNetCore.Server.IISIntegration.IISSetupFilter.<>c__DisplayClass3_0.<Configure>b__0(IApplicationBuilder app)
   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication()
2018-07-24 22:16:45.536 +01:00 [ERR] Connection id "0HLFHLB19CDJ4", Request id "0HLFHLB19CDJ4:00000001": An unhandled exception was thrown by the application.
System.ArgumentNullException: Value cannot be null.
Parameter name: values
   at System.String.Join(String separator, IEnumerable`1 values)
   at Microsoft.Extensions.RazorViews.BaseView.EndWriteAttribute()
   at Microsoft.AspNetCore.Hosting.Views.ErrorPage.<ExecuteAsync>d__6.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.Extensions.RazorViews.BaseView.<ExecuteAsync>d__30.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Frame`1.<ProcessRequestsAsync>d__2.MoveNext()
2018-07-24 22:16:45.573 +01:00 [ERR] Connection id "0HLFHLB19CDJ3", Request id "0HLFHLB19CDJ3:00000001": An unhandled exception was thrown by the application.
System.ObjectDisposedException: Cannot access a disposed object.
Object name: 'FrameResponseStream'.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.FrameResponseStream.ValidateState(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.FrameResponseStream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.FrameResponseStream.Write(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamWriter.Flush(Boolean flushStream, Boolean flushEncoder)
   at System.IO.StreamWriter.Write(String value)
   at Microsoft.AspNetCore.Hosting.Views.ErrorPage.<ExecuteAsync>d__6.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.Extensions.RazorViews.BaseView.<ExecuteAsync>d__30.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Frame`1.<ProcessRequestsAsync>d__2.MoveNext()
2018-07-24 22:16:58.127 +01:00 [FTL] Application startup exception
System.NullReferenceException: Object reference not set to an instance of an object.
   at Sentry.SentryOptionsExtensions.AddEventProcessorProvider(SentryOptions options, Func`1 processorProvider) in C:\projects\sentry-dotnet\src\Sentry\SentryOptionsExtensions.cs:line 80
   at Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.UseServiceProviderProcessors(IServiceProvider provider) in C:\projects\sentry-dotnet\src\Sentry.AspNetCore\ApplicationBuilderExtensions.cs:line 37
   at Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.UseSentry(IApplicationBuilder app) in C:\projects\sentry-dotnet\src\Sentry.AspNetCore\ApplicationBuilderExtensions.cs:line 26
   at Sentry.AspNetCore.SentryStartupFilter.<>c__DisplayClass0_0.<Configure>b__0(IApplicationBuilder e) in C:\projects\sentry-dotnet\src\Sentry.AspNetCore\SentryStartupFilter.cs:line 13
   at Microsoft.AspNetCore.Server.IISIntegration.IISSetupFilter.<>c__DisplayClass3_0.<Configure>b__0(IApplicationBuilder app)
   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication()
2018-07-24 22:16:58.485 +01:00 [ERR] Connection id "0HLFHLB5516CQ", Request id "0HLFHLB5516CQ:00000001": An unhandled exception was thrown by the application.
System.ArgumentNullException: Value cannot be null.
Parameter name: values
   at System.String.Join(String separator, IEnumerable`1 values)
   at Microsoft.Extensions.RazorViews.BaseView.EndWriteAttribute()
   at Microsoft.AspNetCore.Hosting.Views.ErrorPage.<ExecuteAsync>d__6.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.Extensions.RazorViews.BaseView.<ExecuteAsync>d__30.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Frame`1.<ProcessRequestsAsync>d__2.MoveNext()
2018-07-24 22:16:58.526 +01:00 [ERR] Connection id "0HLFHLB5516CR", Request id "0HLFHLB5516CR:00000001": An unhandled exception was thrown by the application.
System.ObjectDisposedException: Cannot access a disposed object.
Object name: 'FrameResponseStream'.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.FrameResponseStream.ValidateState(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.FrameResponseStream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.FrameResponseStream.Write(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamWriter.Flush(Boolean flushStream, Boolean flushEncoder)
   at System.IO.StreamWriter.Write(String value)
   at Microsoft.AspNetCore.Hosting.Views.ErrorPage.<ExecuteAsync>d__6.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.Extensions.RazorViews.BaseView.<ExecuteAsync>d__30.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Frame`1.<ProcessRequestsAsync>d__2.MoveNext()
2018-07-24 22:17:35.719 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-07-24 22:17:35.765 +01:00 [DBG] Using idsrv as default scheme for authentication
2018-07-24 22:17:35.771 +01:00 [DBG] Using idsrv as default scheme for sign-in
2018-07-24 22:17:35.771 +01:00 [DBG] Using idsrv as default scheme for sign-out
2018-07-24 22:17:35.771 +01:00 [DBG] Using idsrv as default scheme for challenge
2018-07-24 22:17:35.771 +01:00 [DBG] Using idsrv as default scheme for forbid
2018-07-25 13:15:09.361 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-07-25 13:15:09.418 +01:00 [DBG] Using idsrv as default scheme for authentication
2018-07-25 13:15:09.423 +01:00 [DBG] Using idsrv as default scheme for sign-in
2018-07-25 13:15:09.423 +01:00 [DBG] Using idsrv as default scheme for sign-out
2018-07-25 13:15:09.423 +01:00 [DBG] Using idsrv as default scheme for challenge
2018-07-25 13:15:09.423 +01:00 [DBG] Using idsrv as default scheme for forbid
2018-07-25 13:19:18.922 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-07-25 13:19:18.973 +01:00 [DBG] Using idsrv as default scheme for authentication
2018-07-25 13:19:18.977 +01:00 [DBG] Using idsrv as default scheme for sign-in
2018-07-25 13:19:18.977 +01:00 [DBG] Using idsrv as default scheme for sign-out
2018-07-25 13:19:18.977 +01:00 [DBG] Using idsrv as default scheme for challenge
2018-07-25 13:19:18.977 +01:00 [DBG] Using idsrv as default scheme for forbid
2018-07-25 13:23:16.772 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-07-25 13:23:16.814 +01:00 [DBG] Using idsrv as default scheme for authentication
2018-07-25 13:23:16.818 +01:00 [DBG] Using idsrv as default scheme for sign-in
2018-07-25 13:23:16.818 +01:00 [DBG] Using idsrv as default scheme for sign-out
2018-07-25 13:23:16.818 +01:00 [DBG] Using idsrv as default scheme for challenge
2018-07-25 13:23:16.818 +01:00 [DBG] Using idsrv as default scheme for forbid
2018-07-25 13:23:25.234 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-07-25 13:23:25.275 +01:00 [DBG] Using idsrv as default scheme for authentication
2018-07-25 13:23:25.278 +01:00 [DBG] Using idsrv as default scheme for sign-in
2018-07-25 13:23:25.278 +01:00 [DBG] Using idsrv as default scheme for sign-out
2018-07-25 13:23:25.278 +01:00 [DBG] Using idsrv as default scheme for challenge
2018-07-25 13:23:25.278 +01:00 [DBG] Using idsrv as default scheme for forbid
2018-07-25 13:26:22.548 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-07-25 13:26:22.604 +01:00 [DBG] Using idsrv as default scheme for authentication
2018-07-25 13:26:22.609 +01:00 [DBG] Using idsrv as default scheme for sign-in
2018-07-25 13:26:22.609 +01:00 [DBG] Using idsrv as default scheme for sign-out
2018-07-25 13:26:22.609 +01:00 [DBG] Using idsrv as default scheme for challenge
2018-07-25 13:26:22.609 +01:00 [DBG] Using idsrv as default scheme for forbid
2018-07-25 13:27:52.525 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-07-25 13:27:52.572 +01:00 [DBG] Using idsrv as default scheme for authentication
2018-07-25 13:27:52.576 +01:00 [DBG] Using idsrv as default scheme for sign-in
2018-07-25 13:27:52.576 +01:00 [DBG] Using idsrv as default scheme for sign-out
2018-07-25 13:27:52.576 +01:00 [DBG] Using idsrv as default scheme for challenge
2018-07-25 13:27:52.576 +01:00 [DBG] Using idsrv as default scheme for forbid
2018-07-25 14:03:19.671 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-07-25 14:03:19.790 +01:00 [DBG] Using idsrv as default scheme for authentication
2018-07-25 14:03:19.795 +01:00 [DBG] Using idsrv as default scheme for sign-in
2018-07-25 14:03:19.796 +01:00 [DBG] Using idsrv as default scheme for sign-out
2018-07-25 14:03:19.796 +01:00 [DBG] Using idsrv as default scheme for challenge
2018-07-25 14:03:19.796 +01:00 [DBG] Using idsrv as default scheme for forbid
2018-07-25 14:03:37.596 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 14:03:37.608 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 14:03:37.608 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 14:03:37.609 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 14:03:37.614 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 14:03:37.614 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 14:03:37.618 +01:00 [DBG] Start discovery request
2018-07-25 14:03:37.765 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-07-25 14:03:37.770 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-07-25 14:03:37.770 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-07-25 14:03:37.775 +01:00 [DBG] Start authorize request
2018-07-25 14:03:37.799 +01:00 [DBG] No user present in authorize request
2018-07-25 14:03:37.805 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 14:03:37.823 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:03:37.871 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 14:03:37.913 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1",
  "State": "c9e290cfb55c45449bdd601720c059fe",
  "Nonce": "fcaa537c6433490e8374549ad3c0da66",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1",
    "state": "c9e290cfb55c45449bdd601720c059fe",
    "nonce": "fcaa537c6433490e8374549ad3c0da66"
  }
}
2018-07-25 14:03:37.924 +01:00 [INF] Showing login: User is not authenticated
2018-07-25 14:03:38.584 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 14:03:38.586 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:03:38.586 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 14:03:38.593 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:03:42.373 +01:00 [INF] AuthenticationScheme: Google was challenged.
2018-07-25 14:05:41.523 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 14:05:41.523 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:05:41.523 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 14:05:41.523 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:05:42.674 +01:00 [INF] AuthenticationScheme: Google was challenged.
2018-07-25 14:05:51.145 +01:00 [INF] AuthenticationScheme: idsrv.external signed in.
2018-07-25 14:05:51.167 +01:00 [INF] AuthenticationScheme: idsrv.external was successfully authenticated.
2018-07-25 14:05:53.703 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Provider": "Google",
  "ProviderUserId": "107387075381855787656",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "DisplayName": "steve@techdevs.net",
  "Endpoint": "UI",
  "ActivityId": "0HLFI5RVH6SRN:00000005",
  "TimeStamp": "2018-07-25T13:05:53Z",
  "ProcessId": 14100,
  "LocalIpAddress": "127.0.0.1:15836",
  "RemoteIpAddress": "::1"
}
2018-07-25 14:05:53.719 +01:00 [DBG] Augmenting SignInContext
2018-07-25 14:05:53.721 +01:00 [DBG] Adding amr claim with value: external
2018-07-25 14:05:53.727 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2018-07-25 14:05:53.744 +01:00 [INF] AuthenticationScheme: idsrv.external signed out.
2018-07-25 14:05:53.744 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 14:05:53.744 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:05:53.745 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 14:05:53.747 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:05:53.761 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:05:53.762 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:05:53.762 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2018-07-25 14:05:53.763 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2018-07-25 14:05:53.763 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2018-07-25 14:05:53.771 +01:00 [DBG] Start authorize callback request
2018-07-25 14:05:53.779 +01:00 [DBG] User in authorize request: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 14:05:53.779 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 14:05:53.779 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:05:53.780 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 14:05:53.780 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1",
  "State": "c9e290cfb55c45449bdd601720c059fe",
  "Nonce": "fcaa537c6433490e8374549ad3c0da66",
  "SessionId": "b2570144edf9cab075d5f198a0d0fb12",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1",
    "state": "c9e290cfb55c45449bdd601720c059fe",
    "nonce": "fcaa537c6433490e8374549ad3c0da66"
  }
}
2018-07-25 14:05:53.781 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2018-07-25 14:05:53.799 +01:00 [DBG] user_consent grant with value: spa|5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 not found in store.
2018-07-25 14:05:53.800 +01:00 [DBG] Found no prior consent from consent store, consent is required
2018-07-25 14:05:53.800 +01:00 [INF] Showing consent: User has not yet consented
2018-07-25 14:05:53.808 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:05:53.808 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:05:53.847 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 14:05:53.847 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:05:53.848 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 14:05:53.848 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:05:55.474 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:05:55.474 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:05:55.480 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:05:55.480 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:05:55.480 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:05:55.480 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:05:55.506 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:05:55.506 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:05:55.506 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:05:55.506 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:05:55.535 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:05:55.535 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:06:05.764 +01:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2018-07-25 14:06:05.765 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:06:05.765 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:06:05.894 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 14:06:05.894 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:06:05.894 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 14:06:05.910 +01:00 [INF] {
  "Name": "Consent granted",
  "Category": "Grants",
  "EventType": "Information",
  "Id": 4000,
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ClientId": "spa",
  "RequestedScopes": [
    "openid",
    "profile",
    "api1"
  ],
  "GrantedScopes": [
    "openid",
    "profile",
    "api1"
  ],
  "ConsentRemembered": true,
  "ActivityId": "0HLFI5RVH6SRO:00000003",
  "TimeStamp": "2018-07-25T13:06:05Z",
  "ProcessId": 14100,
  "LocalIpAddress": "127.0.0.1:15836",
  "RemoteIpAddress": "::1"
}
2018-07-25 14:06:05.941 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:06:05.951 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:06:05.951 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:06:05.951 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2018-07-25 14:06:05.951 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2018-07-25 14:06:05.951 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2018-07-25 14:06:05.951 +01:00 [DBG] Start authorize callback request
2018-07-25 14:06:05.975 +01:00 [DBG] User in authorize request: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 14:06:05.975 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 14:06:05.976 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:06:05.976 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 14:06:05.976 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1",
  "State": "c9e290cfb55c45449bdd601720c059fe",
  "Nonce": "fcaa537c6433490e8374549ad3c0da66",
  "SessionId": "b2570144edf9cab075d5f198a0d0fb12",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1",
    "state": "c9e290cfb55c45449bdd601720c059fe",
    "nonce": "fcaa537c6433490e8374549ad3c0da66"
  }
}
2018-07-25 14:06:05.976 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2018-07-25 14:06:05.976 +01:00 [DBG] user_consent grant with value: spa|5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 not found in store.
2018-07-25 14:06:05.976 +01:00 [DBG] Found no prior consent from consent store, consent is required
2018-07-25 14:06:05.991 +01:00 [INF] User consented to scopes: ["openid","profile","api1"]
2018-07-25 14:06:06.004 +01:00 [DBG] User indicated to remember consent for scopes: ["openid","profile","api1"]
2018-07-25 14:06:06.007 +01:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 14:06:06.023 +01:00 [DBG] Creating Implicit Flow response.
2018-07-25 14:06:06.033 +01:00 [DBG] Getting claims for access token for client: spa
2018-07-25 14:06:06.034 +01:00 [DBG] Getting claims for access token for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 14:06:06.042 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types [] via ClaimsProviderAccessToken
2018-07-25 14:06:06.044 +01:00 [DBG] Issued claims: []
2018-07-25 14:06:06.145 +01:00 [DBG] Getting claims for identity token for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 and client: spa
2018-07-25 14:06:06.145 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-07-25 14:06:06.159 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "Endpoint": "Authorize",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "Scopes": "openid profile api1",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****Qn2A"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****07xg"
    }
  ],
  "ActivityId": "0HLFI5RVH6SRN:0000000C",
  "TimeStamp": "2018-07-25T13:06:06Z",
  "ProcessId": 14100,
  "LocalIpAddress": "127.0.0.1:15836",
  "RemoteIpAddress": "::1"
}
2018-07-25 14:06:06.164 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ClientId": "spa",
  "RedirectUri": "http://localhost:5003/callback.html",
  "State": "c9e290cfb55c45449bdd601720c059fe",
  "Scope": "openid profile api1"
}
2018-07-25 14:06:06.187 +01:00 [DBG] Augmenting SignInContext
2018-07-25 14:06:06.187 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2018-07-25 14:06:06.704 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 14:06:06.704 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 14:06:06.704 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 14:06:06.704 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 14:06:06.704 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 14:06:06.704 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 14:06:06.705 +01:00 [DBG] Start discovery request
2018-07-25 14:06:06.753 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:5003
2018-07-25 14:06:06.753 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 14:06:06.753 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 14:06:06.753 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-07-25 14:06:06.754 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-07-25 14:06:06.754 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-07-25 14:06:06.759 +01:00 [DBG] Start key discovery request
2018-07-25 14:06:06.860 +01:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:5003
2018-07-25 14:06:06.860 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 14:06:06.860 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 14:06:06.861 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-07-25 14:06:06.863 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-07-25 14:06:06.863 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-07-25 14:06:06.874 +01:00 [DBG] Start userinfo request
2018-07-25 14:06:06.879 +01:00 [DBG] Bearer token found in header
2018-07-25 14:06:06.963 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:06:06.966 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:06:06.967 +01:00 [DBG] IsActive called from: AccessTokenValidation
2018-07-25 14:06:06.968 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 14:06:06.973 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1532523966,
    "exp": 1532527566,
    "iss": "http://localhost:5000",
    "aud": [
      "http://localhost:5000/resources",
      "api1"
    ],
    "client_id": "spa",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532523953,
    "idp": "Google",
    "scope": [
      "openid",
      "profile",
      "api1"
    ],
    "amr": "external"
  }
}
2018-07-25 14:06:06.975 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2018-07-25 14:06:06.985 +01:00 [DBG] Creating userinfo response
2018-07-25 14:06:06.990 +01:00 [DBG] Scopes in access token: openid profile api1
2018-07-25 14:06:06.993 +01:00 [DBG] Scopes in access token: openid profile api1
2018-07-25 14:06:06.997 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-07-25 14:06:06.997 +01:00 [DBG] Scopes in access token: openid profile api1
2018-07-25 14:06:06.997 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2018-07-25 14:06:06.998 +01:00 [DBG] Issued claims: ["sub"]
2018-07-25 14:06:06.999 +01:00 [INF] Profile service returned to the following claim types: sub
2018-07-25 14:06:06.999 +01:00 [DBG] End userinfo request
2018-07-25 14:06:07.011 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:06:07.011 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:06:07.012 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 14:06:07.012 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 14:06:07.012 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 14:06:07.013 +01:00 [DBG] Rendering check session result
2018-07-25 14:06:07.177 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 14:06:07.177 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 14:06:07.177 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 14:06:07.177 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 14:06:07.177 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 14:06:07.177 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 14:06:07.177 +01:00 [DBG] Start discovery request
2018-07-25 14:06:07.205 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:06:07.205 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:06:07.205 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 14:06:07.205 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 14:06:07.205 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 14:06:07.205 +01:00 [DBG] Rendering check session result
2018-07-25 14:06:45.309 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-07-25 14:06:45.446 +01:00 [DBG] Using idsrv as default scheme for authentication
2018-07-25 14:06:45.451 +01:00 [DBG] Using idsrv as default scheme for sign-in
2018-07-25 14:06:45.453 +01:00 [DBG] Using idsrv as default scheme for sign-out
2018-07-25 14:06:45.454 +01:00 [DBG] Using idsrv as default scheme for challenge
2018-07-25 14:06:45.454 +01:00 [DBG] Using idsrv as default scheme for forbid
2018-07-25 14:06:46.665 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:06:46.684 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:06:55.093 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:06:55.093 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:06:55.093 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:06:55.093 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:06:55.093 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:06:55.093 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:06:55.093 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:06:55.094 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:06:55.094 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:06:55.094 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:06:55.095 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:06:55.095 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:06:58.362 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:06:58.363 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:06:58.367 +01:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2018-07-25 14:06:58.371 +01:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2018-07-25 14:06:58.372 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2018-07-25 14:06:58.391 +01:00 [DBG] Processing signout request for 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 14:06:58.396 +01:00 [DBG] Start end session request validation
2018-07-25 14:06:58.405 +01:00 [DBG] Start identity token validation
2018-07-25 14:06:58.477 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:06:58.477 +01:00 [DBG] Client found: spa / SPA Client
2018-07-25 14:06:58.576 +01:00 [DBG] IsActive called from: IdentityTokenValidation
2018-07-25 14:06:58.576 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 14:06:58.605 +01:00 [DBG] Token validation success
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "ValidateLifetime": false,
  "Claims": {
    "nbf": 1532523966,
    "exp": 1532524266,
    "iss": "http://localhost:5000",
    "aud": "spa",
    "nonce": "fcaa537c6433490e8374549ad3c0da66",
    "iat": 1532523966,
    "at_hash": "HqIahnJn-x1gD0CRPjFNZg",
    "sid": "b2570144edf9cab075d5f198a0d0fb12",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532523953,
    "idp": "Google",
    "amr": "external"
  }
}
2018-07-25 14:06:58.640 +01:00 [INF] End session request validation success
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "PostLogOutUri": "http://localhost:5003/index.html",
  "Raw": {
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjUxZTMyMGM2ODUzZjVmZmY4MDA2YTEwODE3Y2JiMTNiIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1MzI1MjM5NjYsImV4cCI6MTUzMjUyNDI2NiwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiJmY2FhNTM3YzY0MzM0OTBlODM3NDU0OWFkM2MwZGE2NiIsImlhdCI6MTUzMjUyMzk2NiwiYXRfaGFzaCI6IkhxSWFobkpuLXgxZ0QwQ1JQakZOWmciLCJzaWQiOiJiMjU3MDE0NGVkZjljYWIwNzVkNWYxOThhMGQwZmIxMiIsInN1YiI6IjVlNWMwMmE2LTJhZjEtNDdkMy1iOWRiLWE2YjE2MGQ4Y2E1OSIsImF1dGhfdGltZSI6MTUzMjUyMzk1MywiaWRwIjoiR29vZ2xlIiwiYW1yIjpbImV4dGVybmFsIl19.IIaHw38nxay44s9PWXvNvAzcCKFokNW47L16d45Gm__qXl69vzwgaopJl4hvrXMXGeA0W7pWTxb1-xFgJ5cck3gFrkxEhDw02f5ZLe5GIX11JoJ2K94DQc1kMhEq-zJlIPbyFRdoFQO1M40hkF_kDgFn8KcgTMmtPbfoZDoMNIf1fHJ-ojRmjhbCJW52JK9EWhrFlYOwTMs1GI7aCkDINzFhG5DYgDweSPRjfK8X2fFYHnQlnrHd3ytZYVYiyVDFMziLRMSHnW0-SjI9X900H0BrjRbFBfb4DxM9_pnm_IoVs1VU-TziFxfaue_qbfRnVlkpULo0uq3ufGwjYHQn2A",
    "post_logout_redirect_uri": "http://localhost:5003/index.html"
  }
}
2018-07-25 14:06:58.641 +01:00 [DBG] Success validating end session request from spa
2018-07-25 14:06:58.679 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:06:58.680 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:06:59.378 +01:00 [INF] AuthenticationScheme: idsrv signed out.
2018-07-25 14:06:59.415 +01:00 [INF] {
  "Name": "User Logout Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1002,
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "DisplayName": "Steve Kent",
  "ActivityId": "0HLFI5TSQGHFL:00000002",
  "TimeStamp": "2018-07-25T13:06:59Z",
  "ProcessId": 20516,
  "LocalIpAddress": "127.0.0.1:1743",
  "RemoteIpAddress": "::1"
}
2018-07-25 14:07:00.358 +01:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2018-07-25 14:07:00.363 +01:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2018-07-25 14:07:00.363 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2018-07-25 14:07:00.403 +01:00 [DBG] Processing signout callback request
2018-07-25 14:07:00.418 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:07:00.418 +01:00 [DBG] No client front-channel logout URLs
2018-07-25 14:07:00.418 +01:00 [DBG] No client back-channel logout URLs
2018-07-25 14:07:00.418 +01:00 [INF] Successful signout callback.
2018-07-25 14:07:00.418 +01:00 [DBG] No client front-channel iframe urls
2018-07-25 14:07:00.418 +01:00 [DBG] No client back-channel iframe urls
2018-07-25 14:07:02.823 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 14:07:02.830 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 14:07:02.830 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 14:07:02.831 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 14:07:02.833 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 14:07:02.833 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 14:07:02.838 +01:00 [DBG] Start discovery request
2018-07-25 14:07:02.905 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-07-25 14:07:02.909 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-07-25 14:07:02.909 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-07-25 14:07:02.914 +01:00 [DBG] Start authorize request
2018-07-25 14:07:02.921 +01:00 [DBG] No user present in authorize request
2018-07-25 14:07:02.930 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 14:07:02.938 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:07:02.985 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 14:07:02.996 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1",
  "State": "a768c2bd889c4463968a0637835fae90",
  "Nonce": "f1321b7368004957ad0f16934bbd405e",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1",
    "state": "a768c2bd889c4463968a0637835fae90",
    "nonce": "f1321b7368004957ad0f16934bbd405e"
  }
}
2018-07-25 14:07:03.006 +01:00 [INF] Showing login: User is not authenticated
2018-07-25 14:07:03.039 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 14:07:03.039 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:07:03.039 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 14:07:03.046 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:07:06.708 +01:00 [INF] AuthenticationScheme: Google was challenged.
2018-07-25 14:07:11.347 +01:00 [INF] AuthenticationScheme: idsrv.external signed in.
2018-07-25 14:07:11.363 +01:00 [INF] AuthenticationScheme: idsrv.external was successfully authenticated.
2018-07-25 14:07:13.917 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Provider": "Google",
  "ProviderUserId": "107387075381855787656",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "DisplayName": "steve@techdevs.net",
  "Endpoint": "UI",
  "ActivityId": "0HLFI5TSQGHFL:00000004",
  "TimeStamp": "2018-07-25T13:07:13Z",
  "ProcessId": 20516,
  "LocalIpAddress": "127.0.0.1:1743",
  "RemoteIpAddress": "::1"
}
2018-07-25 14:07:13.932 +01:00 [DBG] Augmenting SignInContext
2018-07-25 14:07:13.935 +01:00 [DBG] Adding amr claim with value: external
2018-07-25 14:07:13.941 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2018-07-25 14:07:13.941 +01:00 [INF] AuthenticationScheme: idsrv.external signed out.
2018-07-25 14:07:13.942 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 14:07:13.942 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:07:13.942 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 14:07:13.945 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:07:13.963 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:07:13.964 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:07:13.964 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2018-07-25 14:07:13.965 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2018-07-25 14:07:13.965 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2018-07-25 14:07:13.972 +01:00 [DBG] Start authorize callback request
2018-07-25 14:07:13.982 +01:00 [DBG] User in authorize request: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 14:07:13.982 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 14:07:13.982 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:07:13.982 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 14:07:13.983 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1",
  "State": "a768c2bd889c4463968a0637835fae90",
  "Nonce": "f1321b7368004957ad0f16934bbd405e",
  "SessionId": "47075129120271a7911fc67b5d840139",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1",
    "state": "a768c2bd889c4463968a0637835fae90",
    "nonce": "f1321b7368004957ad0f16934bbd405e"
  }
}
2018-07-25 14:07:13.983 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2018-07-25 14:07:14.003 +01:00 [DBG] user_consent grant with value: spa|5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 not found in store.
2018-07-25 14:07:14.004 +01:00 [DBG] Found no prior consent from consent store, consent is required
2018-07-25 14:07:14.004 +01:00 [INF] Showing consent: User has not yet consented
2018-07-25 14:07:14.013 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:07:14.013 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:07:14.049 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 14:07:14.049 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:07:14.049 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 14:07:14.049 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:07:15.683 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:07:15.683 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:07:17.026 +01:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2018-07-25 14:07:17.026 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:07:17.026 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:07:17.173 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 14:07:17.173 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:07:17.173 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 14:07:17.185 +01:00 [INF] {
  "Name": "Consent granted",
  "Category": "Grants",
  "EventType": "Information",
  "Id": 4000,
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ClientId": "spa",
  "RequestedScopes": [
    "openid",
    "profile",
    "api1"
  ],
  "GrantedScopes": [
    "openid",
    "profile",
    "api1"
  ],
  "ConsentRemembered": true,
  "ActivityId": "0HLFI5TSQGHFK:00000005",
  "TimeStamp": "2018-07-25T13:07:17Z",
  "ProcessId": 20516,
  "LocalIpAddress": "127.0.0.1:1743",
  "RemoteIpAddress": "::1"
}
2018-07-25 14:07:17.206 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:07:17.216 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:07:17.216 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:07:17.216 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2018-07-25 14:07:17.216 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2018-07-25 14:07:17.216 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2018-07-25 14:07:17.216 +01:00 [DBG] Start authorize callback request
2018-07-25 14:07:17.222 +01:00 [DBG] User in authorize request: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 14:07:17.223 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 14:07:17.223 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:07:17.223 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 14:07:17.223 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1",
  "State": "a768c2bd889c4463968a0637835fae90",
  "Nonce": "f1321b7368004957ad0f16934bbd405e",
  "SessionId": "47075129120271a7911fc67b5d840139",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1",
    "state": "a768c2bd889c4463968a0637835fae90",
    "nonce": "f1321b7368004957ad0f16934bbd405e"
  }
}
2018-07-25 14:07:17.223 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2018-07-25 14:07:17.223 +01:00 [DBG] user_consent grant with value: spa|5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 not found in store.
2018-07-25 14:07:17.223 +01:00 [DBG] Found no prior consent from consent store, consent is required
2018-07-25 14:07:17.236 +01:00 [INF] User consented to scopes: ["openid","profile","api1"]
2018-07-25 14:07:17.250 +01:00 [DBG] User indicated to remember consent for scopes: ["openid","profile","api1"]
2018-07-25 14:07:17.255 +01:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 14:07:17.277 +01:00 [DBG] Creating Implicit Flow response.
2018-07-25 14:07:17.291 +01:00 [DBG] Getting claims for access token for client: spa
2018-07-25 14:07:17.292 +01:00 [DBG] Getting claims for access token for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 14:07:17.301 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types [] via ClaimsProviderAccessToken
2018-07-25 14:07:17.303 +01:00 [DBG] Issued claims: []
2018-07-25 14:07:17.352 +01:00 [DBG] Getting claims for identity token for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 and client: spa
2018-07-25 14:07:17.352 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-07-25 14:07:17.368 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "Endpoint": "Authorize",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "Scopes": "openid profile api1",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****VWRQ"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****PXbg"
    }
  ],
  "ActivityId": "0HLFI5TSQGHFP:00000004",
  "TimeStamp": "2018-07-25T13:07:17Z",
  "ProcessId": 20516,
  "LocalIpAddress": "127.0.0.1:1743",
  "RemoteIpAddress": "::1"
}
2018-07-25 14:07:17.372 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ClientId": "spa",
  "RedirectUri": "http://localhost:5003/callback.html",
  "State": "a768c2bd889c4463968a0637835fae90",
  "Scope": "openid profile api1"
}
2018-07-25 14:07:17.389 +01:00 [DBG] Augmenting SignInContext
2018-07-25 14:07:17.390 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2018-07-25 14:07:17.884 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 14:07:17.884 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 14:07:17.884 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 14:07:17.884 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 14:07:17.884 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 14:07:17.884 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 14:07:17.884 +01:00 [DBG] Start discovery request
2018-07-25 14:07:17.936 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:5003
2018-07-25 14:07:17.936 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 14:07:17.936 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 14:07:17.936 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-07-25 14:07:17.937 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-07-25 14:07:17.937 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-07-25 14:07:17.942 +01:00 [DBG] Start key discovery request
2018-07-25 14:07:18.036 +01:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:5003
2018-07-25 14:07:18.036 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 14:07:18.036 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 14:07:18.037 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-07-25 14:07:18.038 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-07-25 14:07:18.038 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-07-25 14:07:18.048 +01:00 [DBG] Start userinfo request
2018-07-25 14:07:18.053 +01:00 [DBG] Bearer token found in header
2018-07-25 14:07:18.071 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:07:18.071 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:07:18.072 +01:00 [DBG] IsActive called from: AccessTokenValidation
2018-07-25 14:07:18.072 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 14:07:18.073 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1532524037,
    "exp": 1532527637,
    "iss": "http://localhost:5000",
    "aud": [
      "http://localhost:5000/resources",
      "api1"
    ],
    "client_id": "spa",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532524033,
    "idp": "Google",
    "scope": [
      "openid",
      "profile",
      "api1"
    ],
    "amr": "external"
  }
}
2018-07-25 14:07:18.074 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2018-07-25 14:07:18.083 +01:00 [DBG] Creating userinfo response
2018-07-25 14:07:18.089 +01:00 [DBG] Scopes in access token: openid profile api1
2018-07-25 14:07:18.093 +01:00 [DBG] Scopes in access token: openid profile api1
2018-07-25 14:07:18.097 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-07-25 14:07:18.097 +01:00 [DBG] Scopes in access token: openid profile api1
2018-07-25 14:07:18.097 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2018-07-25 14:07:18.099 +01:00 [DBG] Issued claims: ["sub"]
2018-07-25 14:07:18.099 +01:00 [INF] Profile service returned to the following claim types: sub
2018-07-25 14:07:18.099 +01:00 [DBG] End userinfo request
2018-07-25 14:07:18.114 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:07:18.114 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:07:18.114 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 14:07:18.115 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 14:07:18.115 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 14:07:18.116 +01:00 [DBG] Rendering check session result
2018-07-25 14:07:18.304 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 14:07:18.304 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 14:07:18.304 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 14:07:18.304 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 14:07:18.304 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 14:07:18.305 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 14:07:18.305 +01:00 [DBG] Start discovery request
2018-07-25 14:07:18.333 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:07:18.333 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:07:18.333 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 14:07:18.333 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 14:07:18.333 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 14:07:18.333 +01:00 [DBG] Rendering check session result
2018-07-25 14:17:54.868 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-07-25 14:17:54.983 +01:00 [DBG] Using idsrv as default scheme for authentication
2018-07-25 14:17:54.989 +01:00 [DBG] Using idsrv as default scheme for sign-in
2018-07-25 14:17:54.991 +01:00 [DBG] Using idsrv as default scheme for sign-out
2018-07-25 14:17:54.992 +01:00 [DBG] Using idsrv as default scheme for challenge
2018-07-25 14:17:54.993 +01:00 [DBG] Using idsrv as default scheme for forbid
2018-07-25 14:17:56.146 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:17:56.168 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:18:00.372 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 14:18:00.380 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 14:18:00.380 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 14:18:00.384 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 14:18:00.389 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 14:18:00.389 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 14:18:00.396 +01:00 [DBG] Start discovery request
2018-07-25 14:18:00.571 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:18:00.571 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:18:00.571 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 14:18:00.571 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 14:18:00.572 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 14:18:00.573 +01:00 [DBG] Rendering check session result
2018-07-25 14:18:01.051 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:18:01.051 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:18:01.051 +01:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2018-07-25 14:18:01.056 +01:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2018-07-25 14:18:01.056 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2018-07-25 14:18:01.083 +01:00 [DBG] Processing signout request for 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 14:18:01.093 +01:00 [DBG] Start end session request validation
2018-07-25 14:18:01.104 +01:00 [DBG] Start identity token validation
2018-07-25 14:18:01.159 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:18:01.159 +01:00 [DBG] Client found: spa / SPA Client
2018-07-25 14:18:01.245 +01:00 [DBG] IsActive called from: IdentityTokenValidation
2018-07-25 14:18:01.245 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 14:18:01.260 +01:00 [DBG] Token validation success
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "ValidateLifetime": false,
  "Claims": {
    "nbf": 1532524037,
    "exp": 1532524337,
    "iss": "http://localhost:5000",
    "aud": "spa",
    "nonce": "f1321b7368004957ad0f16934bbd405e",
    "iat": 1532524037,
    "at_hash": "YNe-xEoGjI-48k024hddqg",
    "sid": "47075129120271a7911fc67b5d840139",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532524033,
    "idp": "Google",
    "amr": "external"
  }
}
2018-07-25 14:18:01.296 +01:00 [INF] End session request validation success
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "PostLogOutUri": "http://localhost:5003/index.html",
  "Raw": {
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjUxZTMyMGM2ODUzZjVmZmY4MDA2YTEwODE3Y2JiMTNiIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1MzI1MjQwMzcsImV4cCI6MTUzMjUyNDMzNywiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiJmMTMyMWI3MzY4MDA0OTU3YWQwZjE2OTM0YmJkNDA1ZSIsImlhdCI6MTUzMjUyNDAzNywiYXRfaGFzaCI6IllOZS14RW9HakktNDhrMDI0aGRkcWciLCJzaWQiOiI0NzA3NTEyOTEyMDI3MWE3OTExZmM2N2I1ZDg0MDEzOSIsInN1YiI6IjVlNWMwMmE2LTJhZjEtNDdkMy1iOWRiLWE2YjE2MGQ4Y2E1OSIsImF1dGhfdGltZSI6MTUzMjUyNDAzMywiaWRwIjoiR29vZ2xlIiwiYW1yIjpbImV4dGVybmFsIl19.j2NPczn4vIH4rN5t0lD3-vfyta21U_dBH81rohlgfVAJYuquhx8WpHcez-irGNxDDSfWEeTDn2sW-eKKhL8c_O24kCAUj7EWQp91IGkRVcuiSy8zqOQ9vbevLyGPgxtCLc7PGPtKHmdS4LK6p3qju8LLjtlCNrLW0LZMNuw4vDDzo24Glh-ISUd0SnEeOFrOvkN_ZXQpf9VXhMn4BCF0EwO5UEq14f-y9kpSEaVfxmDmWGGA-j53rPjZ3jAWGwfRqZ47ulcg3NoP5dpaqANUyCFHEwoYyFptLjfZZawC64tMF9B-btygZJxi9o6Bd7FgLuEeRsepP9DxRyhATGVWRQ",
    "post_logout_redirect_uri": "http://localhost:5003/index.html"
  }
}
2018-07-25 14:18:01.296 +01:00 [DBG] Success validating end session request from spa
2018-07-25 14:18:01.340 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:18:01.340 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:18:02.098 +01:00 [INF] AuthenticationScheme: idsrv signed out.
2018-07-25 14:18:02.142 +01:00 [INF] {
  "Name": "User Logout Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1002,
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "DisplayName": "Steve Kent",
  "ActivityId": "0HLFI644B4RO4:00000005",
  "TimeStamp": "2018-07-25T13:18:02Z",
  "ProcessId": 7308,
  "LocalIpAddress": "127.0.0.1:25308",
  "RemoteIpAddress": "::1"
}
2018-07-25 14:18:08.210 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 14:18:08.211 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 14:18:08.211 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 14:18:08.211 +01:00 [DBG] Start discovery request
2018-07-25 14:18:08.907 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-07-25 14:18:08.912 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-07-25 14:18:08.913 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-07-25 14:18:08.920 +01:00 [DBG] Start key discovery request
2018-07-25 14:18:09.066 +01:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2018-07-25 14:18:09.070 +01:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2018-07-25 14:18:09.071 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2018-07-25 14:18:09.081 +01:00 [DBG] Processing signout callback request
2018-07-25 14:18:09.116 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:18:09.117 +01:00 [DBG] No client front-channel logout URLs
2018-07-25 14:18:09.117 +01:00 [DBG] No client back-channel logout URLs
2018-07-25 14:18:09.117 +01:00 [INF] Successful signout callback.
2018-07-25 14:18:09.117 +01:00 [DBG] No client front-channel iframe urls
2018-07-25 14:18:09.117 +01:00 [DBG] No client back-channel iframe urls
2018-07-25 14:19:54.017 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 14:19:54.017 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 14:19:54.017 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 14:19:54.017 +01:00 [DBG] Start discovery request
2018-07-25 14:23:15.847 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 14:23:15.848 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 14:23:15.851 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 14:23:15.851 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 14:23:15.851 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 14:23:15.851 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 14:23:15.851 +01:00 [DBG] Start discovery request
2018-07-25 14:23:15.867 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-07-25 14:23:15.873 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-07-25 14:23:15.874 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-07-25 14:23:15.879 +01:00 [DBG] Start authorize request
2018-07-25 14:23:15.884 +01:00 [DBG] No user present in authorize request
2018-07-25 14:23:15.890 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 14:23:15.896 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:23:15.942 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 14:23:15.954 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1",
  "State": "17b31889abf34a28a42f056210e14985",
  "Nonce": "0295e3b28fa143278a4d090a826e7ddb",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1",
    "state": "17b31889abf34a28a42f056210e14985",
    "nonce": "0295e3b28fa143278a4d090a826e7ddb"
  }
}
2018-07-25 14:23:15.965 +01:00 [INF] Showing login: User is not authenticated
2018-07-25 14:23:16.008 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 14:23:16.009 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:23:16.009 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 14:23:16.015 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:23:21.175 +01:00 [INF] AuthenticationScheme: Google was challenged.
2018-07-25 14:23:25.772 +01:00 [INF] AuthenticationScheme: idsrv.external signed in.
2018-07-25 14:23:25.790 +01:00 [INF] AuthenticationScheme: idsrv.external was successfully authenticated.
2018-07-25 14:23:28.169 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Provider": "Google",
  "ProviderUserId": "107387075381855787656",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "DisplayName": "steve@techdevs.net",
  "Endpoint": "UI",
  "ActivityId": "0HLFI644B4ROI:00000006",
  "TimeStamp": "2018-07-25T13:23:28Z",
  "ProcessId": 7308,
  "LocalIpAddress": "127.0.0.1:25308",
  "RemoteIpAddress": "::1"
}
2018-07-25 14:23:28.184 +01:00 [DBG] Augmenting SignInContext
2018-07-25 14:23:28.188 +01:00 [DBG] Adding amr claim with value: external
2018-07-25 14:23:28.194 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2018-07-25 14:23:28.194 +01:00 [INF] AuthenticationScheme: idsrv.external signed out.
2018-07-25 14:23:28.195 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 14:23:28.195 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:23:28.195 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 14:23:28.198 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:23:28.213 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:23:28.213 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:23:28.213 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2018-07-25 14:23:28.214 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2018-07-25 14:23:28.214 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2018-07-25 14:23:28.222 +01:00 [DBG] Start authorize callback request
2018-07-25 14:23:28.229 +01:00 [DBG] User in authorize request: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 14:23:28.229 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 14:23:28.229 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:23:28.229 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 14:23:28.229 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1",
  "State": "17b31889abf34a28a42f056210e14985",
  "Nonce": "0295e3b28fa143278a4d090a826e7ddb",
  "SessionId": "24133ad6d2c833e357f9b7c416c65384",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1",
    "state": "17b31889abf34a28a42f056210e14985",
    "nonce": "0295e3b28fa143278a4d090a826e7ddb"
  }
}
2018-07-25 14:23:28.229 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2018-07-25 14:23:28.248 +01:00 [DBG] user_consent grant with value: spa|5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 not found in store.
2018-07-25 14:23:28.248 +01:00 [DBG] Found no prior consent from consent store, consent is required
2018-07-25 14:23:28.248 +01:00 [INF] Showing consent: User has not yet consented
2018-07-25 14:23:28.257 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:23:28.257 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:23:28.293 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 14:23:28.294 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:23:28.294 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 14:23:28.294 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:23:29.813 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:23:29.813 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:23:29.817 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:23:29.818 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:23:29.826 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:23:29.826 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:23:29.833 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:23:29.833 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:23:29.842 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:23:29.842 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:23:29.888 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:23:29.888 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:23:29.907 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:23:29.907 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:25:04.655 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-07-25 14:25:04.790 +01:00 [DBG] Using idsrv as default scheme for authentication
2018-07-25 14:25:04.794 +01:00 [DBG] Using idsrv as default scheme for sign-in
2018-07-25 14:25:04.798 +01:00 [DBG] Using idsrv as default scheme for sign-out
2018-07-25 14:25:04.798 +01:00 [DBG] Using idsrv as default scheme for challenge
2018-07-25 14:25:04.799 +01:00 [DBG] Using idsrv as default scheme for forbid
2018-07-25 14:25:05.971 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:25:06.003 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:25:10.018 +01:00 [WRN] '.AspNetCore.Correlation.Google.0mMzWo5aQfbSe1kP3yqhJlweFpdmlUuAGSqRdrPGRIA' cookie not found.
2018-07-25 14:25:10.019 +01:00 [INF] Error from RemoteAuthentication: Correlation failed..
2018-07-25 14:25:10.034 +01:00 [ERR] An unhandled exception has occurred while executing the request
System.Exception: Correlation failed.
   at Microsoft.AspNetCore.Authentication.RemoteAuthenticationHandler`1.<HandleRequestAsync>d__12.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at IdentityServer4.Hosting.FederatedSignOut.AuthenticationRequestHandlerWrapper.<HandleRequestAsync>d__6.MoveNext() in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\Hosting\FederatedSignOut\AuthenticationRequestHandlerWrapper.cs:line 38
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.<Invoke>d__6.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.<Invoke>d__7.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at IdentityServer4.Hosting.BaseUrlMiddleware.<Invoke>d__3.MoveNext() in C:\local\identity\server4\IdentityServer4\src\IdentityServer4\Hosting\BaseUrlMiddleware.cs:line 36
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.<Invoke>d__7.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()
2018-07-25 14:25:11.973 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:25:11.974 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:25:13.025 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:25:13.026 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:25:13.956 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 14:25:13.956 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 14:25:13.976 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:25:13.976 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:25:14.057 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 14:25:14.057 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 14:25:14.078 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:25:14.078 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:25:15.337 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:25:15.337 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:25:15.338 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:25:15.338 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:25:15.342 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:25:15.338 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:25:15.342 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:25:15.339 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:25:15.342 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:25:15.338 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:25:15.343 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:25:15.343 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:25:16.998 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 14:25:17.001 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 14:25:17.002 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 14:25:17.004 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 14:25:17.009 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 14:25:17.010 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 14:25:17.016 +01:00 [DBG] Start discovery request
2018-07-25 14:25:17.194 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:25:17.194 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:25:17.194 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-07-25 14:25:17.199 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-07-25 14:25:17.199 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-07-25 14:25:17.205 +01:00 [DBG] Start authorize request
2018-07-25 14:25:17.239 +01:00 [DBG] User in authorize request: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 14:25:17.239 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 14:25:17.239 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:25:17.239 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 14:25:17.276 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1",
  "State": "a9b81c758c27473ab4b760639fd0f866",
  "Nonce": "d2f55400ab1548348ef35579296bc140",
  "SessionId": "24133ad6d2c833e357f9b7c416c65384",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1",
    "state": "a9b81c758c27473ab4b760639fd0f866",
    "nonce": "d2f55400ab1548348ef35579296bc140"
  }
}
2018-07-25 14:25:17.288 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2018-07-25 14:25:17.300 +01:00 [DBG] Client is configured to not require consent, no consent is required
2018-07-25 14:25:17.310 +01:00 [DBG] Creating Implicit Flow response.
2018-07-25 14:25:17.323 +01:00 [DBG] Getting claims for access token for client: spa
2018-07-25 14:25:17.324 +01:00 [DBG] Getting claims for access token for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 14:25:17.335 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types [] via ClaimsProviderAccessToken
2018-07-25 14:25:17.340 +01:00 [DBG] Issued claims: []
2018-07-25 14:25:17.431 +01:00 [DBG] Getting claims for identity token for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 and client: spa
2018-07-25 14:25:17.431 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-07-25 14:25:17.481 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "Endpoint": "Authorize",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "Scopes": "openid profile api1",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****fjiQ"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****dPCQ"
    }
  ],
  "ActivityId": "0HLFI684E5J9B:00000002",
  "TimeStamp": "2018-07-25T13:25:17Z",
  "ProcessId": 12172,
  "LocalIpAddress": "127.0.0.1:19974",
  "RemoteIpAddress": "::1"
}
2018-07-25 14:25:17.487 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ClientId": "spa",
  "RedirectUri": "http://localhost:5003/callback.html",
  "State": "a9b81c758c27473ab4b760639fd0f866",
  "Scope": "openid profile api1"
}
2018-07-25 14:25:17.514 +01:00 [DBG] Augmenting SignInContext
2018-07-25 14:25:17.556 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2018-07-25 14:25:17.708 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 14:25:17.708 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 14:25:17.709 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 14:25:17.709 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 14:25:17.709 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 14:25:17.709 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 14:25:17.709 +01:00 [DBG] Start discovery request
2018-07-25 14:25:17.761 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:5003
2018-07-25 14:25:17.761 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 14:25:17.761 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 14:25:17.761 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-07-25 14:25:17.762 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-07-25 14:25:17.762 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-07-25 14:25:17.766 +01:00 [DBG] Start key discovery request
2018-07-25 14:25:17.868 +01:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:5003
2018-07-25 14:25:17.868 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 14:25:17.868 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 14:25:17.868 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-07-25 14:25:17.871 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-07-25 14:25:17.871 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-07-25 14:25:17.882 +01:00 [DBG] Start userinfo request
2018-07-25 14:25:17.887 +01:00 [DBG] Bearer token found in header
2018-07-25 14:25:17.982 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:25:17.987 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:25:17.990 +01:00 [DBG] IsActive called from: AccessTokenValidation
2018-07-25 14:25:17.991 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 14:25:17.997 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1532525117,
    "exp": 1532528717,
    "iss": "http://localhost:5000",
    "aud": [
      "http://localhost:5000/resources",
      "api1"
    ],
    "client_id": "spa",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532525008,
    "idp": "Google",
    "scope": [
      "openid",
      "profile",
      "api1"
    ],
    "amr": "external"
  }
}
2018-07-25 14:25:17.999 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2018-07-25 14:25:18.008 +01:00 [DBG] Creating userinfo response
2018-07-25 14:25:18.016 +01:00 [DBG] Scopes in access token: openid profile api1
2018-07-25 14:25:18.019 +01:00 [DBG] Scopes in access token: openid profile api1
2018-07-25 14:25:18.024 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-07-25 14:25:18.024 +01:00 [DBG] Scopes in access token: openid profile api1
2018-07-25 14:25:18.028 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2018-07-25 14:25:18.037 +01:00 [DBG] Issued claims: ["sub"]
2018-07-25 14:25:18.037 +01:00 [INF] Profile service returned to the following claim types: sub
2018-07-25 14:25:18.038 +01:00 [DBG] End userinfo request
2018-07-25 14:25:18.050 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:25:18.050 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:25:18.050 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 14:25:18.051 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 14:25:18.051 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 14:25:18.053 +01:00 [DBG] Rendering check session result
2018-07-25 14:25:18.194 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 14:25:18.194 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 14:25:18.194 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 14:25:18.194 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 14:25:18.194 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 14:25:18.194 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 14:25:18.194 +01:00 [DBG] Start discovery request
2018-07-25 14:25:18.274 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:25:18.274 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:25:18.274 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 14:25:18.274 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 14:25:18.274 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 14:25:18.274 +01:00 [DBG] Rendering check session result
2018-07-25 14:25:20.814 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:25:20.814 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:25:20.814 +01:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2018-07-25 14:25:20.815 +01:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2018-07-25 14:25:20.816 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2018-07-25 14:25:20.823 +01:00 [DBG] Processing signout request for 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 14:25:20.830 +01:00 [DBG] Start end session request validation
2018-07-25 14:25:20.836 +01:00 [DBG] Start identity token validation
2018-07-25 14:25:20.838 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:25:20.838 +01:00 [DBG] Client found: spa / SPA Client
2018-07-25 14:25:20.839 +01:00 [DBG] IsActive called from: IdentityTokenValidation
2018-07-25 14:25:20.839 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 14:25:20.839 +01:00 [DBG] Token validation success
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "ValidateLifetime": false,
  "Claims": {
    "nbf": 1532525117,
    "exp": 1532525417,
    "iss": "http://localhost:5000",
    "aud": "spa",
    "nonce": "d2f55400ab1548348ef35579296bc140",
    "iat": 1532525117,
    "at_hash": "-vTOk1dZ991sY44T4_TDMg",
    "sid": "24133ad6d2c833e357f9b7c416c65384",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532525008,
    "idp": "Google",
    "amr": "external"
  }
}
2018-07-25 14:25:20.852 +01:00 [INF] End session request validation success
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "PostLogOutUri": "http://localhost:5003/index.html",
  "Raw": {
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjUxZTMyMGM2ODUzZjVmZmY4MDA2YTEwODE3Y2JiMTNiIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1MzI1MjUxMTcsImV4cCI6MTUzMjUyNTQxNywiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiJkMmY1NTQwMGFiMTU0ODM0OGVmMzU1NzkyOTZiYzE0MCIsImlhdCI6MTUzMjUyNTExNywiYXRfaGFzaCI6Ii12VE9rMWRaOTkxc1k0NFQ0X1RETWciLCJzaWQiOiIyNDEzM2FkNmQyYzgzM2UzNTdmOWI3YzQxNmM2NTM4NCIsInN1YiI6IjVlNWMwMmE2LTJhZjEtNDdkMy1iOWRiLWE2YjE2MGQ4Y2E1OSIsImF1dGhfdGltZSI6MTUzMjUyNTAwOCwiaWRwIjoiR29vZ2xlIiwiYW1yIjpbImV4dGVybmFsIl19.mtli0O7LdAynnGG0bj8pMQT__B0pMSoNOaYsngNvyGYAUfv7HF_v_ifkZp6BD6r_km-BCYDKKzhNs_L_GwtSVCg9Db7oBosVRxFS1STwUzjrapbhgIaoY-b0bUwvM4YI8tEAIELjwTVS04LmCwOuX0xaxY2VDNuI69Vxop8YV-3coOE0KDKgogEPcMIZ0Uabu72mQqPV3uj4t7P7GBimrYye0run_Ggk-QelyhwWAK3kwZwfGaFQtV0hBMxXNFthzpVd9PL_biTvZTBa6FoQ3HHBSQTFxE6DCzRuSqa-LGRNnCQfu-cRyuRm8eWqDgvFxrphF0Xm5tssjZpyKJfjiQ",
    "post_logout_redirect_uri": "http://localhost:5003/index.html"
  }
}
2018-07-25 14:25:20.852 +01:00 [DBG] Success validating end session request from spa
2018-07-25 14:25:20.877 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:25:20.877 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:25:20.942 +01:00 [INF] AuthenticationScheme: idsrv signed out.
2018-07-25 14:25:20.948 +01:00 [INF] {
  "Name": "User Logout Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1002,
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "DisplayName": "Steve Kent",
  "ActivityId": "0HLFI684E5J99:00000003",
  "TimeStamp": "2018-07-25T13:25:20Z",
  "ProcessId": 12172,
  "LocalIpAddress": "127.0.0.1:19974",
  "RemoteIpAddress": "::1"
}
2018-07-25 14:25:21.754 +01:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2018-07-25 14:25:21.756 +01:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2018-07-25 14:25:21.756 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2018-07-25 14:25:21.763 +01:00 [DBG] Processing signout callback request
2018-07-25 14:25:21.782 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:25:21.782 +01:00 [DBG] No client front-channel logout URLs
2018-07-25 14:25:21.783 +01:00 [DBG] No client back-channel logout URLs
2018-07-25 14:25:21.783 +01:00 [INF] Successful signout callback.
2018-07-25 14:25:21.783 +01:00 [DBG] No client front-channel iframe urls
2018-07-25 14:25:21.783 +01:00 [DBG] No client back-channel iframe urls
2018-07-25 14:25:23.923 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 14:25:23.923 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 14:25:23.923 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 14:25:23.923 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 14:25:23.923 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 14:25:23.923 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 14:25:23.923 +01:00 [DBG] Start discovery request
2018-07-25 14:25:23.937 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-07-25 14:25:23.937 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-07-25 14:25:23.937 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-07-25 14:25:23.938 +01:00 [DBG] Start authorize request
2018-07-25 14:25:23.938 +01:00 [DBG] No user present in authorize request
2018-07-25 14:25:23.938 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 14:25:23.939 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:25:23.939 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 14:25:23.939 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1",
  "State": "25d589f5512642dcbe2530e0b8852711",
  "Nonce": "aff648eaa2fd4de58cd568fcc00ae6c4",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1",
    "state": "25d589f5512642dcbe2530e0b8852711",
    "nonce": "aff648eaa2fd4de58cd568fcc00ae6c4"
  }
}
2018-07-25 14:25:23.939 +01:00 [INF] Showing login: User is not authenticated
2018-07-25 14:25:23.949 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 14:25:23.949 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:25:23.949 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 14:25:23.949 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:25:25.414 +01:00 [INF] AuthenticationScheme: Google was challenged.
2018-07-25 14:25:29.279 +01:00 [INF] AuthenticationScheme: idsrv.external signed in.
2018-07-25 14:25:29.298 +01:00 [INF] AuthenticationScheme: idsrv.external was successfully authenticated.
2018-07-25 14:25:31.405 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Provider": "Google",
  "ProviderUserId": "107387075381855787656",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "DisplayName": "steve@techdevs.net",
  "Endpoint": "UI",
  "ActivityId": "0HLFI684E5J9B:00000005",
  "TimeStamp": "2018-07-25T13:25:31Z",
  "ProcessId": 12172,
  "LocalIpAddress": "127.0.0.1:19974",
  "RemoteIpAddress": "::1"
}
2018-07-25 14:25:31.419 +01:00 [DBG] Augmenting SignInContext
2018-07-25 14:25:31.419 +01:00 [DBG] Adding amr claim with value: external
2018-07-25 14:25:31.419 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2018-07-25 14:25:31.420 +01:00 [INF] AuthenticationScheme: idsrv.external signed out.
2018-07-25 14:25:31.420 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 14:25:31.420 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:25:31.420 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 14:25:31.423 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:25:31.437 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:25:31.437 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:25:31.437 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2018-07-25 14:25:31.438 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2018-07-25 14:25:31.438 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2018-07-25 14:25:31.445 +01:00 [DBG] Start authorize callback request
2018-07-25 14:25:31.452 +01:00 [DBG] User in authorize request: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 14:25:31.452 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 14:25:31.452 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:25:31.452 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 14:25:31.452 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1",
  "State": "25d589f5512642dcbe2530e0b8852711",
  "Nonce": "aff648eaa2fd4de58cd568fcc00ae6c4",
  "SessionId": "0eacdc4bd09f5308cf8a14471f443e1d",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1",
    "state": "25d589f5512642dcbe2530e0b8852711",
    "nonce": "aff648eaa2fd4de58cd568fcc00ae6c4"
  }
}
2018-07-25 14:25:31.453 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2018-07-25 14:25:31.453 +01:00 [DBG] Client is configured to not require consent, no consent is required
2018-07-25 14:25:31.453 +01:00 [DBG] Creating Implicit Flow response.
2018-07-25 14:25:31.453 +01:00 [DBG] Getting claims for access token for client: spa
2018-07-25 14:25:31.453 +01:00 [DBG] Getting claims for access token for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 14:25:31.453 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types [] via ClaimsProviderAccessToken
2018-07-25 14:25:31.453 +01:00 [DBG] Issued claims: []
2018-07-25 14:25:31.455 +01:00 [DBG] Getting claims for identity token for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 and client: spa
2018-07-25 14:25:31.455 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-07-25 14:25:31.458 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "Endpoint": "Authorize",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "Scopes": "openid profile api1",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****ye4g"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****4cvw"
    }
  ],
  "ActivityId": "0HLFI684E5J98:00000005",
  "TimeStamp": "2018-07-25T13:25:31Z",
  "ProcessId": 12172,
  "LocalIpAddress": "127.0.0.1:19974",
  "RemoteIpAddress": "::1"
}
2018-07-25 14:25:31.458 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ClientId": "spa",
  "RedirectUri": "http://localhost:5003/callback.html",
  "State": "25d589f5512642dcbe2530e0b8852711",
  "Scope": "openid profile api1"
}
2018-07-25 14:25:31.458 +01:00 [DBG] Augmenting SignInContext
2018-07-25 14:25:31.458 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2018-07-25 14:25:31.630 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 14:25:31.630 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 14:25:31.630 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 14:25:31.630 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 14:25:31.630 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 14:25:31.630 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 14:25:31.630 +01:00 [DBG] Start discovery request
2018-07-25 14:25:31.675 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:5003
2018-07-25 14:25:31.675 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 14:25:31.675 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 14:25:31.675 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-07-25 14:25:31.675 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-07-25 14:25:31.675 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-07-25 14:25:31.675 +01:00 [DBG] Start key discovery request
2018-07-25 14:25:31.763 +01:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:5003
2018-07-25 14:25:31.764 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 14:25:31.764 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 14:25:31.764 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-07-25 14:25:31.764 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-07-25 14:25:31.764 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-07-25 14:25:31.764 +01:00 [DBG] Start userinfo request
2018-07-25 14:25:31.764 +01:00 [DBG] Bearer token found in header
2018-07-25 14:25:31.765 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:25:31.765 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:25:31.765 +01:00 [DBG] IsActive called from: AccessTokenValidation
2018-07-25 14:25:31.765 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 14:25:31.765 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1532525131,
    "exp": 1532528731,
    "iss": "http://localhost:5000",
    "aud": [
      "http://localhost:5000/resources",
      "api1"
    ],
    "client_id": "spa",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532525131,
    "idp": "Google",
    "scope": [
      "openid",
      "profile",
      "api1"
    ],
    "amr": "external"
  }
}
2018-07-25 14:25:31.766 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2018-07-25 14:25:31.766 +01:00 [DBG] Creating userinfo response
2018-07-25 14:25:31.766 +01:00 [DBG] Scopes in access token: openid profile api1
2018-07-25 14:25:31.766 +01:00 [DBG] Scopes in access token: openid profile api1
2018-07-25 14:25:31.766 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-07-25 14:25:31.766 +01:00 [DBG] Scopes in access token: openid profile api1
2018-07-25 14:25:31.766 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2018-07-25 14:25:31.766 +01:00 [DBG] Issued claims: ["sub"]
2018-07-25 14:25:31.766 +01:00 [INF] Profile service returned to the following claim types: sub
2018-07-25 14:25:31.766 +01:00 [DBG] End userinfo request
2018-07-25 14:25:31.791 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:25:31.791 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:25:31.791 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 14:25:31.791 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 14:25:31.791 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 14:25:31.791 +01:00 [DBG] Rendering check session result
2018-07-25 14:25:31.983 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 14:25:31.983 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 14:25:31.983 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 14:25:31.983 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 14:25:31.983 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 14:25:31.983 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 14:25:31.983 +01:00 [DBG] Start discovery request
2018-07-25 14:25:32.006 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:25:32.007 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:25:32.007 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 14:25:32.007 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 14:25:32.007 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 14:25:32.007 +01:00 [DBG] Rendering check session result
2018-07-25 14:26:00.351 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 14:26:00.351 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 14:26:00.351 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 14:26:00.351 +01:00 [DBG] Start discovery request
2018-07-25 14:26:00.521 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-07-25 14:26:00.521 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-07-25 14:26:00.521 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-07-25 14:26:00.522 +01:00 [DBG] Start key discovery request
2018-07-25 14:27:18.742 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:27:18.743 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:27:18.743 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 14:27:18.743 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 14:27:18.743 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 14:27:18.743 +01:00 [DBG] Start discovery request
2018-07-25 14:27:18.884 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:27:18.884 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:39:28.227 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-07-25 14:39:28.361 +01:00 [DBG] Using idsrv as default scheme for authentication
2018-07-25 14:39:28.365 +01:00 [DBG] Using idsrv as default scheme for sign-in
2018-07-25 14:39:28.368 +01:00 [DBG] Using idsrv as default scheme for sign-out
2018-07-25 14:39:28.369 +01:00 [DBG] Using idsrv as default scheme for challenge
2018-07-25 14:39:28.369 +01:00 [DBG] Using idsrv as default scheme for forbid
2018-07-25 14:39:29.640 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:39:29.664 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:39:39.331 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 14:39:39.338 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 14:39:39.338 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 14:39:39.342 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 14:39:39.349 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 14:39:39.349 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 14:39:39.356 +01:00 [DBG] Start discovery request
2018-07-25 14:39:40.175 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 14:39:40.175 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 14:39:40.175 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 14:39:40.175 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 14:39:40.176 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 14:39:40.176 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 14:39:40.176 +01:00 [DBG] Start discovery request
2018-07-25 14:39:40.209 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:39:40.209 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:39:40.209 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:39:40.209 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:39:40.209 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-07-25 14:39:40.209 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 14:39:40.210 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 14:39:40.211 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 14:39:40.212 +01:00 [DBG] Rendering check session result
2018-07-25 14:39:40.214 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-07-25 14:39:40.214 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-07-25 14:39:40.220 +01:00 [DBG] Start authorize request
2018-07-25 14:39:40.253 +01:00 [DBG] User in authorize request: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 14:39:40.261 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 14:39:40.278 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:39:40.358 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 14:39:40.400 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1",
  "State": "a37cc6bd0d9c4fb6a73be464b4622f9b",
  "Nonce": "20c095e5f3d942c0a3f03458c22d702e",
  "SessionId": "0eacdc4bd09f5308cf8a14471f443e1d",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1",
    "state": "a37cc6bd0d9c4fb6a73be464b4622f9b",
    "nonce": "20c095e5f3d942c0a3f03458c22d702e"
  }
}
2018-07-25 14:39:40.411 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2018-07-25 14:39:40.422 +01:00 [DBG] Client is configured to not require consent, no consent is required
2018-07-25 14:39:40.430 +01:00 [DBG] Creating Implicit Flow response.
2018-07-25 14:39:40.441 +01:00 [DBG] Getting claims for access token for client: spa
2018-07-25 14:39:40.442 +01:00 [DBG] Getting claims for access token for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 14:39:40.452 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types [] via ClaimsProviderAccessToken
2018-07-25 14:39:40.458 +01:00 [DBG] Issued claims: []
2018-07-25 14:39:40.557 +01:00 [DBG] Getting claims for identity token for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 and client: spa
2018-07-25 14:39:40.557 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-07-25 14:39:40.614 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "Endpoint": "Authorize",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "Scopes": "openid profile api1",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****v_hA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****feKg"
    }
  ],
  "ActivityId": "0HLFI6G5QO9GK:00000002",
  "TimeStamp": "2018-07-25T13:39:40Z",
  "ProcessId": 22296,
  "LocalIpAddress": "127.0.0.1:22214",
  "RemoteIpAddress": "::1"
}
2018-07-25 14:39:40.619 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ClientId": "spa",
  "RedirectUri": "http://localhost:5003/callback.html",
  "State": "a37cc6bd0d9c4fb6a73be464b4622f9b",
  "Scope": "openid profile api1"
}
2018-07-25 14:39:41.420 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 14:39:41.420 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 14:39:41.420 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 14:39:41.424 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 14:39:41.424 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 14:39:41.424 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 14:39:41.424 +01:00 [DBG] Start discovery request
2018-07-25 14:39:41.431 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:5003
2018-07-25 14:39:41.431 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 14:39:41.431 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 14:39:41.431 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-07-25 14:39:41.432 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-07-25 14:39:41.432 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-07-25 14:39:41.437 +01:00 [DBG] Start key discovery request
2018-07-25 14:39:41.492 +01:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:5003
2018-07-25 14:39:41.492 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 14:39:41.492 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 14:39:41.492 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-07-25 14:39:41.495 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-07-25 14:39:41.495 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-07-25 14:39:41.505 +01:00 [DBG] Start userinfo request
2018-07-25 14:39:41.509 +01:00 [DBG] Bearer token found in header
2018-07-25 14:39:41.569 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:39:41.570 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:39:41.572 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:39:41.572 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:39:41.575 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:39:41.575 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:39:41.575 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:39:41.575 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:39:41.575 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:39:41.575 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:39:41.575 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:39:41.576 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:39:41.609 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:39:41.614 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:39:41.621 +01:00 [DBG] IsActive called from: AccessTokenValidation
2018-07-25 14:39:41.622 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 14:39:41.633 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1532525980,
    "exp": 1532529580,
    "iss": "http://localhost:5000",
    "aud": [
      "http://localhost:5000/resources",
      "api1"
    ],
    "client_id": "spa",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532525131,
    "idp": "Google",
    "scope": [
      "openid",
      "profile",
      "api1"
    ],
    "amr": "external"
  }
}
2018-07-25 14:39:41.642 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2018-07-25 14:39:41.652 +01:00 [DBG] Creating userinfo response
2018-07-25 14:39:41.656 +01:00 [DBG] Scopes in access token: openid profile api1
2018-07-25 14:39:41.660 +01:00 [DBG] Scopes in access token: openid profile api1
2018-07-25 14:39:41.663 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-07-25 14:39:41.663 +01:00 [DBG] Scopes in access token: openid profile api1
2018-07-25 14:39:41.665 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2018-07-25 14:39:41.675 +01:00 [DBG] Issued claims: ["sub"]
2018-07-25 14:39:41.675 +01:00 [INF] Profile service returned to the following claim types: sub
2018-07-25 14:39:41.675 +01:00 [DBG] End userinfo request
2018-07-25 14:39:41.688 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:39:41.688 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:39:41.688 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 14:39:41.688 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 14:39:41.688 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 14:39:41.689 +01:00 [DBG] Rendering check session result
2018-07-25 14:39:41.840 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 14:39:41.840 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 14:39:41.840 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 14:39:41.841 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 14:39:41.841 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 14:39:41.841 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 14:39:41.841 +01:00 [DBG] Start discovery request
2018-07-25 14:39:41.923 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:39:41.923 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:39:41.923 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 14:39:41.923 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 14:39:41.923 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 14:39:41.924 +01:00 [DBG] Rendering check session result
2018-07-25 14:39:44.190 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 14:39:44.190 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 14:39:44.190 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 14:39:44.190 +01:00 [DBG] Start discovery request
2018-07-25 14:39:44.376 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-07-25 14:39:44.376 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-07-25 14:39:44.376 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-07-25 14:39:44.376 +01:00 [DBG] Start key discovery request
2018-07-25 14:44:48.931 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-07-25 14:44:49.056 +01:00 [DBG] Using idsrv as default scheme for authentication
2018-07-25 14:44:49.059 +01:00 [DBG] Using idsrv as default scheme for sign-in
2018-07-25 14:44:49.061 +01:00 [DBG] Using idsrv as default scheme for sign-out
2018-07-25 14:44:49.061 +01:00 [DBG] Using idsrv as default scheme for challenge
2018-07-25 14:44:49.062 +01:00 [DBG] Using idsrv as default scheme for forbid
2018-07-25 14:44:49.849 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 14:44:49.863 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 14:44:49.863 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 14:44:49.995 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 14:44:49.999 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 14:44:49.999 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 14:44:50.003 +01:00 [DBG] Start discovery request
2018-07-25 14:44:50.155 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 14:44:50.156 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 14:44:50.156 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 14:44:50.156 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 14:44:50.156 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 14:44:50.156 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 14:44:50.156 +01:00 [DBG] Start discovery request
2018-07-25 14:44:50.282 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:44:50.282 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:44:50.284 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:44:50.284 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:44:50.285 +01:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2018-07-25 14:44:50.285 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 14:44:50.286 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 14:44:50.287 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 14:44:50.288 +01:00 [DBG] Rendering check session result
2018-07-25 14:44:50.290 +01:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2018-07-25 14:44:50.290 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2018-07-25 14:44:50.319 +01:00 [DBG] Processing signout request for 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 14:44:50.328 +01:00 [DBG] Start end session request validation
2018-07-25 14:44:50.339 +01:00 [DBG] Start identity token validation
2018-07-25 14:44:50.386 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:44:50.386 +01:00 [DBG] Client found: spa / SPA Client
2018-07-25 14:44:50.465 +01:00 [DBG] IsActive called from: IdentityTokenValidation
2018-07-25 14:44:50.465 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 14:44:50.477 +01:00 [DBG] Token validation success
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "ValidateLifetime": false,
  "Claims": {
    "nbf": 1532525980,
    "exp": 1532526280,
    "iss": "http://localhost:5000",
    "aud": "spa",
    "nonce": "20c095e5f3d942c0a3f03458c22d702e",
    "iat": 1532525980,
    "at_hash": "YTODZt0YMfWjjAChzdeXGw",
    "sid": "0eacdc4bd09f5308cf8a14471f443e1d",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532525131,
    "idp": "Google",
    "amr": "external"
  }
}
2018-07-25 14:44:50.505 +01:00 [INF] End session request validation success
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "PostLogOutUri": "http://localhost:5003/index.html",
  "Raw": {
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjUxZTMyMGM2ODUzZjVmZmY4MDA2YTEwODE3Y2JiMTNiIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1MzI1MjU5ODAsImV4cCI6MTUzMjUyNjI4MCwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiIyMGMwOTVlNWYzZDk0MmMwYTNmMDM0NThjMjJkNzAyZSIsImlhdCI6MTUzMjUyNTk4MCwiYXRfaGFzaCI6IllUT0RadDBZTWZXampBQ2h6ZGVYR3ciLCJzaWQiOiIwZWFjZGM0YmQwOWY1MzA4Y2Y4YTE0NDcxZjQ0M2UxZCIsInN1YiI6IjVlNWMwMmE2LTJhZjEtNDdkMy1iOWRiLWE2YjE2MGQ4Y2E1OSIsImF1dGhfdGltZSI6MTUzMjUyNTEzMSwiaWRwIjoiR29vZ2xlIiwiYW1yIjpbImV4dGVybmFsIl19.l_eDW1USnqBkAKNL73AnsxcmtnA4bRgQiX9MwHSh4shS-tfccoOCEjYxv7aXT6jmS89SYPT93Dwm-ooyo-L_DpG9wBOt2hYbIHDjKNYZ_90FHd8kOUZavGb9h_5kFECZBL2WUmfFokyXKEyTsBEyD-h9aSKcfbHKHCBzPSljNEx3P-LM1N2r7nbA9NqHP2xP_ArNuyRDiU3ljlgtOFOVPAriJ-MA9A5PAkt-kYLbqmDcSupOl4brNRigjtHQeGF4jAcAqcdbqrRuw5G1va2jjyM0TJN0zPrMDdsZNAaumCRD61jKDuoyEO3gENaKFm2_nois9zHiReJu3FZUn-v_hA",
    "post_logout_redirect_uri": "http://localhost:5003/index.html"
  }
}
2018-07-25 14:44:50.506 +01:00 [DBG] Success validating end session request from spa
2018-07-25 14:44:50.539 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:44:50.540 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:44:51.433 +01:00 [INF] AuthenticationScheme: idsrv signed out.
2018-07-25 14:44:51.460 +01:00 [INF] {
  "Name": "User Logout Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1002,
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "DisplayName": "Steve Kent",
  "ActivityId": "0HLFI6J5BBKVB:00000003",
  "TimeStamp": "2018-07-25T13:44:51Z",
  "ProcessId": 18380,
  "LocalIpAddress": "127.0.0.1:27705",
  "RemoteIpAddress": "::1"
}
2018-07-25 14:44:57.695 +01:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2018-07-25 14:44:57.697 +01:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2018-07-25 14:44:57.697 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2018-07-25 14:44:57.705 +01:00 [DBG] Processing signout callback request
2018-07-25 14:44:57.722 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:44:57.722 +01:00 [DBG] No client front-channel logout URLs
2018-07-25 14:44:57.723 +01:00 [DBG] No client back-channel logout URLs
2018-07-25 14:44:57.723 +01:00 [INF] Successful signout callback.
2018-07-25 14:44:57.723 +01:00 [DBG] No client front-channel iframe urls
2018-07-25 14:44:57.723 +01:00 [DBG] No client back-channel iframe urls
2018-07-25 14:45:04.687 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 14:45:04.687 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 14:45:04.687 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 14:45:04.687 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 14:45:04.687 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 14:45:04.687 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 14:45:04.687 +01:00 [DBG] Start discovery request
2018-07-25 14:45:04.701 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-07-25 14:45:04.704 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-07-25 14:45:04.704 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-07-25 14:45:04.708 +01:00 [DBG] Start authorize request
2018-07-25 14:45:04.714 +01:00 [DBG] No user present in authorize request
2018-07-25 14:45:04.719 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 14:45:04.725 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:45:04.767 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 14:45:04.781 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1 techdevs-accounts-api",
  "State": "3bb61c7079d54cb7b1e6fdc096f44ee4",
  "Nonce": "4facc2897d344853bdf459cd6e8d25cb",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1 techdevs-accounts-api",
    "state": "3bb61c7079d54cb7b1e6fdc096f44ee4",
    "nonce": "4facc2897d344853bdf459cd6e8d25cb"
  }
}
2018-07-25 14:45:04.795 +01:00 [INF] Showing login: User is not authenticated
2018-07-25 14:45:04.838 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 14:45:04.838 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:45:04.838 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 14:45:04.845 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:45:08.694 +01:00 [INF] AuthenticationScheme: Google was challenged.
2018-07-25 14:45:14.092 +01:00 [INF] AuthenticationScheme: idsrv.external signed in.
2018-07-25 14:45:14.106 +01:00 [INF] AuthenticationScheme: idsrv.external was successfully authenticated.
2018-07-25 14:45:16.189 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Provider": "Google",
  "ProviderUserId": "107387075381855787656",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "DisplayName": "steve@techdevs.net",
  "Endpoint": "UI",
  "ActivityId": "0HLFI6J5BBKVC:00000007",
  "TimeStamp": "2018-07-25T13:45:16Z",
  "ProcessId": 18380,
  "LocalIpAddress": "127.0.0.1:27705",
  "RemoteIpAddress": "::1"
}
2018-07-25 14:45:16.203 +01:00 [DBG] Augmenting SignInContext
2018-07-25 14:45:16.205 +01:00 [DBG] Adding amr claim with value: external
2018-07-25 14:45:16.209 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2018-07-25 14:45:16.210 +01:00 [INF] AuthenticationScheme: idsrv.external signed out.
2018-07-25 14:45:16.210 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 14:45:16.211 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:45:16.211 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 14:45:16.213 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:45:16.228 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:45:16.228 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:45:16.228 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2018-07-25 14:45:16.229 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2018-07-25 14:45:16.229 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2018-07-25 14:45:16.237 +01:00 [DBG] Start authorize callback request
2018-07-25 14:45:16.243 +01:00 [DBG] User in authorize request: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 14:45:16.243 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 14:45:16.243 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:45:16.244 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 14:45:16.244 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1 techdevs-accounts-api",
  "State": "3bb61c7079d54cb7b1e6fdc096f44ee4",
  "Nonce": "4facc2897d344853bdf459cd6e8d25cb",
  "SessionId": "9b861a7f951533923e18d6207e522f5d",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1 techdevs-accounts-api",
    "state": "3bb61c7079d54cb7b1e6fdc096f44ee4",
    "nonce": "4facc2897d344853bdf459cd6e8d25cb"
  }
}
2018-07-25 14:45:16.244 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2018-07-25 14:45:16.256 +01:00 [DBG] Client is configured to not require consent, no consent is required
2018-07-25 14:45:16.267 +01:00 [DBG] Creating Implicit Flow response.
2018-07-25 14:45:16.282 +01:00 [DBG] Getting claims for access token for client: spa
2018-07-25 14:45:16.283 +01:00 [DBG] Getting claims for access token for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 14:45:16.294 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types [] via ClaimsProviderAccessToken
2018-07-25 14:45:16.300 +01:00 [DBG] Issued claims: []
2018-07-25 14:45:16.348 +01:00 [DBG] Getting claims for identity token for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 and client: spa
2018-07-25 14:45:16.348 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-07-25 14:45:16.367 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "Endpoint": "Authorize",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "Scopes": "openid profile api1 techdevs-accounts-api",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****7MhA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****2TcQ"
    }
  ],
  "ActivityId": "0HLFI6J5BBKVE:00000004",
  "TimeStamp": "2018-07-25T13:45:16Z",
  "ProcessId": 18380,
  "LocalIpAddress": "127.0.0.1:27705",
  "RemoteIpAddress": "::1"
}
2018-07-25 14:45:16.372 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ClientId": "spa",
  "RedirectUri": "http://localhost:5003/callback.html",
  "State": "3bb61c7079d54cb7b1e6fdc096f44ee4",
  "Scope": "openid profile api1 techdevs-accounts-api"
}
2018-07-25 14:45:16.388 +01:00 [DBG] Augmenting SignInContext
2018-07-25 14:45:16.389 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2018-07-25 14:45:16.899 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 14:45:16.900 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 14:45:16.900 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 14:45:16.900 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 14:45:16.900 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 14:45:16.900 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 14:45:16.900 +01:00 [DBG] Start discovery request
2018-07-25 14:45:16.949 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:5003
2018-07-25 14:45:16.949 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 14:45:16.950 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 14:45:16.950 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-07-25 14:45:16.950 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-07-25 14:45:16.950 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-07-25 14:45:16.955 +01:00 [DBG] Start key discovery request
2018-07-25 14:45:17.059 +01:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:5003
2018-07-25 14:45:17.059 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 14:45:17.059 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 14:45:17.059 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-07-25 14:45:17.060 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-07-25 14:45:17.061 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-07-25 14:45:17.071 +01:00 [DBG] Start userinfo request
2018-07-25 14:45:17.076 +01:00 [DBG] Bearer token found in header
2018-07-25 14:45:17.093 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:45:17.093 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:45:17.093 +01:00 [DBG] IsActive called from: AccessTokenValidation
2018-07-25 14:45:17.093 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 14:45:17.094 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1532526316,
    "exp": 1532529916,
    "iss": "http://localhost:5000",
    "aud": [
      "http://localhost:5000/resources",
      "api1",
      "techdevs-accounts-api"
    ],
    "client_id": "spa",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532526316,
    "idp": "Google",
    "scope": [
      "openid",
      "profile",
      "api1",
      "techdevs-accounts-api"
    ],
    "amr": "external"
  }
}
2018-07-25 14:45:17.095 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2018-07-25 14:45:17.103 +01:00 [DBG] Creating userinfo response
2018-07-25 14:45:17.109 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 14:45:17.113 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 14:45:17.118 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-07-25 14:45:17.118 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 14:45:17.119 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2018-07-25 14:45:17.128 +01:00 [DBG] Issued claims: ["sub"]
2018-07-25 14:45:17.128 +01:00 [INF] Profile service returned to the following claim types: sub
2018-07-25 14:45:17.129 +01:00 [DBG] End userinfo request
2018-07-25 14:45:17.143 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:45:17.143 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:45:17.143 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 14:45:17.143 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 14:45:17.143 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 14:45:17.143 +01:00 [DBG] Rendering check session result
2018-07-25 14:45:17.345 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 14:45:17.345 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 14:45:17.345 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 14:45:17.345 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 14:45:17.345 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 14:45:17.345 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 14:45:17.345 +01:00 [DBG] Start discovery request
2018-07-25 14:45:17.370 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:45:17.370 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:45:17.370 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 14:45:17.370 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 14:45:17.370 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 14:45:17.370 +01:00 [DBG] Rendering check session result
2018-07-25 14:45:19.078 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 14:45:19.078 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 14:45:19.079 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 14:45:19.079 +01:00 [DBG] Start discovery request
2018-07-25 14:45:19.250 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-07-25 14:45:19.250 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-07-25 14:45:19.250 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-07-25 14:45:19.250 +01:00 [DBG] Start key discovery request
2018-07-25 14:52:39.095 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-07-25 14:52:39.232 +01:00 [DBG] Using idsrv as default scheme for authentication
2018-07-25 14:52:39.236 +01:00 [DBG] Using idsrv as default scheme for sign-in
2018-07-25 14:52:39.238 +01:00 [DBG] Using idsrv as default scheme for sign-out
2018-07-25 14:52:39.239 +01:00 [DBG] Using idsrv as default scheme for challenge
2018-07-25 14:52:39.239 +01:00 [DBG] Using idsrv as default scheme for forbid
2018-07-25 14:52:40.517 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:52:40.540 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:52:48.528 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 14:52:48.537 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 14:52:48.537 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 14:52:48.540 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 14:52:48.546 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 14:52:48.546 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 14:52:48.552 +01:00 [DBG] Start discovery request
2018-07-25 14:52:48.751 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:52:48.751 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:52:48.751 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 14:52:48.752 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 14:52:48.752 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 14:52:48.754 +01:00 [DBG] Rendering check session result
2018-07-25 14:52:49.869 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:52:49.869 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:52:49.873 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:52:49.873 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:52:49.873 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:52:49.873 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:52:49.873 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:52:49.873 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:52:49.873 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:52:49.873 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:52:49.873 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:52:49.873 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:52:51.649 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 14:52:51.649 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 14:52:51.649 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 14:52:51.649 +01:00 [DBG] Start discovery request
2018-07-25 14:52:51.839 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-07-25 14:52:51.839 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-07-25 14:52:51.839 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-07-25 14:52:51.844 +01:00 [DBG] Start key discovery request
2018-07-25 14:54:09.112 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-07-25 14:54:09.246 +01:00 [DBG] Using idsrv as default scheme for authentication
2018-07-25 14:54:09.249 +01:00 [DBG] Using idsrv as default scheme for sign-in
2018-07-25 14:54:09.251 +01:00 [DBG] Using idsrv as default scheme for sign-out
2018-07-25 14:54:09.252 +01:00 [DBG] Using idsrv as default scheme for challenge
2018-07-25 14:54:09.252 +01:00 [DBG] Using idsrv as default scheme for forbid
2018-07-25 14:54:10.404 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:54:10.426 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:54:22.988 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 14:54:22.993 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 14:54:22.994 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 14:54:22.999 +01:00 [DBG] Start discovery request
2018-07-25 14:54:23.322 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-07-25 14:54:23.323 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-07-25 14:54:23.323 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-07-25 14:54:23.327 +01:00 [DBG] Start key discovery request
2018-07-25 14:57:18.630 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-07-25 14:57:18.773 +01:00 [DBG] Using idsrv as default scheme for authentication
2018-07-25 14:57:18.777 +01:00 [DBG] Using idsrv as default scheme for sign-in
2018-07-25 14:57:18.779 +01:00 [DBG] Using idsrv as default scheme for sign-out
2018-07-25 14:57:18.780 +01:00 [DBG] Using idsrv as default scheme for challenge
2018-07-25 14:57:18.780 +01:00 [DBG] Using idsrv as default scheme for forbid
2018-07-25 14:57:19.913 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:57:19.934 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:57:40.997 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 14:57:41.002 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 14:57:41.002 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 14:57:41.007 +01:00 [DBG] Start discovery request
2018-07-25 14:57:41.304 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-07-25 14:57:41.304 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-07-25 14:57:41.305 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-07-25 14:57:41.309 +01:00 [DBG] Start key discovery request
2018-07-25 14:59:24.703 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:59:24.703 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:59:25.185 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:59:25.185 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:59:25.185 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 14:59:25.378 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 14:59:25.378 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 14:59:25.380 +01:00 [DBG] Rendering check session result
2018-07-25 14:59:25.503 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 14:59:25.522 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:59:25.574 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 14:59:25.581 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:59:26.337 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:59:26.337 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:59:26.337 +01:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2018-07-25 14:59:26.340 +01:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2018-07-25 14:59:26.341 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2018-07-25 14:59:26.349 +01:00 [DBG] Processing signout request for 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 14:59:26.357 +01:00 [DBG] Start end session request validation
2018-07-25 14:59:26.364 +01:00 [DBG] Start identity token validation
2018-07-25 14:59:26.416 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:59:26.416 +01:00 [DBG] Client found: spa / SPA Client
2018-07-25 14:59:27.107 +01:00 [DBG] IsActive called from: IdentityTokenValidation
2018-07-25 14:59:27.107 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 14:59:27.118 +01:00 [DBG] Token validation success
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "ValidateLifetime": false,
  "Claims": {
    "nbf": 1532526316,
    "exp": 1532526616,
    "iss": "http://localhost:5000",
    "aud": "spa",
    "nonce": "4facc2897d344853bdf459cd6e8d25cb",
    "iat": 1532526316,
    "at_hash": "geCQj0cfWkT72wVr-y-5rA",
    "sid": "9b861a7f951533923e18d6207e522f5d",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532526316,
    "idp": "Google",
    "amr": "external"
  }
}
2018-07-25 14:59:27.178 +01:00 [INF] End session request validation success
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "PostLogOutUri": "http://localhost:5003/index.html",
  "Raw": {
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjUxZTMyMGM2ODUzZjVmZmY4MDA2YTEwODE3Y2JiMTNiIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1MzI1MjYzMTYsImV4cCI6MTUzMjUyNjYxNiwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiI0ZmFjYzI4OTdkMzQ0ODUzYmRmNDU5Y2Q2ZThkMjVjYiIsImlhdCI6MTUzMjUyNjMxNiwiYXRfaGFzaCI6ImdlQ1FqMGNmV2tUNzJ3VnIteS01ckEiLCJzaWQiOiI5Yjg2MWE3Zjk1MTUzMzkyM2UxOGQ2MjA3ZTUyMmY1ZCIsInN1YiI6IjVlNWMwMmE2LTJhZjEtNDdkMy1iOWRiLWE2YjE2MGQ4Y2E1OSIsImF1dGhfdGltZSI6MTUzMjUyNjMxNiwiaWRwIjoiR29vZ2xlIiwiYW1yIjpbImV4dGVybmFsIl19.pDcQ0O2VuZ__Ckx8FCirKMafKgBInalJgGqVOWjH4ESBlYzQrAb6nAyai7SOi7u_kcGYW9SQZgtYxsVBebLlMUJ7oozvuJ4vpclTeAyAniCVvSdxs-Xyo-fyD6KzcmSEY0SsTGWZn5eNL7TIIEPowiIQDgxf5yqp9lY2vQoeAI02c909Lr873xCCpGQv9gQ9wizxiv0V4QPEG08umVmLIARNXDpE8X26rjkj-flcF_x9SsDhXz9ryw9Rb5Slx0P-G4XBZtSoye37lVyAH_-Um6YpA3J7h1B39a-QcjTpcSjM975WjJxJpPIxjjh_XGCMBSbjuWlmTbPkzKrsP07MhA",
    "post_logout_redirect_uri": "http://localhost:5003/index.html"
  }
}
2018-07-25 14:59:27.178 +01:00 [DBG] Success validating end session request from spa
2018-07-25 14:59:27.216 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:59:27.216 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:59:27.956 +01:00 [INF] AuthenticationScheme: idsrv signed out.
2018-07-25 14:59:27.994 +01:00 [INF] {
  "Name": "User Logout Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1002,
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "DisplayName": "Steve Kent",
  "ActivityId": "0HLFI6Q4PH62S:00000003",
  "TimeStamp": "2018-07-25T13:59:27Z",
  "ProcessId": 23172,
  "LocalIpAddress": "127.0.0.1:11073",
  "RemoteIpAddress": "::1"
}
2018-07-25 14:59:28.881 +01:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2018-07-25 14:59:28.887 +01:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2018-07-25 14:59:28.887 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2018-07-25 14:59:28.935 +01:00 [DBG] Processing signout callback request
2018-07-25 14:59:28.954 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:59:28.954 +01:00 [DBG] No client front-channel logout URLs
2018-07-25 14:59:28.954 +01:00 [DBG] No client back-channel logout URLs
2018-07-25 14:59:28.954 +01:00 [INF] Successful signout callback.
2018-07-25 14:59:28.954 +01:00 [DBG] No client front-channel iframe urls
2018-07-25 14:59:28.954 +01:00 [DBG] No client back-channel iframe urls
2018-07-25 14:59:31.170 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 14:59:31.174 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 14:59:31.174 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 14:59:31.175 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 14:59:31.175 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 14:59:31.175 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 14:59:31.175 +01:00 [DBG] Start discovery request
2018-07-25 14:59:31.188 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-07-25 14:59:31.192 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-07-25 14:59:31.192 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-07-25 14:59:31.197 +01:00 [DBG] Start authorize request
2018-07-25 14:59:31.205 +01:00 [DBG] No user present in authorize request
2018-07-25 14:59:31.205 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 14:59:31.206 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:59:31.206 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 14:59:31.219 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1 techdevs-accounts-api",
  "State": "23767a94ff394637822f2ee03cd71047",
  "Nonce": "c6f2ee447a974342a84afb81e9d37e95",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1 techdevs-accounts-api",
    "state": "23767a94ff394637822f2ee03cd71047",
    "nonce": "c6f2ee447a974342a84afb81e9d37e95"
  }
}
2018-07-25 14:59:31.230 +01:00 [INF] Showing login: User is not authenticated
2018-07-25 14:59:31.248 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 14:59:31.248 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:59:31.248 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 14:59:31.248 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:59:32.904 +01:00 [INF] AuthenticationScheme: Google was challenged.
2018-07-25 14:59:36.926 +01:00 [INF] AuthenticationScheme: idsrv.external signed in.
2018-07-25 14:59:36.945 +01:00 [INF] AuthenticationScheme: idsrv.external was successfully authenticated.
2018-07-25 14:59:39.034 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Provider": "Google",
  "ProviderUserId": "107387075381855787656",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "DisplayName": "steve@techdevs.net",
  "Endpoint": "UI",
  "ActivityId": "0HLFI6Q4PH62V:00000003",
  "TimeStamp": "2018-07-25T13:59:39Z",
  "ProcessId": 23172,
  "LocalIpAddress": "127.0.0.1:11073",
  "RemoteIpAddress": "::1"
}
2018-07-25 14:59:39.049 +01:00 [DBG] Augmenting SignInContext
2018-07-25 14:59:39.052 +01:00 [DBG] Adding amr claim with value: external
2018-07-25 14:59:39.056 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2018-07-25 14:59:39.056 +01:00 [INF] AuthenticationScheme: idsrv.external signed out.
2018-07-25 14:59:39.056 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 14:59:39.057 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:59:39.057 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 14:59:39.059 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:59:39.076 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:59:39.076 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:59:39.076 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2018-07-25 14:59:39.077 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2018-07-25 14:59:39.077 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2018-07-25 14:59:39.085 +01:00 [DBG] Start authorize callback request
2018-07-25 14:59:39.093 +01:00 [DBG] User in authorize request: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 14:59:39.093 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 14:59:39.093 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:59:39.093 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 14:59:39.093 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1 techdevs-accounts-api",
  "State": "23767a94ff394637822f2ee03cd71047",
  "Nonce": "c6f2ee447a974342a84afb81e9d37e95",
  "SessionId": "970b64b7d5303869c4dc9f6fdd5b7ddd",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1 techdevs-accounts-api",
    "state": "23767a94ff394637822f2ee03cd71047",
    "nonce": "c6f2ee447a974342a84afb81e9d37e95"
  }
}
2018-07-25 14:59:39.094 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2018-07-25 14:59:39.106 +01:00 [DBG] Client is configured to not require consent, no consent is required
2018-07-25 14:59:39.117 +01:00 [DBG] Creating Implicit Flow response.
2018-07-25 14:59:39.130 +01:00 [DBG] Getting claims for access token for client: spa
2018-07-25 14:59:39.131 +01:00 [DBG] Getting claims for access token for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 14:59:39.141 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types [] via ClaimsProviderAccessToken
2018-07-25 14:59:39.146 +01:00 [DBG] Issued claims: []
2018-07-25 14:59:39.201 +01:00 [DBG] Getting claims for identity token for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 and client: spa
2018-07-25 14:59:39.201 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-07-25 14:59:39.219 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "Endpoint": "Authorize",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "Scopes": "openid profile api1 techdevs-accounts-api",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****hgpg"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****sc7w"
    }
  ],
  "ActivityId": "0HLFI6Q4PH62T:00000005",
  "TimeStamp": "2018-07-25T13:59:39Z",
  "ProcessId": 23172,
  "LocalIpAddress": "127.0.0.1:11073",
  "RemoteIpAddress": "::1"
}
2018-07-25 14:59:39.224 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ClientId": "spa",
  "RedirectUri": "http://localhost:5003/callback.html",
  "State": "23767a94ff394637822f2ee03cd71047",
  "Scope": "openid profile api1 techdevs-accounts-api"
}
2018-07-25 14:59:39.246 +01:00 [DBG] Augmenting SignInContext
2018-07-25 14:59:39.246 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2018-07-25 14:59:39.444 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 14:59:39.445 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 14:59:39.445 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 14:59:39.445 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 14:59:39.445 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 14:59:39.445 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 14:59:39.445 +01:00 [DBG] Start discovery request
2018-07-25 14:59:39.492 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:5003
2018-07-25 14:59:39.492 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 14:59:39.492 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 14:59:39.492 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-07-25 14:59:39.492 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-07-25 14:59:39.492 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-07-25 14:59:39.492 +01:00 [DBG] Start key discovery request
2018-07-25 14:59:39.621 +01:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:5003
2018-07-25 14:59:39.621 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 14:59:39.621 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 14:59:39.621 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-07-25 14:59:39.623 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-07-25 14:59:39.623 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-07-25 14:59:39.633 +01:00 [DBG] Start userinfo request
2018-07-25 14:59:39.639 +01:00 [DBG] Bearer token found in header
2018-07-25 14:59:39.658 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:59:39.658 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 14:59:39.659 +01:00 [DBG] IsActive called from: AccessTokenValidation
2018-07-25 14:59:39.659 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 14:59:39.659 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1532527179,
    "exp": 1532530779,
    "iss": "http://localhost:5000",
    "aud": [
      "http://localhost:5000/resources",
      "api1",
      "techdevs-accounts-api"
    ],
    "client_id": "spa",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532527179,
    "idp": "Google",
    "scope": [
      "openid",
      "profile",
      "api1",
      "techdevs-accounts-api"
    ],
    "amr": "external"
  }
}
2018-07-25 14:59:39.661 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2018-07-25 14:59:39.668 +01:00 [DBG] Creating userinfo response
2018-07-25 14:59:39.674 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 14:59:39.677 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 14:59:39.681 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-07-25 14:59:39.681 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 14:59:39.683 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2018-07-25 14:59:39.691 +01:00 [DBG] Issued claims: ["sub"]
2018-07-25 14:59:39.691 +01:00 [INF] Profile service returned to the following claim types: sub
2018-07-25 14:59:39.691 +01:00 [DBG] End userinfo request
2018-07-25 14:59:39.707 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:59:39.708 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:59:39.708 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 14:59:39.708 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 14:59:39.712 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 14:59:39.712 +01:00 [DBG] Rendering check session result
2018-07-25 14:59:39.901 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 14:59:39.901 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 14:59:39.901 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 14:59:39.901 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 14:59:39.901 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 14:59:39.901 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 14:59:39.901 +01:00 [DBG] Start discovery request
2018-07-25 14:59:39.928 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:59:39.929 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 14:59:39.929 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 14:59:39.929 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 14:59:39.929 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 14:59:39.929 +01:00 [DBG] Rendering check session result
2018-07-25 15:03:32.968 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:03:32.968 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:03:32.968 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-07-25 15:03:32.969 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-07-25 15:03:32.969 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-07-25 15:03:32.969 +01:00 [DBG] Start authorize request
2018-07-25 15:03:32.969 +01:00 [DBG] User in authorize request: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 15:03:32.969 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 15:03:32.970 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:03:32.974 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 15:03:32.974 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1 techdevs-accounts-api",
  "State": "affcb761ed0449cea5c40c1146ca1f9b",
  "Nonce": "3010c1eaf5e14c07a82432473fc289fc",
  "SessionId": "970b64b7d5303869c4dc9f6fdd5b7ddd",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1 techdevs-accounts-api",
    "state": "affcb761ed0449cea5c40c1146ca1f9b",
    "nonce": "3010c1eaf5e14c07a82432473fc289fc"
  }
}
2018-07-25 15:03:32.974 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2018-07-25 15:03:32.974 +01:00 [DBG] Client is configured to not require consent, no consent is required
2018-07-25 15:03:32.974 +01:00 [DBG] Creating Implicit Flow response.
2018-07-25 15:03:32.974 +01:00 [DBG] Getting claims for access token for client: spa
2018-07-25 15:03:32.975 +01:00 [DBG] Getting claims for access token for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 15:03:32.975 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types [] via ClaimsProviderAccessToken
2018-07-25 15:03:32.975 +01:00 [DBG] Issued claims: []
2018-07-25 15:03:32.977 +01:00 [DBG] Getting claims for identity token for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 and client: spa
2018-07-25 15:03:32.977 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-07-25 15:03:32.980 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "Endpoint": "Authorize",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "Scopes": "openid profile api1 techdevs-accounts-api",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****iWqg"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****NClA"
    }
  ],
  "ActivityId": "0HLFI6Q4PH630:00000001",
  "TimeStamp": "2018-07-25T14:03:32Z",
  "ProcessId": 23172,
  "LocalIpAddress": "127.0.0.1:11073",
  "RemoteIpAddress": "::1"
}
2018-07-25 15:03:32.980 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ClientId": "spa",
  "RedirectUri": "http://localhost:5003/callback.html",
  "State": "affcb761ed0449cea5c40c1146ca1f9b",
  "Scope": "openid profile api1 techdevs-accounts-api"
}
2018-07-25 15:03:33.158 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 15:03:33.158 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 15:03:33.158 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 15:03:33.159 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 15:03:33.159 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 15:03:33.159 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 15:03:33.159 +01:00 [DBG] Start discovery request
2018-07-25 15:03:33.210 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:5003
2018-07-25 15:03:33.210 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 15:03:33.210 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 15:03:33.210 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-07-25 15:03:33.210 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-07-25 15:03:33.211 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-07-25 15:03:33.211 +01:00 [DBG] Start key discovery request
2018-07-25 15:03:33.335 +01:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:5003
2018-07-25 15:03:33.335 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 15:03:33.335 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 15:03:33.336 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-07-25 15:03:33.336 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-07-25 15:03:33.336 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-07-25 15:03:33.336 +01:00 [DBG] Start userinfo request
2018-07-25 15:03:33.336 +01:00 [DBG] Bearer token found in header
2018-07-25 15:03:33.337 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:03:33.337 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:03:33.337 +01:00 [DBG] IsActive called from: AccessTokenValidation
2018-07-25 15:03:33.337 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 15:03:33.337 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1532527412,
    "exp": 1532531012,
    "iss": "http://localhost:5000",
    "aud": [
      "http://localhost:5000/resources",
      "api1",
      "techdevs-accounts-api"
    ],
    "client_id": "spa",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532527179,
    "idp": "Google",
    "scope": [
      "openid",
      "profile",
      "api1",
      "techdevs-accounts-api"
    ],
    "amr": "external"
  }
}
2018-07-25 15:03:33.337 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2018-07-25 15:03:33.337 +01:00 [DBG] Creating userinfo response
2018-07-25 15:03:33.337 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 15:03:33.337 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 15:03:33.337 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-07-25 15:03:33.337 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 15:03:33.337 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2018-07-25 15:03:33.338 +01:00 [DBG] Issued claims: ["sub"]
2018-07-25 15:03:33.338 +01:00 [INF] Profile service returned to the following claim types: sub
2018-07-25 15:03:33.338 +01:00 [DBG] End userinfo request
2018-07-25 15:03:33.359 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:03:33.359 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:03:33.359 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 15:03:33.359 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 15:03:33.359 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 15:03:33.359 +01:00 [DBG] Rendering check session result
2018-07-25 15:03:33.542 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 15:03:33.542 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 15:03:33.542 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 15:03:33.543 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 15:03:33.543 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 15:03:33.543 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 15:03:33.543 +01:00 [DBG] Start discovery request
2018-07-25 15:03:33.626 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:03:33.626 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:03:33.626 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 15:03:33.626 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 15:03:33.627 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 15:03:33.627 +01:00 [DBG] Rendering check session result
2018-07-25 15:28:20.406 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-07-25 15:28:20.547 +01:00 [DBG] Using idsrv as default scheme for authentication
2018-07-25 15:28:20.552 +01:00 [DBG] Using idsrv as default scheme for sign-in
2018-07-25 15:28:20.554 +01:00 [DBG] Using idsrv as default scheme for sign-out
2018-07-25 15:28:20.555 +01:00 [DBG] Using idsrv as default scheme for challenge
2018-07-25 15:28:20.555 +01:00 [DBG] Using idsrv as default scheme for forbid
2018-07-25 15:28:21.665 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:28:21.685 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:28:33.751 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:28:33.752 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:28:33.752 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:28:33.752 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:28:33.755 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:28:33.755 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:28:33.755 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:28:33.756 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:28:33.756 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:28:33.756 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:28:33.759 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:28:33.759 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:28:43.531 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 15:28:43.539 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 15:28:43.539 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 15:28:43.542 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 15:28:43.547 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 15:28:43.547 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 15:28:43.553 +01:00 [DBG] Start discovery request
2018-07-25 15:28:43.707 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:28:43.707 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:28:43.707 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 15:28:43.707 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 15:28:43.707 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 15:28:43.709 +01:00 [DBG] Rendering check session result
2018-07-25 15:28:45.072 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:28:45.072 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:28:45.072 +01:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2018-07-25 15:28:45.076 +01:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2018-07-25 15:28:45.076 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2018-07-25 15:28:45.097 +01:00 [DBG] Processing signout request for 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 15:28:45.104 +01:00 [DBG] Start end session request validation
2018-07-25 15:28:45.113 +01:00 [DBG] Start identity token validation
2018-07-25 15:28:45.165 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:28:45.165 +01:00 [DBG] Client found: spa / SPA Client
2018-07-25 15:28:45.254 +01:00 [DBG] IsActive called from: IdentityTokenValidation
2018-07-25 15:28:45.254 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 15:28:45.268 +01:00 [DBG] Token validation success
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "ValidateLifetime": false,
  "Claims": {
    "nbf": 1532527412,
    "exp": 1532527712,
    "iss": "http://localhost:5000",
    "aud": "spa",
    "nonce": "3010c1eaf5e14c07a82432473fc289fc",
    "iat": 1532527412,
    "at_hash": "4-C4in65WQzTRaxciQpbRw",
    "sid": "970b64b7d5303869c4dc9f6fdd5b7ddd",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532527179,
    "idp": "Google",
    "amr": "external"
  }
}
2018-07-25 15:28:45.306 +01:00 [INF] End session request validation success
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "PostLogOutUri": "http://localhost:5003/index.html",
  "Raw": {
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjUxZTMyMGM2ODUzZjVmZmY4MDA2YTEwODE3Y2JiMTNiIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1MzI1Mjc0MTIsImV4cCI6MTUzMjUyNzcxMiwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiIzMDEwYzFlYWY1ZTE0YzA3YTgyNDMyNDczZmMyODlmYyIsImlhdCI6MTUzMjUyNzQxMiwiYXRfaGFzaCI6IjQtQzRpbjY1V1F6VFJheGNpUXBiUnciLCJzaWQiOiI5NzBiNjRiN2Q1MzAzODY5YzRkYzlmNmZkZDViN2RkZCIsInN1YiI6IjVlNWMwMmE2LTJhZjEtNDdkMy1iOWRiLWE2YjE2MGQ4Y2E1OSIsImF1dGhfdGltZSI6MTUzMjUyNzE3OSwiaWRwIjoiR29vZ2xlIiwiYW1yIjpbImV4dGVybmFsIl19.Rr_LyGAEozHBX_rH5gUqTAL7aedwCBr78FQMFX4EeCDZQyZ4Q_cBoYSyQEQEFFwm40NtqzaD0CsB6VE2oxzs96gdXus2vwpqFK8EuwUa_qWziuR5vCLcFHtoqRebwghsJSCgUK8MknPO8N76Du_LNxGtwqGsQfMPrB1ESMdNGZK4OsJdD6PUW-ct2Hk0JI2Cn2n_EPwNiufOgNZvIn6jlqnW3jkGqLiGCY_odXf7-DcCeODkD83B5XJmrLcojaDS_K7NLgxSSHzH5jE0KY_3lURKx-0NaFeMjqdNVHpmXCPDr-LKQ0gV1GeuRnCirIANuP7xGoOhYpnonqd3WFiWqg",
    "post_logout_redirect_uri": "http://localhost:5003/index.html"
  }
}
2018-07-25 15:28:45.306 +01:00 [DBG] Success validating end session request from spa
2018-07-25 15:28:45.343 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:28:45.343 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:28:46.067 +01:00 [INF] AuthenticationScheme: idsrv signed out.
2018-07-25 15:28:46.128 +01:00 [INF] {
  "Name": "User Logout Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1002,
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "DisplayName": "Steve Kent",
  "ActivityId": "0HLFI7BFKHL40:00000003",
  "TimeStamp": "2018-07-25T14:28:46Z",
  "ProcessId": 14124,
  "LocalIpAddress": "127.0.0.1:27052",
  "RemoteIpAddress": "::1"
}
2018-07-25 15:28:47.004 +01:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2018-07-25 15:28:47.016 +01:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2018-07-25 15:28:47.016 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2018-07-25 15:28:47.067 +01:00 [DBG] Processing signout callback request
2018-07-25 15:28:47.086 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:28:47.087 +01:00 [DBG] No client front-channel logout URLs
2018-07-25 15:28:47.087 +01:00 [DBG] No client back-channel logout URLs
2018-07-25 15:28:47.087 +01:00 [INF] Successful signout callback.
2018-07-25 15:28:47.087 +01:00 [DBG] No client front-channel iframe urls
2018-07-25 15:28:47.087 +01:00 [DBG] No client back-channel iframe urls
2018-07-25 15:28:49.719 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 15:28:49.720 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 15:28:49.720 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 15:28:49.720 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 15:28:49.720 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 15:28:49.720 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 15:28:49.720 +01:00 [DBG] Start discovery request
2018-07-25 15:28:49.735 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-07-25 15:28:49.739 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-07-25 15:28:49.739 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-07-25 15:28:49.744 +01:00 [DBG] Start authorize request
2018-07-25 15:28:49.751 +01:00 [DBG] No user present in authorize request
2018-07-25 15:28:49.758 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 15:28:49.764 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:28:49.799 +01:00 [ERR] Invalid scope: emailaddress
2018-07-25 15:28:49.802 +01:00 [ERR] Request validation failed
2018-07-25 15:28:49.814 +01:00 [INF] {
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1 techdevs-accounts-api emailaddress name given_name family_name",
  "State": "e7fc061e77f549858f4a29189813857d",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1 techdevs-accounts-api emailaddress name given_name family_name",
    "state": "e7fc061e77f549858f4a29189813857d",
    "nonce": "d7501c61aa0148f596e27005dd41cd22"
  }
}
2018-07-25 15:28:49.824 +01:00 [INF] {
  "Name": "Token Issued Failure",
  "Category": "Token",
  "EventType": "Failure",
  "Id": 2001,
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "Endpoint": "Authorize",
  "Scopes": "openid profile api1 techdevs-accounts-api emailaddress name given_name family_name",
  "GrantType": "implicit",
  "Error": "invalid_scope",
  "ActivityId": "0HLFI7BFKHL45:00000003",
  "TimeStamp": "2018-07-25T14:28:49Z",
  "ProcessId": 14124,
  "LocalIpAddress": "127.0.0.1:27052",
  "RemoteIpAddress": "::1"
}
2018-07-25 15:29:22.794 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 15:29:22.794 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 15:29:22.794 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 15:29:22.794 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 15:29:22.795 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 15:29:22.795 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 15:29:22.795 +01:00 [DBG] Start discovery request
2018-07-25 15:29:22.810 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-07-25 15:29:22.810 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-07-25 15:29:22.810 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-07-25 15:29:22.810 +01:00 [DBG] Start authorize request
2018-07-25 15:29:22.810 +01:00 [DBG] No user present in authorize request
2018-07-25 15:29:22.811 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 15:29:22.811 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:29:22.811 +01:00 [ERR] Invalid scope: emailaddress
2018-07-25 15:29:22.811 +01:00 [ERR] Request validation failed
2018-07-25 15:29:22.811 +01:00 [INF] {
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1 techdevs-accounts-api emailaddress name given_name family_name",
  "State": "df1784514a5645cf88d5e5869a76352b",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1 techdevs-accounts-api emailaddress name given_name family_name",
    "state": "df1784514a5645cf88d5e5869a76352b",
    "nonce": "4174cb9ee08e4ac287c13752ea52f5a3"
  }
}
2018-07-25 15:29:22.811 +01:00 [INF] {
  "Name": "Token Issued Failure",
  "Category": "Token",
  "EventType": "Failure",
  "Id": 2001,
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "Endpoint": "Authorize",
  "Scopes": "openid profile api1 techdevs-accounts-api emailaddress name given_name family_name",
  "GrantType": "implicit",
  "Error": "invalid_scope",
  "ActivityId": "0HLFI7BFKHL46:00000004",
  "TimeStamp": "2018-07-25T14:29:22Z",
  "ProcessId": 14124,
  "LocalIpAddress": "127.0.0.1:27052",
  "RemoteIpAddress": "::1"
}
2018-07-25 15:29:30.105 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 15:29:30.105 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 15:29:30.105 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 15:29:30.105 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 15:29:30.105 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 15:29:30.105 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 15:29:30.105 +01:00 [DBG] Start discovery request
2018-07-25 15:29:30.123 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-07-25 15:29:30.123 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-07-25 15:29:30.123 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-07-25 15:29:30.123 +01:00 [DBG] Start authorize request
2018-07-25 15:29:30.123 +01:00 [DBG] No user present in authorize request
2018-07-25 15:29:30.123 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 15:29:30.123 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:29:30.145 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 15:29:30.146 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1 techdevs-accounts-api",
  "State": "c8bbeaf6f4e04f0396fe00e4605c29e4",
  "Nonce": "1dbaa4a404ae406cada1fb20d3181dd3",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1 techdevs-accounts-api",
    "state": "c8bbeaf6f4e04f0396fe00e4605c29e4",
    "nonce": "1dbaa4a404ae406cada1fb20d3181dd3"
  }
}
2018-07-25 15:29:30.158 +01:00 [INF] Showing login: User is not authenticated
2018-07-25 15:29:30.196 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 15:29:30.196 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:29:30.196 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 15:29:30.203 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:29:34.394 +01:00 [INF] AuthenticationScheme: Google was challenged.
2018-07-25 15:29:40.346 +01:00 [INF] AuthenticationScheme: idsrv.external signed in.
2018-07-25 15:29:40.367 +01:00 [INF] AuthenticationScheme: idsrv.external was successfully authenticated.
2018-07-25 15:29:42.641 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Provider": "Google",
  "ProviderUserId": "107387075381855787656",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "DisplayName": "steve@techdevs.net",
  "Endpoint": "UI",
  "ActivityId": "0HLFI7BFKHL44:00000005",
  "TimeStamp": "2018-07-25T14:29:42Z",
  "ProcessId": 14124,
  "LocalIpAddress": "127.0.0.1:27052",
  "RemoteIpAddress": "::1"
}
2018-07-25 15:29:42.656 +01:00 [DBG] Augmenting SignInContext
2018-07-25 15:29:42.659 +01:00 [DBG] Adding amr claim with value: external
2018-07-25 15:29:42.663 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2018-07-25 15:29:42.663 +01:00 [INF] AuthenticationScheme: idsrv.external signed out.
2018-07-25 15:29:42.664 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 15:29:42.664 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:29:42.664 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 15:29:42.667 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:29:42.681 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:29:42.681 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:29:42.681 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2018-07-25 15:29:42.682 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2018-07-25 15:29:42.682 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2018-07-25 15:29:42.691 +01:00 [DBG] Start authorize callback request
2018-07-25 15:29:42.697 +01:00 [DBG] User in authorize request: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 15:29:42.698 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 15:29:42.698 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:29:42.698 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 15:29:42.698 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1 techdevs-accounts-api",
  "State": "c8bbeaf6f4e04f0396fe00e4605c29e4",
  "Nonce": "1dbaa4a404ae406cada1fb20d3181dd3",
  "SessionId": "4b2e502f96a9be58a36c3ef376f5f676",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1 techdevs-accounts-api",
    "state": "c8bbeaf6f4e04f0396fe00e4605c29e4",
    "nonce": "1dbaa4a404ae406cada1fb20d3181dd3"
  }
}
2018-07-25 15:29:42.698 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2018-07-25 15:29:42.711 +01:00 [DBG] Client is configured to not require consent, no consent is required
2018-07-25 15:29:42.722 +01:00 [DBG] Creating Implicit Flow response.
2018-07-25 15:29:42.738 +01:00 [DBG] Getting claims for access token for client: spa
2018-07-25 15:29:42.739 +01:00 [DBG] Getting claims for access token for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 15:29:42.749 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types [] via ClaimsProviderAccessToken
2018-07-25 15:29:42.755 +01:00 [DBG] Issued claims: []
2018-07-25 15:29:42.804 +01:00 [DBG] Getting claims for identity token for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 and client: spa
2018-07-25 15:29:42.804 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-07-25 15:29:42.821 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "Endpoint": "Authorize",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "Scopes": "openid profile api1 techdevs-accounts-api",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****ygyA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****Jt7g"
    }
  ],
  "ActivityId": "0HLFI7BFKHL41:00000006",
  "TimeStamp": "2018-07-25T14:29:42Z",
  "ProcessId": 14124,
  "LocalIpAddress": "127.0.0.1:27052",
  "RemoteIpAddress": "::1"
}
2018-07-25 15:29:42.826 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ClientId": "spa",
  "RedirectUri": "http://localhost:5003/callback.html",
  "State": "c8bbeaf6f4e04f0396fe00e4605c29e4",
  "Scope": "openid profile api1 techdevs-accounts-api"
}
2018-07-25 15:29:42.841 +01:00 [DBG] Augmenting SignInContext
2018-07-25 15:29:42.841 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2018-07-25 15:29:43.343 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 15:29:43.343 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 15:29:43.343 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 15:29:43.343 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 15:29:43.343 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 15:29:43.343 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 15:29:43.344 +01:00 [DBG] Start discovery request
2018-07-25 15:29:43.395 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:5003
2018-07-25 15:29:43.395 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 15:29:43.395 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 15:29:43.395 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-07-25 15:29:43.396 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-07-25 15:29:43.396 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-07-25 15:29:43.400 +01:00 [DBG] Start key discovery request
2018-07-25 15:29:43.498 +01:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:5003
2018-07-25 15:29:43.498 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 15:29:43.498 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 15:29:43.498 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-07-25 15:29:43.500 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-07-25 15:29:43.500 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-07-25 15:29:43.509 +01:00 [DBG] Start userinfo request
2018-07-25 15:29:43.515 +01:00 [DBG] Bearer token found in header
2018-07-25 15:29:43.533 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:29:43.533 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:29:43.534 +01:00 [DBG] IsActive called from: AccessTokenValidation
2018-07-25 15:29:43.534 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 15:29:43.535 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1532528982,
    "exp": 1532532582,
    "iss": "http://localhost:5000",
    "aud": [
      "http://localhost:5000/resources",
      "api1",
      "techdevs-accounts-api"
    ],
    "client_id": "spa",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532528982,
    "idp": "Google",
    "scope": [
      "openid",
      "profile",
      "api1",
      "techdevs-accounts-api"
    ],
    "amr": "external"
  }
}
2018-07-25 15:29:43.537 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2018-07-25 15:29:43.546 +01:00 [DBG] Creating userinfo response
2018-07-25 15:29:43.553 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 15:29:43.557 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 15:29:43.561 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-07-25 15:29:43.561 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 15:29:43.562 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2018-07-25 15:29:43.572 +01:00 [DBG] Issued claims: ["sub"]
2018-07-25 15:29:43.573 +01:00 [INF] Profile service returned to the following claim types: sub
2018-07-25 15:29:43.573 +01:00 [DBG] End userinfo request
2018-07-25 15:29:43.586 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:29:43.586 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:29:43.587 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 15:29:43.587 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 15:29:43.587 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 15:29:43.587 +01:00 [DBG] Rendering check session result
2018-07-25 15:29:43.781 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 15:29:43.781 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 15:29:43.781 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 15:29:43.781 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 15:29:43.781 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 15:29:43.781 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 15:29:43.781 +01:00 [DBG] Start discovery request
2018-07-25 15:29:43.806 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:29:43.807 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:29:43.807 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 15:29:43.807 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 15:29:43.807 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 15:29:43.807 +01:00 [DBG] Rendering check session result
2018-07-25 15:29:58.160 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 15:29:58.160 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 15:29:58.160 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 15:29:58.160 +01:00 [DBG] Start discovery request
2018-07-25 15:29:58.345 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-07-25 15:29:58.345 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-07-25 15:29:58.346 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-07-25 15:29:58.346 +01:00 [DBG] Start key discovery request
2018-07-25 15:31:12.220 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:31:12.220 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:31:12.220 +01:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2018-07-25 15:31:12.221 +01:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2018-07-25 15:31:12.225 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2018-07-25 15:31:12.225 +01:00 [DBG] Processing signout request for 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 15:31:12.225 +01:00 [DBG] Start end session request validation
2018-07-25 15:31:12.225 +01:00 [DBG] Start identity token validation
2018-07-25 15:31:12.226 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:31:12.226 +01:00 [DBG] Client found: spa / SPA Client
2018-07-25 15:31:12.226 +01:00 [DBG] IsActive called from: IdentityTokenValidation
2018-07-25 15:31:12.226 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 15:31:12.226 +01:00 [DBG] Token validation success
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "ValidateLifetime": false,
  "Claims": {
    "nbf": 1532528982,
    "exp": 1532529282,
    "iss": "http://localhost:5000",
    "aud": "spa",
    "nonce": "1dbaa4a404ae406cada1fb20d3181dd3",
    "iat": 1532528982,
    "at_hash": "K_LRZz1YSd6ghgqDGK0gKw",
    "sid": "4b2e502f96a9be58a36c3ef376f5f676",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532528982,
    "idp": "Google",
    "amr": "external"
  }
}
2018-07-25 15:31:12.227 +01:00 [INF] End session request validation success
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "PostLogOutUri": "http://localhost:5003/index.html",
  "Raw": {
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjUxZTMyMGM2ODUzZjVmZmY4MDA2YTEwODE3Y2JiMTNiIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1MzI1Mjg5ODIsImV4cCI6MTUzMjUyOTI4MiwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiIxZGJhYTRhNDA0YWU0MDZjYWRhMWZiMjBkMzE4MWRkMyIsImlhdCI6MTUzMjUyODk4MiwiYXRfaGFzaCI6IktfTFJaejFZU2Q2Z2hncURHSzBnS3ciLCJzaWQiOiI0YjJlNTAyZjk2YTliZTU4YTM2YzNlZjM3NmY1ZjY3NiIsInN1YiI6IjVlNWMwMmE2LTJhZjEtNDdkMy1iOWRiLWE2YjE2MGQ4Y2E1OSIsImF1dGhfdGltZSI6MTUzMjUyODk4MiwiaWRwIjoiR29vZ2xlIiwiYW1yIjpbImV4dGVybmFsIl19.gC1fyIiHuggwcvjuFzEbwixwigjWDdIbpvvDKmBtKEEqZTIqh7nvb41MVyv-OW-040bEQ70lQx1ANKZhMX9NaXjTn5bawO_4OU9z_q4vHH4ZLXsbCAjVM-tNqc9H6CzmhUpxq8UkdtbGYgMYSAjkRWaOOaHbf6_yUCXhlkLdOzYC5c8bh8voD2zxk6ykH6on81vyPh9gmPnx7RZLvGCJ01emyXkXYscDsS0utO0oZIRCk5i11qS3UHPPJYkZoJfhcKtwMGeB_u-TtOWZ-Mv0pFO46abz2xtH44-_DR_UEOJAkSRawkw6xInxYF4-9tSyrhIgV5WPfpSFuQdmeaygyA",
    "post_logout_redirect_uri": "http://localhost:5003/index.html"
  }
}
2018-07-25 15:31:12.227 +01:00 [DBG] Success validating end session request from spa
2018-07-25 15:31:12.234 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:31:12.234 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:31:12.237 +01:00 [INF] AuthenticationScheme: idsrv signed out.
2018-07-25 15:31:12.237 +01:00 [INF] {
  "Name": "User Logout Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1002,
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "DisplayName": "Steve Kent",
  "ActivityId": "0HLFI7BFKHL47:00000002",
  "TimeStamp": "2018-07-25T14:31:12Z",
  "ProcessId": 14124,
  "LocalIpAddress": "127.0.0.1:27052",
  "RemoteIpAddress": "::1"
}
2018-07-25 15:31:12.292 +01:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2018-07-25 15:31:12.292 +01:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2018-07-25 15:31:12.292 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2018-07-25 15:31:12.292 +01:00 [DBG] Processing signout callback request
2018-07-25 15:31:12.293 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:31:12.293 +01:00 [DBG] No client front-channel logout URLs
2018-07-25 15:31:12.293 +01:00 [DBG] No client back-channel logout URLs
2018-07-25 15:31:12.293 +01:00 [INF] Successful signout callback.
2018-07-25 15:31:12.293 +01:00 [DBG] No client front-channel iframe urls
2018-07-25 15:31:12.293 +01:00 [DBG] No client back-channel iframe urls
2018-07-25 15:31:17.845 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 15:31:17.845 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 15:31:17.845 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 15:31:17.845 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 15:31:17.845 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 15:31:17.845 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 15:31:17.845 +01:00 [DBG] Start discovery request
2018-07-25 15:31:17.861 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-07-25 15:31:17.861 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-07-25 15:31:17.861 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-07-25 15:31:17.861 +01:00 [DBG] Start authorize request
2018-07-25 15:31:17.861 +01:00 [DBG] No user present in authorize request
2018-07-25 15:31:17.861 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 15:31:17.861 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:31:17.861 +01:00 [ERR] Invalid scope: email_address
2018-07-25 15:31:17.861 +01:00 [ERR] Request validation failed
2018-07-25 15:31:17.862 +01:00 [INF] {
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1 techdevs-accounts-api email_address",
  "State": "0fc44aec79654c31b055e986336cf72e",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1 techdevs-accounts-api email_address",
    "state": "0fc44aec79654c31b055e986336cf72e",
    "nonce": "353801ef93ed4ac8851a2ed06860d82a"
  }
}
2018-07-25 15:31:17.862 +01:00 [INF] {
  "Name": "Token Issued Failure",
  "Category": "Token",
  "EventType": "Failure",
  "Id": 2001,
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "Endpoint": "Authorize",
  "Scopes": "openid profile api1 techdevs-accounts-api email_address",
  "GrantType": "implicit",
  "Error": "invalid_scope",
  "ActivityId": "0HLFI7BFKHL47:00000005",
  "TimeStamp": "2018-07-25T14:31:17Z",
  "ProcessId": 14124,
  "LocalIpAddress": "127.0.0.1:27052",
  "RemoteIpAddress": "::1"
}
2018-07-25 15:31:33.438 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 15:31:33.438 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 15:31:33.438 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 15:31:33.438 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 15:31:33.438 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 15:31:33.438 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 15:31:33.438 +01:00 [DBG] Start discovery request
2018-07-25 15:31:33.452 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-07-25 15:31:33.452 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-07-25 15:31:33.452 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-07-25 15:31:33.453 +01:00 [DBG] Start authorize request
2018-07-25 15:31:33.453 +01:00 [DBG] No user present in authorize request
2018-07-25 15:31:33.453 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 15:31:33.453 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:31:33.453 +01:00 [ERR] Invalid scope: name
2018-07-25 15:31:33.453 +01:00 [ERR] Request validation failed
2018-07-25 15:31:33.453 +01:00 [INF] {
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1 techdevs-accounts-api name",
  "State": "3ac706c5d5224e23b3103b6735bfc9ac",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1 techdevs-accounts-api name",
    "state": "3ac706c5d5224e23b3103b6735bfc9ac",
    "nonce": "9e398f0c851c402e94b4398ce84990f5"
  }
}
2018-07-25 15:31:33.453 +01:00 [INF] {
  "Name": "Token Issued Failure",
  "Category": "Token",
  "EventType": "Failure",
  "Id": 2001,
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "Endpoint": "Authorize",
  "Scopes": "openid profile api1 techdevs-accounts-api name",
  "GrantType": "implicit",
  "Error": "invalid_scope",
  "ActivityId": "0HLFI7BFKHL47:0000000B",
  "TimeStamp": "2018-07-25T14:31:33Z",
  "ProcessId": 14124,
  "LocalIpAddress": "127.0.0.1:27052",
  "RemoteIpAddress": "::1"
}
2018-07-25 15:51:16.743 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 15:51:16.743 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 15:51:16.744 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 15:51:16.744 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 15:51:16.744 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 15:51:16.744 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 15:51:16.744 +01:00 [DBG] Start discovery request
2018-07-25 15:51:16.758 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-07-25 15:51:16.758 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-07-25 15:51:16.758 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-07-25 15:51:16.758 +01:00 [DBG] Start authorize request
2018-07-25 15:51:16.758 +01:00 [DBG] No user present in authorize request
2018-07-25 15:51:16.759 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 15:51:16.759 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:51:16.759 +01:00 [ERR] Invalid scope: name
2018-07-25 15:51:16.759 +01:00 [ERR] Request validation failed
2018-07-25 15:51:16.759 +01:00 [INF] {
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1 techdevs-accounts-api name",
  "State": "cca2878abc074d838e8c2f1505191dfc",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1 techdevs-accounts-api name",
    "state": "cca2878abc074d838e8c2f1505191dfc",
    "nonce": "223d66fcdaba4b96be0121e416ef8015"
  }
}
2018-07-25 15:51:16.759 +01:00 [INF] {
  "Name": "Token Issued Failure",
  "Category": "Token",
  "EventType": "Failure",
  "Id": 2001,
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "Endpoint": "Authorize",
  "Scopes": "openid profile api1 techdevs-accounts-api name",
  "GrantType": "implicit",
  "Error": "invalid_scope",
  "ActivityId": "0HLFI7BFKHL4A:00000002",
  "TimeStamp": "2018-07-25T14:51:16Z",
  "ProcessId": 14124,
  "LocalIpAddress": "127.0.0.1:27052",
  "RemoteIpAddress": "::1"
}
2018-07-25 15:51:20.640 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 15:51:20.640 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 15:51:20.640 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 15:51:20.640 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 15:51:20.640 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 15:51:20.641 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 15:51:20.641 +01:00 [DBG] Start discovery request
2018-07-25 15:51:20.655 +01:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2018-07-25 15:51:20.655 +01:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2018-07-25 15:51:20.655 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2018-07-25 15:51:20.655 +01:00 [DBG] Processing signout request for anonymous
2018-07-25 15:51:20.655 +01:00 [DBG] Start end session request validation
2018-07-25 15:51:20.655 +01:00 [INF] End session request validation success
{
  "SubjectId": "unknown",
  "Raw": {
    "post_logout_redirect_uri": "http://localhost:5003/index.html"
  }
}
2018-07-25 15:51:20.655 +01:00 [DBG] Success validating end session request from null
2018-07-25 15:51:34.066 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 15:51:34.067 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 15:51:34.067 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 15:51:34.067 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 15:51:34.067 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 15:51:34.067 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 15:51:34.067 +01:00 [DBG] Start discovery request
2018-07-25 15:51:34.084 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-07-25 15:51:34.084 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-07-25 15:51:34.084 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-07-25 15:51:34.084 +01:00 [DBG] Start authorize request
2018-07-25 15:51:34.084 +01:00 [DBG] No user present in authorize request
2018-07-25 15:51:34.084 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 15:51:34.084 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:51:34.085 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 15:51:34.085 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1 techdevs-accounts-api",
  "State": "d11ec88b9f754717b0b7036e95d99d09",
  "Nonce": "af1d4f1a76494411ae920c09872c808f",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1 techdevs-accounts-api",
    "state": "d11ec88b9f754717b0b7036e95d99d09",
    "nonce": "af1d4f1a76494411ae920c09872c808f"
  }
}
2018-07-25 15:51:34.085 +01:00 [INF] Showing login: User is not authenticated
2018-07-25 15:51:34.092 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 15:51:34.092 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:51:34.093 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 15:51:34.093 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:51:35.293 +01:00 [INF] AuthenticationScheme: Google was challenged.
2018-07-25 15:51:40.270 +01:00 [INF] AuthenticationScheme: idsrv.external signed in.
2018-07-25 15:51:40.288 +01:00 [INF] AuthenticationScheme: idsrv.external was successfully authenticated.
2018-07-25 15:51:42.312 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Provider": "Google",
  "ProviderUserId": "107387075381855787656",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "DisplayName": "steve@techdevs.net",
  "Endpoint": "UI",
  "ActivityId": "0HLFI7BFKHL4C:00000006",
  "TimeStamp": "2018-07-25T14:51:42Z",
  "ProcessId": 14124,
  "LocalIpAddress": "127.0.0.1:27052",
  "RemoteIpAddress": "::1"
}
2018-07-25 15:51:42.312 +01:00 [DBG] Augmenting SignInContext
2018-07-25 15:51:42.312 +01:00 [DBG] Adding amr claim with value: external
2018-07-25 15:51:42.313 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2018-07-25 15:51:42.313 +01:00 [INF] AuthenticationScheme: idsrv.external signed out.
2018-07-25 15:51:42.313 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 15:51:42.313 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:51:42.313 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 15:51:42.313 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:51:42.325 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:51:42.326 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:51:42.326 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2018-07-25 15:51:42.326 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2018-07-25 15:51:42.326 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2018-07-25 15:51:42.326 +01:00 [DBG] Start authorize callback request
2018-07-25 15:51:42.327 +01:00 [DBG] User in authorize request: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 15:51:42.327 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 15:51:42.327 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:51:42.327 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 15:51:42.327 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1 techdevs-accounts-api",
  "State": "d11ec88b9f754717b0b7036e95d99d09",
  "Nonce": "af1d4f1a76494411ae920c09872c808f",
  "SessionId": "509b5684b6f737c65b6c5c0cbc1ac49f",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1 techdevs-accounts-api",
    "state": "d11ec88b9f754717b0b7036e95d99d09",
    "nonce": "af1d4f1a76494411ae920c09872c808f"
  }
}
2018-07-25 15:51:42.328 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2018-07-25 15:51:42.328 +01:00 [DBG] Client is configured to not require consent, no consent is required
2018-07-25 15:51:42.328 +01:00 [DBG] Creating Implicit Flow response.
2018-07-25 15:51:42.328 +01:00 [DBG] Getting claims for access token for client: spa
2018-07-25 15:51:42.328 +01:00 [DBG] Getting claims for access token for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 15:51:42.329 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types [] via ClaimsProviderAccessToken
2018-07-25 15:51:42.329 +01:00 [DBG] Issued claims: []
2018-07-25 15:51:42.334 +01:00 [DBG] Getting claims for identity token for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 and client: spa
2018-07-25 15:51:42.334 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-07-25 15:51:42.340 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "Endpoint": "Authorize",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "Scopes": "openid profile api1 techdevs-accounts-api",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****TJSQ"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****m_SA"
    }
  ],
  "ActivityId": "0HLFI7BFKHL4A:00000010",
  "TimeStamp": "2018-07-25T14:51:42Z",
  "ProcessId": 14124,
  "LocalIpAddress": "127.0.0.1:27052",
  "RemoteIpAddress": "::1"
}
2018-07-25 15:51:42.353 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ClientId": "spa",
  "RedirectUri": "http://localhost:5003/callback.html",
  "State": "d11ec88b9f754717b0b7036e95d99d09",
  "Scope": "openid profile api1 techdevs-accounts-api"
}
2018-07-25 15:51:42.354 +01:00 [DBG] Augmenting SignInContext
2018-07-25 15:51:42.354 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2018-07-25 15:51:42.850 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 15:51:42.850 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 15:51:42.850 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 15:51:42.850 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 15:51:42.850 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 15:51:42.850 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 15:51:42.850 +01:00 [DBG] Start discovery request
2018-07-25 15:51:42.893 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:5003
2018-07-25 15:51:42.893 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 15:51:42.893 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 15:51:42.894 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-07-25 15:51:42.894 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-07-25 15:51:42.894 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-07-25 15:51:42.894 +01:00 [DBG] Start key discovery request
2018-07-25 15:51:42.977 +01:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:5003
2018-07-25 15:51:42.977 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 15:51:42.978 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 15:51:42.978 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-07-25 15:51:42.978 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-07-25 15:51:42.978 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-07-25 15:51:42.978 +01:00 [DBG] Start userinfo request
2018-07-25 15:51:42.978 +01:00 [DBG] Bearer token found in header
2018-07-25 15:51:42.979 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:51:42.979 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:51:42.979 +01:00 [DBG] IsActive called from: AccessTokenValidation
2018-07-25 15:51:42.979 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 15:51:42.979 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1532530302,
    "exp": 1532533902,
    "iss": "http://localhost:5000",
    "aud": [
      "http://localhost:5000/resources",
      "api1",
      "techdevs-accounts-api"
    ],
    "client_id": "spa",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532530302,
    "idp": "Google",
    "scope": [
      "openid",
      "profile",
      "api1",
      "techdevs-accounts-api"
    ],
    "amr": "external"
  }
}
2018-07-25 15:51:42.979 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2018-07-25 15:51:42.979 +01:00 [DBG] Creating userinfo response
2018-07-25 15:51:42.979 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 15:51:42.980 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 15:51:42.980 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-07-25 15:51:42.980 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 15:51:42.980 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2018-07-25 15:51:42.980 +01:00 [DBG] Issued claims: ["sub"]
2018-07-25 15:51:42.980 +01:00 [INF] Profile service returned to the following claim types: sub
2018-07-25 15:51:42.980 +01:00 [DBG] End userinfo request
2018-07-25 15:51:43.003 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:51:43.003 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:51:43.003 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 15:51:43.003 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 15:51:43.003 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 15:51:43.003 +01:00 [DBG] Rendering check session result
2018-07-25 15:51:43.197 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 15:51:43.197 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 15:51:43.198 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 15:51:43.198 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 15:51:43.198 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 15:51:43.198 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 15:51:43.198 +01:00 [DBG] Start discovery request
2018-07-25 15:51:43.224 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:51:43.224 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:51:43.224 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 15:51:43.225 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 15:51:43.225 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 15:51:43.225 +01:00 [DBG] Rendering check session result
2018-07-25 15:52:36.328 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 15:52:36.328 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 15:52:36.328 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 15:52:36.328 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 15:52:36.328 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 15:52:36.329 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 15:52:36.329 +01:00 [DBG] Start discovery request
2018-07-25 15:52:36.406 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:52:36.406 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:52:36.406 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 15:52:36.406 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 15:52:36.406 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 15:52:36.406 +01:00 [DBG] Rendering check session result
2018-07-25 15:52:45.665 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:52:45.665 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:52:45.665 +01:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2018-07-25 15:52:45.665 +01:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2018-07-25 15:52:45.665 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2018-07-25 15:52:45.665 +01:00 [DBG] Processing signout request for 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 15:52:45.665 +01:00 [DBG] Start end session request validation
2018-07-25 15:52:45.665 +01:00 [DBG] Start identity token validation
2018-07-25 15:52:45.665 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:52:45.665 +01:00 [DBG] Client found: spa / SPA Client
2018-07-25 15:52:45.666 +01:00 [DBG] IsActive called from: IdentityTokenValidation
2018-07-25 15:52:45.666 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 15:52:45.666 +01:00 [DBG] Token validation success
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "ValidateLifetime": false,
  "Claims": {
    "nbf": 1532530302,
    "exp": 1532530602,
    "iss": "http://localhost:5000",
    "aud": "spa",
    "nonce": "af1d4f1a76494411ae920c09872c808f",
    "iat": 1532530302,
    "at_hash": "AAVigykdapJAqeuvlRIhWA",
    "sid": "509b5684b6f737c65b6c5c0cbc1ac49f",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532530302,
    "idp": "Google",
    "amr": "external"
  }
}
2018-07-25 15:52:45.666 +01:00 [INF] End session request validation success
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "PostLogOutUri": "http://localhost:5003/index.html",
  "Raw": {
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjUxZTMyMGM2ODUzZjVmZmY4MDA2YTEwODE3Y2JiMTNiIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1MzI1MzAzMDIsImV4cCI6MTUzMjUzMDYwMiwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiJhZjFkNGYxYTc2NDk0NDExYWU5MjBjMDk4NzJjODA4ZiIsImlhdCI6MTUzMjUzMDMwMiwiYXRfaGFzaCI6IkFBVmlneWtkYXBKQXFldXZsUkloV0EiLCJzaWQiOiI1MDliNTY4NGI2ZjczN2M2NWI2YzVjMGNiYzFhYzQ5ZiIsInN1YiI6IjVlNWMwMmE2LTJhZjEtNDdkMy1iOWRiLWE2YjE2MGQ4Y2E1OSIsImF1dGhfdGltZSI6MTUzMjUzMDMwMiwiaWRwIjoiR29vZ2xlIiwiYW1yIjpbImV4dGVybmFsIl19.O-X6jCBeeqbeEFHN-RBtSTPf_DIuuO1In5MewGm6PXHNxtqTw44FHBeC39mGEi9407Np5D83nwmQjS0FCMFkY7qmMWoy8I0knYHYgqpJ-se1ophsd2v0Gozb-0E6fhISsOQliI6wBlkYyS1aRBKI6Z8mOi_0wCWJtDref0r8cNchiSyHGIkx7BHQuMTF6eEwyzdDoSMDZRtWywKpyDjsTryNLX6126CdDU-qQFisw4f_LPaQ3puDT8h6ZIdVwfP5T4w_wyx5kfIo6t8RcGGW1VpNLovQ0dw765MJI1d2PM-k4Tqn2BlCFh_HYnGL5jaTDqsvC_BbCtv4pKVOveTJSQ",
    "post_logout_redirect_uri": "http://localhost:5003/index.html"
  }
}
2018-07-25 15:52:45.666 +01:00 [DBG] Success validating end session request from spa
2018-07-25 15:52:45.674 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:52:45.674 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:52:45.678 +01:00 [INF] AuthenticationScheme: idsrv signed out.
2018-07-25 15:52:45.678 +01:00 [INF] {
  "Name": "User Logout Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1002,
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "DisplayName": "Steve Kent",
  "ActivityId": "0HLFI7BFKHL4A:00000014",
  "TimeStamp": "2018-07-25T14:52:45Z",
  "ProcessId": 14124,
  "LocalIpAddress": "127.0.0.1:27052",
  "RemoteIpAddress": "::1"
}
2018-07-25 15:52:45.766 +01:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2018-07-25 15:52:45.766 +01:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2018-07-25 15:52:45.766 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2018-07-25 15:52:45.766 +01:00 [DBG] Processing signout callback request
2018-07-25 15:52:45.766 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:52:45.766 +01:00 [DBG] No client front-channel logout URLs
2018-07-25 15:52:45.766 +01:00 [DBG] No client back-channel logout URLs
2018-07-25 15:52:45.766 +01:00 [INF] Successful signout callback.
2018-07-25 15:52:45.766 +01:00 [DBG] No client front-channel iframe urls
2018-07-25 15:52:45.766 +01:00 [DBG] No client back-channel iframe urls
2018-07-25 15:52:47.485 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 15:52:47.485 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 15:52:47.485 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 15:52:47.485 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 15:52:47.485 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 15:52:47.485 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 15:52:47.485 +01:00 [DBG] Start discovery request
2018-07-25 15:52:47.500 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-07-25 15:52:47.500 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-07-25 15:52:47.500 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-07-25 15:52:47.500 +01:00 [DBG] Start authorize request
2018-07-25 15:52:47.500 +01:00 [DBG] No user present in authorize request
2018-07-25 15:52:47.500 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 15:52:47.500 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:52:47.501 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 15:52:47.501 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1 techdevs-accounts-api",
  "State": "c4e18a67e5a24b54bc2d697f0a9a492f",
  "Nonce": "b8f71f9a552d42a2ad43f7a7260b0f3a",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1 techdevs-accounts-api",
    "state": "c4e18a67e5a24b54bc2d697f0a9a492f",
    "nonce": "b8f71f9a552d42a2ad43f7a7260b0f3a"
  }
}
2018-07-25 15:52:47.501 +01:00 [INF] Showing login: User is not authenticated
2018-07-25 15:52:47.511 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 15:52:47.511 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:52:47.511 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 15:52:47.511 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:52:49.317 +01:00 [INF] AuthenticationScheme: Google was challenged.
2018-07-25 15:52:53.585 +01:00 [INF] AuthenticationScheme: idsrv.external signed in.
2018-07-25 15:52:53.595 +01:00 [INF] AuthenticationScheme: idsrv.external was successfully authenticated.
2018-07-25 15:52:53.776 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Provider": "Google",
  "ProviderUserId": "107387075381855787656",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "DisplayName": "steve@techdevs.net",
  "Endpoint": "UI",
  "ActivityId": "0HLFI7BFKHL4C:00000010",
  "TimeStamp": "2018-07-25T14:52:53Z",
  "ProcessId": 14124,
  "LocalIpAddress": "127.0.0.1:27052",
  "RemoteIpAddress": "::1"
}
2018-07-25 15:52:53.776 +01:00 [DBG] Augmenting SignInContext
2018-07-25 15:52:53.776 +01:00 [DBG] Adding amr claim with value: external
2018-07-25 15:52:53.777 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2018-07-25 15:52:53.777 +01:00 [INF] AuthenticationScheme: idsrv.external signed out.
2018-07-25 15:52:53.777 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 15:52:53.777 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:52:53.777 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 15:52:53.778 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:52:53.788 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:52:53.789 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:52:53.789 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2018-07-25 15:52:53.789 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2018-07-25 15:52:53.789 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2018-07-25 15:52:53.789 +01:00 [DBG] Start authorize callback request
2018-07-25 15:52:53.789 +01:00 [DBG] User in authorize request: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 15:52:53.789 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 15:52:53.789 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:52:53.790 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 15:52:53.790 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1 techdevs-accounts-api",
  "State": "c4e18a67e5a24b54bc2d697f0a9a492f",
  "Nonce": "b8f71f9a552d42a2ad43f7a7260b0f3a",
  "SessionId": "ba192e4b8a0f95f9bffee2855bdab3d6",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1 techdevs-accounts-api",
    "state": "c4e18a67e5a24b54bc2d697f0a9a492f",
    "nonce": "b8f71f9a552d42a2ad43f7a7260b0f3a"
  }
}
2018-07-25 15:52:53.790 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2018-07-25 15:52:53.790 +01:00 [DBG] Client is configured to not require consent, no consent is required
2018-07-25 15:52:53.799 +01:00 [DBG] Creating Implicit Flow response.
2018-07-25 15:52:53.800 +01:00 [DBG] Getting claims for access token for client: spa
2018-07-25 15:52:53.800 +01:00 [DBG] Getting claims for access token for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 15:52:53.800 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types [] via ClaimsProviderAccessToken
2018-07-25 15:52:53.800 +01:00 [DBG] Issued claims: []
2018-07-25 15:52:53.803 +01:00 [DBG] Getting claims for identity token for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 and client: spa
2018-07-25 15:52:53.803 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-07-25 15:52:53.806 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "Endpoint": "Authorize",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "Scopes": "openid profile api1 techdevs-accounts-api",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****uaZQ"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****JXTw"
    }
  ],
  "ActivityId": "0HLFI7BFKHL4A:00000019",
  "TimeStamp": "2018-07-25T14:52:53Z",
  "ProcessId": 14124,
  "LocalIpAddress": "127.0.0.1:27052",
  "RemoteIpAddress": "::1"
}
2018-07-25 15:52:53.806 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ClientId": "spa",
  "RedirectUri": "http://localhost:5003/callback.html",
  "State": "c4e18a67e5a24b54bc2d697f0a9a492f",
  "Scope": "openid profile api1 techdevs-accounts-api"
}
2018-07-25 15:52:53.806 +01:00 [DBG] Augmenting SignInContext
2018-07-25 15:52:53.806 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2018-07-25 15:52:54.306 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 15:52:54.306 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 15:52:54.306 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 15:52:54.306 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 15:52:54.306 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 15:52:54.306 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 15:52:54.306 +01:00 [DBG] Start discovery request
2018-07-25 15:52:54.356 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:5003
2018-07-25 15:52:54.356 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 15:52:54.356 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 15:52:54.357 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-07-25 15:52:54.357 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-07-25 15:52:54.357 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-07-25 15:52:54.357 +01:00 [DBG] Start key discovery request
2018-07-25 15:52:54.461 +01:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:5003
2018-07-25 15:52:54.461 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 15:52:54.461 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 15:52:54.461 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-07-25 15:52:54.462 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-07-25 15:52:54.462 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-07-25 15:52:54.462 +01:00 [DBG] Start userinfo request
2018-07-25 15:52:54.462 +01:00 [DBG] Bearer token found in header
2018-07-25 15:52:54.462 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:52:54.463 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:52:54.463 +01:00 [DBG] IsActive called from: AccessTokenValidation
2018-07-25 15:52:54.463 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 15:52:54.463 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1532530373,
    "exp": 1532533973,
    "iss": "http://localhost:5000",
    "aud": [
      "http://localhost:5000/resources",
      "api1",
      "techdevs-accounts-api"
    ],
    "client_id": "spa",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532530373,
    "idp": "Google",
    "scope": [
      "openid",
      "profile",
      "api1",
      "techdevs-accounts-api"
    ],
    "amr": "external"
  }
}
2018-07-25 15:52:54.463 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2018-07-25 15:52:54.463 +01:00 [DBG] Creating userinfo response
2018-07-25 15:52:54.463 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 15:52:54.463 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 15:52:54.463 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-07-25 15:52:54.463 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 15:52:54.463 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2018-07-25 15:52:54.463 +01:00 [DBG] Issued claims: ["sub"]
2018-07-25 15:52:54.463 +01:00 [INF] Profile service returned to the following claim types: sub
2018-07-25 15:52:54.464 +01:00 [DBG] End userinfo request
2018-07-25 15:52:54.490 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:52:54.490 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:52:54.490 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 15:52:54.490 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 15:52:54.490 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 15:52:54.490 +01:00 [DBG] Rendering check session result
2018-07-25 15:52:54.717 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 15:52:54.718 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 15:52:54.718 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 15:52:54.718 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 15:52:54.718 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 15:52:54.718 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 15:52:54.718 +01:00 [DBG] Start discovery request
2018-07-25 15:52:54.764 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:52:54.764 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:52:54.764 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 15:52:54.764 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 15:52:54.764 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 15:52:54.764 +01:00 [DBG] Rendering check session result
2018-07-25 15:54:03.275 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-07-25 15:54:03.275 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-07-25 15:54:03.275 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-07-25 15:54:03.275 +01:00 [DBG] Start userinfo request
2018-07-25 15:54:03.275 +01:00 [DBG] Bearer token found in header
2018-07-25 15:54:03.276 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:54:03.276 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:54:03.276 +01:00 [DBG] IsActive called from: AccessTokenValidation
2018-07-25 15:54:03.276 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 15:54:03.276 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1532530373,
    "exp": 1532533973,
    "iss": "http://localhost:5000",
    "aud": [
      "http://localhost:5000/resources",
      "api1",
      "techdevs-accounts-api"
    ],
    "client_id": "spa",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532530373,
    "idp": "Google",
    "scope": [
      "openid",
      "profile",
      "api1",
      "techdevs-accounts-api"
    ],
    "amr": "external"
  }
}
2018-07-25 15:54:03.276 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2018-07-25 15:54:03.276 +01:00 [DBG] Creating userinfo response
2018-07-25 15:54:03.276 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 15:54:03.276 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 15:54:03.276 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-07-25 15:54:03.277 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 15:54:03.277 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2018-07-25 15:54:03.277 +01:00 [DBG] Issued claims: ["sub"]
2018-07-25 15:54:03.277 +01:00 [INF] Profile service returned to the following claim types: sub
2018-07-25 15:54:03.277 +01:00 [DBG] End userinfo request
2018-07-25 15:54:06.384 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-07-25 15:54:06.385 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-07-25 15:54:06.387 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-07-25 15:54:06.387 +01:00 [DBG] Start userinfo request
2018-07-25 15:54:06.387 +01:00 [DBG] Bearer token found in header
2018-07-25 15:54:06.388 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:54:06.388 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:54:06.388 +01:00 [DBG] IsActive called from: AccessTokenValidation
2018-07-25 15:54:06.388 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 15:54:06.388 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1532530373,
    "exp": 1532533973,
    "iss": "http://localhost:5000",
    "aud": [
      "http://localhost:5000/resources",
      "api1",
      "techdevs-accounts-api"
    ],
    "client_id": "spa",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532530373,
    "idp": "Google",
    "scope": [
      "openid",
      "profile",
      "api1",
      "techdevs-accounts-api"
    ],
    "amr": "external"
  }
}
2018-07-25 15:54:06.388 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2018-07-25 15:54:06.388 +01:00 [DBG] Creating userinfo response
2018-07-25 15:54:06.388 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 15:54:06.388 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 15:54:06.388 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-07-25 15:54:06.388 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 15:54:06.389 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2018-07-25 15:54:06.389 +01:00 [DBG] Issued claims: ["sub"]
2018-07-25 15:54:06.389 +01:00 [INF] Profile service returned to the following claim types: sub
2018-07-25 15:54:06.389 +01:00 [DBG] End userinfo request
2018-07-25 15:54:31.997 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-07-25 15:54:31.998 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-07-25 15:54:31.998 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-07-25 15:54:31.998 +01:00 [DBG] Start userinfo request
2018-07-25 15:54:31.998 +01:00 [DBG] Bearer token found in header
2018-07-25 15:54:31.999 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:54:31.999 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:54:31.999 +01:00 [DBG] IsActive called from: AccessTokenValidation
2018-07-25 15:54:31.999 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 15:54:31.999 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1532530373,
    "exp": 1532533973,
    "iss": "http://localhost:5000",
    "aud": [
      "http://localhost:5000/resources",
      "api1",
      "techdevs-accounts-api"
    ],
    "client_id": "spa",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532530373,
    "idp": "Google",
    "scope": [
      "openid",
      "profile",
      "api1",
      "techdevs-accounts-api"
    ],
    "amr": "external"
  }
}
2018-07-25 15:54:31.999 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2018-07-25 15:54:31.999 +01:00 [DBG] Creating userinfo response
2018-07-25 15:54:31.999 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 15:54:31.999 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 15:54:31.999 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-07-25 15:54:31.999 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 15:54:31.999 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2018-07-25 15:54:31.999 +01:00 [DBG] Issued claims: ["sub"]
2018-07-25 15:54:32.000 +01:00 [INF] Profile service returned to the following claim types: sub
2018-07-25 15:54:32.000 +01:00 [DBG] End userinfo request
2018-07-25 15:54:35.784 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:54:35.784 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:54:35.784 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-07-25 15:54:35.784 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-07-25 15:54:35.784 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-07-25 15:54:35.784 +01:00 [DBG] Start authorize request
2018-07-25 15:54:35.785 +01:00 [DBG] User in authorize request: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 15:54:35.785 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 15:54:35.785 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:54:35.785 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 15:54:35.785 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1 techdevs-accounts-api",
  "State": "df66cd4e5d004f9aa88b0e62422d5950",
  "Nonce": "db730e5c61cf4b7494bd8ee399aacddb",
  "SessionId": "ba192e4b8a0f95f9bffee2855bdab3d6",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1 techdevs-accounts-api",
    "state": "df66cd4e5d004f9aa88b0e62422d5950",
    "nonce": "db730e5c61cf4b7494bd8ee399aacddb"
  }
}
2018-07-25 15:54:35.785 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2018-07-25 15:54:35.785 +01:00 [DBG] Client is configured to not require consent, no consent is required
2018-07-25 15:54:35.785 +01:00 [DBG] Creating Implicit Flow response.
2018-07-25 15:54:35.785 +01:00 [DBG] Getting claims for access token for client: spa
2018-07-25 15:54:35.785 +01:00 [DBG] Getting claims for access token for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 15:54:35.785 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types [] via ClaimsProviderAccessToken
2018-07-25 15:54:35.785 +01:00 [DBG] Issued claims: []
2018-07-25 15:54:35.788 +01:00 [DBG] Getting claims for identity token for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 and client: spa
2018-07-25 15:54:35.788 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-07-25 15:54:35.790 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "Endpoint": "Authorize",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "Scopes": "openid profile api1 techdevs-accounts-api",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****aK8Q"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****w7OA"
    }
  ],
  "ActivityId": "0HLFI7BFKHL4E:00000004",
  "TimeStamp": "2018-07-25T14:54:35Z",
  "ProcessId": 14124,
  "LocalIpAddress": "127.0.0.1:27052",
  "RemoteIpAddress": "::1"
}
2018-07-25 15:54:35.791 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ClientId": "spa",
  "RedirectUri": "http://localhost:5003/callback.html",
  "State": "df66cd4e5d004f9aa88b0e62422d5950",
  "Scope": "openid profile api1 techdevs-accounts-api"
}
2018-07-25 15:54:35.944 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 15:54:35.944 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 15:54:35.944 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 15:54:35.944 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 15:54:35.944 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 15:54:35.944 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 15:54:35.944 +01:00 [DBG] Start discovery request
2018-07-25 15:54:35.999 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:5003
2018-07-25 15:54:35.999 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 15:54:35.999 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 15:54:36.000 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-07-25 15:54:36.000 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-07-25 15:54:36.000 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-07-25 15:54:36.000 +01:00 [DBG] Start key discovery request
2018-07-25 15:54:36.094 +01:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:5003
2018-07-25 15:54:36.094 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 15:54:36.094 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 15:54:36.094 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-07-25 15:54:36.094 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-07-25 15:54:36.094 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-07-25 15:54:36.094 +01:00 [DBG] Start userinfo request
2018-07-25 15:54:36.094 +01:00 [DBG] Bearer token found in header
2018-07-25 15:54:36.095 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:54:36.095 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:54:36.095 +01:00 [DBG] IsActive called from: AccessTokenValidation
2018-07-25 15:54:36.095 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 15:54:36.096 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1532530475,
    "exp": 1532534075,
    "iss": "http://localhost:5000",
    "aud": [
      "http://localhost:5000/resources",
      "api1",
      "techdevs-accounts-api"
    ],
    "client_id": "spa",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532530373,
    "idp": "Google",
    "scope": [
      "openid",
      "profile",
      "api1",
      "techdevs-accounts-api"
    ],
    "amr": "external"
  }
}
2018-07-25 15:54:36.096 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2018-07-25 15:54:36.096 +01:00 [DBG] Creating userinfo response
2018-07-25 15:54:36.096 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 15:54:36.096 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 15:54:36.096 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-07-25 15:54:36.096 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 15:54:36.096 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2018-07-25 15:54:36.096 +01:00 [DBG] Issued claims: ["sub"]
2018-07-25 15:54:36.096 +01:00 [INF] Profile service returned to the following claim types: sub
2018-07-25 15:54:36.096 +01:00 [DBG] End userinfo request
2018-07-25 15:54:36.118 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:54:36.118 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:54:36.118 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 15:54:36.118 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 15:54:36.118 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 15:54:36.119 +01:00 [DBG] Rendering check session result
2018-07-25 15:54:36.270 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 15:54:36.270 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 15:54:36.270 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 15:54:36.271 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 15:54:36.271 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 15:54:36.271 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 15:54:36.271 +01:00 [DBG] Start discovery request
2018-07-25 15:54:36.343 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:54:36.344 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:54:36.345 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 15:54:36.345 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 15:54:36.345 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 15:54:36.345 +01:00 [DBG] Rendering check session result
2018-07-25 15:54:38.252 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:54:38.252 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:54:38.252 +01:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2018-07-25 15:54:38.252 +01:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2018-07-25 15:54:38.252 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2018-07-25 15:54:38.252 +01:00 [DBG] Processing signout request for 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 15:54:38.252 +01:00 [DBG] Start end session request validation
2018-07-25 15:54:38.252 +01:00 [DBG] Start identity token validation
2018-07-25 15:54:38.252 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:54:38.253 +01:00 [DBG] Client found: spa / SPA Client
2018-07-25 15:54:38.253 +01:00 [DBG] IsActive called from: IdentityTokenValidation
2018-07-25 15:54:38.253 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 15:54:38.253 +01:00 [DBG] Token validation success
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "ValidateLifetime": false,
  "Claims": {
    "nbf": 1532530475,
    "exp": 1532530775,
    "iss": "http://localhost:5000",
    "aud": "spa",
    "nonce": "db730e5c61cf4b7494bd8ee399aacddb",
    "iat": 1532530475,
    "at_hash": "ks1yLZjT4ilEqONglOQdBg",
    "sid": "ba192e4b8a0f95f9bffee2855bdab3d6",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532530373,
    "idp": "Google",
    "amr": "external"
  }
}
2018-07-25 15:54:38.253 +01:00 [INF] End session request validation success
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "PostLogOutUri": "http://localhost:5003/index.html",
  "Raw": {
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjUxZTMyMGM2ODUzZjVmZmY4MDA2YTEwODE3Y2JiMTNiIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1MzI1MzA0NzUsImV4cCI6MTUzMjUzMDc3NSwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiJkYjczMGU1YzYxY2Y0Yjc0OTRiZDhlZTM5OWFhY2RkYiIsImlhdCI6MTUzMjUzMDQ3NSwiYXRfaGFzaCI6ImtzMXlMWmpUNGlsRXFPTmdsT1FkQmciLCJzaWQiOiJiYTE5MmU0YjhhMGY5NWY5YmZmZWUyODU1YmRhYjNkNiIsInN1YiI6IjVlNWMwMmE2LTJhZjEtNDdkMy1iOWRiLWE2YjE2MGQ4Y2E1OSIsImF1dGhfdGltZSI6MTUzMjUzMDM3MywiaWRwIjoiR29vZ2xlIiwiYW1yIjpbImV4dGVybmFsIl19.fAsrwfiY2C8uNbunOw_I76nYo4QNCPgXc3srD07JpgRzHDB059RVPgblhcZR_TJHcPpR-K6YtuVcZHimWISaccz5LQA6XO-A5H2xl6XtlasPq-LhjHrlIAl7ISyzxbcNZExQ73lwkHC-UVQpF_84wLpso8DD8n24-QgGIU-Hz4KJjn_igdIPLUN1NjJmtiYUng6_xByDECeoSrEZYgMyv8WSXYxkZGKl1vU95zA6XhCuQl0QbkcJc3EPr5oif2wcUCUp-x_GNPpgaLhVheLqUZqLfooZMD2Y9pyeHzT2gGsKtLBiL0yVjGkCWzpIRHA-u0uNDffcuHnti_5E4baK8Q",
    "post_logout_redirect_uri": "http://localhost:5003/index.html"
  }
}
2018-07-25 15:54:38.253 +01:00 [DBG] Success validating end session request from spa
2018-07-25 15:54:38.261 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:54:38.262 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:54:38.262 +01:00 [INF] AuthenticationScheme: idsrv signed out.
2018-07-25 15:54:38.262 +01:00 [INF] {
  "Name": "User Logout Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1002,
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "DisplayName": "Steve Kent",
  "ActivityId": "0HLFI7BFKHL4E:0000000D",
  "TimeStamp": "2018-07-25T14:54:38Z",
  "ProcessId": 14124,
  "LocalIpAddress": "127.0.0.1:27052",
  "RemoteIpAddress": "::1"
}
2018-07-25 15:54:38.325 +01:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2018-07-25 15:54:38.328 +01:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2018-07-25 15:54:38.328 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2018-07-25 15:54:38.328 +01:00 [DBG] Processing signout callback request
2018-07-25 15:54:38.328 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:54:38.329 +01:00 [DBG] No client front-channel logout URLs
2018-07-25 15:54:38.329 +01:00 [DBG] No client back-channel logout URLs
2018-07-25 15:54:38.329 +01:00 [INF] Successful signout callback.
2018-07-25 15:54:38.329 +01:00 [DBG] No client front-channel iframe urls
2018-07-25 15:54:38.329 +01:00 [DBG] No client back-channel iframe urls
2018-07-25 15:54:40.178 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 15:54:40.178 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 15:54:40.178 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 15:54:40.178 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 15:54:40.178 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 15:54:40.178 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 15:54:40.178 +01:00 [DBG] Start discovery request
2018-07-25 15:54:40.192 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-07-25 15:54:40.193 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-07-25 15:54:40.193 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-07-25 15:54:40.193 +01:00 [DBG] Start authorize request
2018-07-25 15:54:40.193 +01:00 [DBG] No user present in authorize request
2018-07-25 15:54:40.193 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 15:54:40.193 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:54:40.193 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 15:54:40.193 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1 techdevs-accounts-api",
  "State": "0ce04810ac854917b37de92ebb1d5655",
  "Nonce": "21b6ebc39b2c4d97b0f48795956158d1",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1 techdevs-accounts-api",
    "state": "0ce04810ac854917b37de92ebb1d5655",
    "nonce": "21b6ebc39b2c4d97b0f48795956158d1"
  }
}
2018-07-25 15:54:40.193 +01:00 [INF] Showing login: User is not authenticated
2018-07-25 15:54:40.200 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 15:54:40.200 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:54:40.200 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 15:54:40.200 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:54:41.234 +01:00 [INF] AuthenticationScheme: Google was challenged.
2018-07-25 15:54:44.694 +01:00 [INF] AuthenticationScheme: idsrv.external signed in.
2018-07-25 15:54:44.705 +01:00 [INF] AuthenticationScheme: idsrv.external was successfully authenticated.
2018-07-25 15:54:44.888 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Provider": "Google",
  "ProviderUserId": "107387075381855787656",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "DisplayName": "steve@techdevs.net",
  "Endpoint": "UI",
  "ActivityId": "0HLFI7BFKHL4E:00000014",
  "TimeStamp": "2018-07-25T14:54:44Z",
  "ProcessId": 14124,
  "LocalIpAddress": "127.0.0.1:27052",
  "RemoteIpAddress": "::1"
}
2018-07-25 15:54:44.888 +01:00 [DBG] Augmenting SignInContext
2018-07-25 15:54:44.888 +01:00 [DBG] Adding amr claim with value: external
2018-07-25 15:54:44.888 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2018-07-25 15:54:44.889 +01:00 [INF] AuthenticationScheme: idsrv.external signed out.
2018-07-25 15:54:44.889 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 15:54:44.889 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:54:44.889 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 15:54:44.890 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:54:44.898 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:54:44.898 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:54:44.898 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2018-07-25 15:54:44.898 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2018-07-25 15:54:44.898 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2018-07-25 15:54:44.899 +01:00 [DBG] Start authorize callback request
2018-07-25 15:54:44.899 +01:00 [DBG] User in authorize request: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 15:54:44.899 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 15:54:44.899 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:54:44.899 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 15:54:44.899 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1 techdevs-accounts-api",
  "State": "0ce04810ac854917b37de92ebb1d5655",
  "Nonce": "21b6ebc39b2c4d97b0f48795956158d1",
  "SessionId": "d174e570245df5c5563de712ae40e37e",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1 techdevs-accounts-api",
    "state": "0ce04810ac854917b37de92ebb1d5655",
    "nonce": "21b6ebc39b2c4d97b0f48795956158d1"
  }
}
2018-07-25 15:54:44.899 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2018-07-25 15:54:44.899 +01:00 [DBG] Client is configured to not require consent, no consent is required
2018-07-25 15:54:44.905 +01:00 [DBG] Creating Implicit Flow response.
2018-07-25 15:54:44.905 +01:00 [DBG] Getting claims for access token for client: spa
2018-07-25 15:54:44.905 +01:00 [DBG] Getting claims for access token for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 15:54:44.906 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types [] via ClaimsProviderAccessToken
2018-07-25 15:54:44.906 +01:00 [DBG] Issued claims: []
2018-07-25 15:54:44.908 +01:00 [DBG] Getting claims for identity token for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 and client: spa
2018-07-25 15:54:44.908 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-07-25 15:54:44.911 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "Endpoint": "Authorize",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "Scopes": "openid profile api1 techdevs-accounts-api",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****FvIg"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****BsjQ"
    }
  ],
  "ActivityId": "0HLFI7BFKHL4E:00000015",
  "TimeStamp": "2018-07-25T14:54:44Z",
  "ProcessId": 14124,
  "LocalIpAddress": "127.0.0.1:27052",
  "RemoteIpAddress": "::1"
}
2018-07-25 15:54:44.911 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ClientId": "spa",
  "RedirectUri": "http://localhost:5003/callback.html",
  "State": "0ce04810ac854917b37de92ebb1d5655",
  "Scope": "openid profile api1 techdevs-accounts-api"
}
2018-07-25 15:54:44.911 +01:00 [DBG] Augmenting SignInContext
2018-07-25 15:54:44.911 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2018-07-25 15:54:45.093 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 15:54:45.093 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 15:54:45.093 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 15:54:45.093 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 15:54:45.093 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 15:54:45.094 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 15:54:45.094 +01:00 [DBG] Start discovery request
2018-07-25 15:54:45.144 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:5003
2018-07-25 15:54:45.144 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 15:54:45.144 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 15:54:45.144 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-07-25 15:54:45.144 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-07-25 15:54:45.144 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-07-25 15:54:45.144 +01:00 [DBG] Start key discovery request
2018-07-25 15:54:45.228 +01:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:5003
2018-07-25 15:54:45.228 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 15:54:45.228 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 15:54:45.228 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-07-25 15:54:45.228 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-07-25 15:54:45.228 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-07-25 15:54:45.228 +01:00 [DBG] Start userinfo request
2018-07-25 15:54:45.228 +01:00 [DBG] Bearer token found in header
2018-07-25 15:54:45.229 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:54:45.229 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:54:45.229 +01:00 [DBG] IsActive called from: AccessTokenValidation
2018-07-25 15:54:45.229 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 15:54:45.229 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1532530484,
    "exp": 1532534084,
    "iss": "http://localhost:5000",
    "aud": [
      "http://localhost:5000/resources",
      "api1",
      "techdevs-accounts-api"
    ],
    "client_id": "spa",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532530484,
    "idp": "Google",
    "scope": [
      "openid",
      "profile",
      "api1",
      "techdevs-accounts-api"
    ],
    "amr": "external"
  }
}
2018-07-25 15:54:45.229 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2018-07-25 15:54:45.229 +01:00 [DBG] Creating userinfo response
2018-07-25 15:54:45.229 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 15:54:45.229 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 15:54:45.230 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-07-25 15:54:45.230 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 15:54:45.230 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2018-07-25 15:54:45.230 +01:00 [DBG] Issued claims: ["sub"]
2018-07-25 15:54:45.230 +01:00 [INF] Profile service returned to the following claim types: sub
2018-07-25 15:54:45.230 +01:00 [DBG] End userinfo request
2018-07-25 15:54:45.256 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:54:45.256 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:54:45.256 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 15:54:45.256 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 15:54:45.257 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 15:54:45.257 +01:00 [DBG] Rendering check session result
2018-07-25 15:54:45.457 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 15:54:45.458 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 15:54:45.458 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 15:54:45.458 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 15:54:45.458 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 15:54:45.458 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 15:54:45.458 +01:00 [DBG] Start discovery request
2018-07-25 15:54:45.483 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:54:45.483 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:54:45.483 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 15:54:45.483 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 15:54:45.483 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 15:54:45.483 +01:00 [DBG] Rendering check session result
2018-07-25 15:55:01.213 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-07-25 15:55:01.214 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-07-25 15:55:01.214 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-07-25 15:55:01.214 +01:00 [DBG] Start userinfo request
2018-07-25 15:55:01.214 +01:00 [DBG] Bearer token found in header
2018-07-25 15:55:01.214 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:55:01.214 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:55:01.214 +01:00 [DBG] IsActive called from: AccessTokenValidation
2018-07-25 15:55:01.214 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 15:55:01.215 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1532530484,
    "exp": 1532534084,
    "iss": "http://localhost:5000",
    "aud": [
      "http://localhost:5000/resources",
      "api1",
      "techdevs-accounts-api"
    ],
    "client_id": "spa",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532530484,
    "idp": "Google",
    "scope": [
      "openid",
      "profile",
      "api1",
      "techdevs-accounts-api"
    ],
    "amr": "external"
  }
}
2018-07-25 15:55:01.215 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2018-07-25 15:55:01.215 +01:00 [DBG] Creating userinfo response
2018-07-25 15:55:01.215 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 15:55:01.215 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 15:55:01.215 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-07-25 15:55:01.215 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 15:55:01.215 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2018-07-25 15:55:01.215 +01:00 [DBG] Issued claims: ["sub"]
2018-07-25 15:55:01.215 +01:00 [INF] Profile service returned to the following claim types: sub
2018-07-25 15:55:01.215 +01:00 [DBG] End userinfo request
2018-07-25 15:55:01.833 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-07-25 15:55:01.833 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-07-25 15:55:01.833 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-07-25 15:55:01.833 +01:00 [DBG] Start userinfo request
2018-07-25 15:55:01.833 +01:00 [DBG] Bearer token found in header
2018-07-25 15:55:01.834 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:55:01.834 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:55:01.834 +01:00 [DBG] IsActive called from: AccessTokenValidation
2018-07-25 15:55:01.834 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 15:55:01.834 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1532530484,
    "exp": 1532534084,
    "iss": "http://localhost:5000",
    "aud": [
      "http://localhost:5000/resources",
      "api1",
      "techdevs-accounts-api"
    ],
    "client_id": "spa",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532530484,
    "idp": "Google",
    "scope": [
      "openid",
      "profile",
      "api1",
      "techdevs-accounts-api"
    ],
    "amr": "external"
  }
}
2018-07-25 15:55:01.834 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2018-07-25 15:55:01.834 +01:00 [DBG] Creating userinfo response
2018-07-25 15:55:01.835 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 15:55:01.835 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 15:55:01.835 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-07-25 15:55:01.835 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 15:55:01.835 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2018-07-25 15:55:01.835 +01:00 [DBG] Issued claims: ["sub"]
2018-07-25 15:55:01.835 +01:00 [INF] Profile service returned to the following claim types: sub
2018-07-25 15:55:01.835 +01:00 [DBG] End userinfo request
2018-07-25 15:55:02.033 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-07-25 15:55:02.033 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-07-25 15:55:02.033 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-07-25 15:55:02.033 +01:00 [DBG] Start userinfo request
2018-07-25 15:55:02.033 +01:00 [DBG] Bearer token found in header
2018-07-25 15:55:02.034 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:55:02.034 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:55:02.034 +01:00 [DBG] IsActive called from: AccessTokenValidation
2018-07-25 15:55:02.034 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 15:55:02.034 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1532530484,
    "exp": 1532534084,
    "iss": "http://localhost:5000",
    "aud": [
      "http://localhost:5000/resources",
      "api1",
      "techdevs-accounts-api"
    ],
    "client_id": "spa",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532530484,
    "idp": "Google",
    "scope": [
      "openid",
      "profile",
      "api1",
      "techdevs-accounts-api"
    ],
    "amr": "external"
  }
}
2018-07-25 15:55:02.034 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2018-07-25 15:55:02.034 +01:00 [DBG] Creating userinfo response
2018-07-25 15:55:02.034 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 15:55:02.034 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 15:55:02.034 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-07-25 15:55:02.034 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 15:55:02.034 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2018-07-25 15:55:02.034 +01:00 [DBG] Issued claims: ["sub"]
2018-07-25 15:55:02.034 +01:00 [INF] Profile service returned to the following claim types: sub
2018-07-25 15:55:02.034 +01:00 [DBG] End userinfo request
2018-07-25 15:55:02.187 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-07-25 15:55:02.187 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-07-25 15:55:02.187 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-07-25 15:55:02.187 +01:00 [DBG] Start userinfo request
2018-07-25 15:55:02.187 +01:00 [DBG] Bearer token found in header
2018-07-25 15:55:02.188 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:55:02.188 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:55:02.188 +01:00 [DBG] IsActive called from: AccessTokenValidation
2018-07-25 15:55:02.188 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 15:55:02.188 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1532530484,
    "exp": 1532534084,
    "iss": "http://localhost:5000",
    "aud": [
      "http://localhost:5000/resources",
      "api1",
      "techdevs-accounts-api"
    ],
    "client_id": "spa",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532530484,
    "idp": "Google",
    "scope": [
      "openid",
      "profile",
      "api1",
      "techdevs-accounts-api"
    ],
    "amr": "external"
  }
}
2018-07-25 15:55:02.188 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2018-07-25 15:55:02.188 +01:00 [DBG] Creating userinfo response
2018-07-25 15:55:02.188 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 15:55:02.188 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 15:55:02.188 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-07-25 15:55:02.188 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 15:55:02.188 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2018-07-25 15:55:02.188 +01:00 [DBG] Issued claims: ["sub"]
2018-07-25 15:55:02.188 +01:00 [INF] Profile service returned to the following claim types: sub
2018-07-25 15:55:02.189 +01:00 [DBG] End userinfo request
2018-07-25 15:55:02.354 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-07-25 15:55:02.354 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-07-25 15:55:02.354 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-07-25 15:55:02.354 +01:00 [DBG] Start userinfo request
2018-07-25 15:55:02.354 +01:00 [DBG] Bearer token found in header
2018-07-25 15:55:02.355 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:55:02.355 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:55:02.355 +01:00 [DBG] IsActive called from: AccessTokenValidation
2018-07-25 15:55:02.355 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 15:55:02.355 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1532530484,
    "exp": 1532534084,
    "iss": "http://localhost:5000",
    "aud": [
      "http://localhost:5000/resources",
      "api1",
      "techdevs-accounts-api"
    ],
    "client_id": "spa",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532530484,
    "idp": "Google",
    "scope": [
      "openid",
      "profile",
      "api1",
      "techdevs-accounts-api"
    ],
    "amr": "external"
  }
}
2018-07-25 15:55:02.355 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2018-07-25 15:55:02.355 +01:00 [DBG] Creating userinfo response
2018-07-25 15:55:02.355 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 15:55:02.356 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 15:55:02.356 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-07-25 15:55:02.356 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 15:55:02.356 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2018-07-25 15:55:02.356 +01:00 [DBG] Issued claims: ["sub"]
2018-07-25 15:55:02.356 +01:00 [INF] Profile service returned to the following claim types: sub
2018-07-25 15:55:02.356 +01:00 [DBG] End userinfo request
2018-07-25 15:55:02.490 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-07-25 15:55:02.491 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-07-25 15:55:02.491 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-07-25 15:55:02.491 +01:00 [DBG] Start userinfo request
2018-07-25 15:55:02.491 +01:00 [DBG] Bearer token found in header
2018-07-25 15:55:02.491 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:55:02.491 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:55:02.491 +01:00 [DBG] IsActive called from: AccessTokenValidation
2018-07-25 15:55:02.491 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 15:55:02.491 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1532530484,
    "exp": 1532534084,
    "iss": "http://localhost:5000",
    "aud": [
      "http://localhost:5000/resources",
      "api1",
      "techdevs-accounts-api"
    ],
    "client_id": "spa",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532530484,
    "idp": "Google",
    "scope": [
      "openid",
      "profile",
      "api1",
      "techdevs-accounts-api"
    ],
    "amr": "external"
  }
}
2018-07-25 15:55:02.492 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2018-07-25 15:55:02.492 +01:00 [DBG] Creating userinfo response
2018-07-25 15:55:02.492 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 15:55:02.492 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 15:55:02.492 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-07-25 15:55:02.492 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 15:55:02.492 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2018-07-25 15:55:02.492 +01:00 [DBG] Issued claims: ["sub"]
2018-07-25 15:55:02.492 +01:00 [INF] Profile service returned to the following claim types: sub
2018-07-25 15:55:02.492 +01:00 [DBG] End userinfo request
2018-07-25 15:55:57.992 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:55:57.993 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:55:58.147 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:55:58.150 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:56:00.066 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:56:00.066 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:56:06.866 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:56:06.866 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:56:08.407 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:56:08.408 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:57:17.970 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-07-25 15:57:18.109 +01:00 [DBG] Using idsrv as default scheme for authentication
2018-07-25 15:57:18.113 +01:00 [DBG] Using idsrv as default scheme for sign-in
2018-07-25 15:57:18.115 +01:00 [DBG] Using idsrv as default scheme for sign-out
2018-07-25 15:57:18.116 +01:00 [DBG] Using idsrv as default scheme for challenge
2018-07-25 15:57:18.116 +01:00 [DBG] Using idsrv as default scheme for forbid
2018-07-25 15:57:19.399 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:57:19.427 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:57:28.026 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:57:28.026 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:57:28.026 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:57:28.026 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:57:28.026 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:57:28.026 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:57:28.026 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:57:28.026 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:57:28.026 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:57:28.026 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:57:28.027 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:57:28.027 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:57:41.046 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:57:41.046 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:57:44.653 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:57:44.653 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:57:47.120 +01:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2018-07-25 15:57:47.120 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:57:47.120 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:57:47.338 +01:00 [INF] AuthenticationScheme: idsrv signed out.
2018-07-25 15:57:47.379 +01:00 [INF] {
  "Name": "User Logout Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1002,
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "DisplayName": "Steve Kent",
  "ActivityId": "0HLFI7RLH979D:00000002",
  "TimeStamp": "2018-07-25T14:57:47Z",
  "ProcessId": 24536,
  "LocalIpAddress": "127.0.0.1:1967",
  "RemoteIpAddress": "::1"
}
2018-07-25 15:57:48.159 +01:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2018-07-25 15:57:48.166 +01:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2018-07-25 15:57:48.167 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2018-07-25 15:57:48.175 +01:00 [DBG] Processing signout callback request
2018-07-25 15:57:48.222 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 15:57:48.222 +01:00 [DBG] No client front-channel logout URLs
2018-07-25 15:57:48.222 +01:00 [DBG] No client back-channel logout URLs
2018-07-25 15:57:48.223 +01:00 [INF] Successful signout callback.
2018-07-25 15:57:48.223 +01:00 [DBG] No client front-channel iframe urls
2018-07-25 15:57:48.223 +01:00 [DBG] No client back-channel iframe urls
2018-07-25 15:57:50.884 +01:00 [INF] AuthenticationScheme: idsrv was challenged.
2018-07-25 15:57:54.058 +01:00 [INF] AuthenticationScheme: Google was challenged.
2018-07-25 15:58:04.290 +01:00 [INF] AuthenticationScheme: Google was challenged.
2018-07-25 15:58:08.113 +01:00 [INF] AuthenticationScheme: idsrv.external signed in.
2018-07-25 15:58:08.130 +01:00 [INF] AuthenticationScheme: idsrv.external was successfully authenticated.
2018-07-25 15:58:10.253 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Provider": "Google",
  "ProviderUserId": "107387075381855787656",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "DisplayName": "steve@techdevs.net",
  "Endpoint": "UI",
  "ActivityId": "0HLFI7RLH9798:00000004",
  "TimeStamp": "2018-07-25T14:58:10Z",
  "ProcessId": 24536,
  "LocalIpAddress": "127.0.0.1:1967",
  "RemoteIpAddress": "::1"
}
2018-07-25 15:58:10.269 +01:00 [DBG] Augmenting SignInContext
2018-07-25 15:58:10.272 +01:00 [DBG] Adding amr claim with value: external
2018-07-25 15:58:10.276 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2018-07-25 15:58:10.276 +01:00 [INF] AuthenticationScheme: idsrv.external signed out.
2018-07-25 15:58:10.289 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:58:10.289 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:58:16.226 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:58:16.226 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:58:28.846 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:58:28.846 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:58:28.866 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:58:28.866 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:58:28.879 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:58:28.879 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:58:28.892 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:58:28.892 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:58:28.906 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:58:28.908 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:58:28.908 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:58:28.909 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:58:28.921 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:58:28.922 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:58:28.963 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:58:28.963 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:58:30.648 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:58:30.648 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:58:35.312 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:58:35.312 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:58:36.295 +01:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2018-07-25 15:58:36.295 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:58:36.295 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:58:36.296 +01:00 [INF] AuthenticationScheme: idsrv signed out.
2018-07-25 15:58:36.296 +01:00 [INF] {
  "Name": "User Logout Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1002,
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "DisplayName": "Steve Kent",
  "ActivityId": "0HLFI7RLH9798:00000006",
  "TimeStamp": "2018-07-25T14:58:36Z",
  "ProcessId": 24536,
  "LocalIpAddress": "127.0.0.1:1967",
  "RemoteIpAddress": "::1"
}
2018-07-25 15:58:37.735 +01:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2018-07-25 15:58:43.903 +01:00 [INF] AuthenticationScheme: idsrv was challenged.
2018-07-25 15:58:54.765 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2018-07-25 15:58:55.277 +01:00 [INF] {
  "Name": "User Login Failure",
  "Category": "Authentication",
  "EventType": "Failure",
  "Id": 1001,
  "Username": "steve@techdevs.net",
  "Endpoint": "UI",
  "Message": "invalid credentials",
  "ActivityId": "0HLFI7RLH979E:00000006",
  "TimeStamp": "2018-07-25T14:58:55Z",
  "ProcessId": 24536,
  "LocalIpAddress": "127.0.0.1:1967",
  "RemoteIpAddress": "::1"
}
2018-07-25 15:59:07.345 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2018-07-25 15:59:07.805 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "stevekent55@gmail.com",
  "SubjectId": "a80aca2d-284f-4995-b85a-ca0764fbe8a4",
  "DisplayName": "stevekent55@gmail.com",
  "Endpoint": "UI",
  "ActivityId": "0HLFI7RLH979D:00000006",
  "TimeStamp": "2018-07-25T14:59:07Z",
  "ProcessId": 24536,
  "LocalIpAddress": "127.0.0.1:1967",
  "RemoteIpAddress": "::1"
}
2018-07-25 15:59:07.809 +01:00 [DBG] Augmenting SignInContext
2018-07-25 15:59:07.809 +01:00 [DBG] Adding idp claim with value: local
2018-07-25 15:59:07.809 +01:00 [DBG] Adding amr claim with value: pwd
2018-07-25 15:59:07.811 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2018-07-25 15:59:07.817 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:59:07.817 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:59:12.361 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:59:12.362 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:59:14.909 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 15:59:14.909 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:01:37.595 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-07-25 16:01:37.718 +01:00 [DBG] Using idsrv as default scheme for authentication
2018-07-25 16:01:37.722 +01:00 [DBG] Using idsrv as default scheme for sign-in
2018-07-25 16:01:37.724 +01:00 [DBG] Using idsrv as default scheme for sign-out
2018-07-25 16:01:37.725 +01:00 [DBG] Using idsrv as default scheme for challenge
2018-07-25 16:01:37.725 +01:00 [DBG] Using idsrv as default scheme for forbid
2018-07-25 16:01:38.970 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:01:38.991 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:01:47.614 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:01:47.614 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:01:47.615 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:01:47.615 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:01:47.614 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:01:47.615 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:01:47.615 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:01:47.615 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:01:47.615 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:01:47.615 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:01:47.616 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:01:47.616 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:01:49.210 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:01:49.210 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:01:58.097 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 16:01:58.105 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 16:01:58.105 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 16:01:58.108 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 16:01:58.113 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 16:01:58.113 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 16:01:58.119 +01:00 [DBG] Start discovery request
2018-07-25 16:01:58.258 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:01:58.258 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:01:58.258 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 16:01:58.259 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 16:01:58.259 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 16:01:58.260 +01:00 [DBG] Rendering check session result
2018-07-25 16:02:01.433 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:02:01.433 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:02:01.433 +01:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2018-07-25 16:02:01.437 +01:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2018-07-25 16:02:01.438 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2018-07-25 16:02:01.461 +01:00 [DBG] Processing signout request for TechDevs
2018-07-25 16:02:01.468 +01:00 [DBG] Start end session request validation
2018-07-25 16:02:01.478 +01:00 [DBG] Start identity token validation
2018-07-25 16:02:01.526 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:02:01.526 +01:00 [DBG] Client found: spa / SPA Client
2018-07-25 16:02:01.603 +01:00 [DBG] IsActive called from: IdentityTokenValidation
2018-07-25 16:02:01.603 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 16:02:01.617 +01:00 [DBG] Token validation success
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "ValidateLifetime": false,
  "Claims": {
    "nbf": 1532530484,
    "exp": 1532530784,
    "iss": "http://localhost:5000",
    "aud": "spa",
    "nonce": "21b6ebc39b2c4d97b0f48795956158d1",
    "iat": 1532530484,
    "at_hash": "LjqVHZIE38W4jSK7mIgD6A",
    "sid": "d174e570245df5c5563de712ae40e37e",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532530484,
    "idp": "Google",
    "amr": "external"
  }
}
2018-07-25 16:02:01.637 +01:00 [INF] End session request validation failure: Current user does not match identity token
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "SubjectId": "unknown",
  "Raw": {
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjUxZTMyMGM2ODUzZjVmZmY4MDA2YTEwODE3Y2JiMTNiIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1MzI1MzA0ODQsImV4cCI6MTUzMjUzMDc4NCwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiIyMWI2ZWJjMzliMmM0ZDk3YjBmNDg3OTU5NTYxNThkMSIsImlhdCI6MTUzMjUzMDQ4NCwiYXRfaGFzaCI6IkxqcVZIWklFMzhXNGpTSzdtSWdENkEiLCJzaWQiOiJkMTc0ZTU3MDI0NWRmNWM1NTYzZGU3MTJhZTQwZTM3ZSIsInN1YiI6IjVlNWMwMmE2LTJhZjEtNDdkMy1iOWRiLWE2YjE2MGQ4Y2E1OSIsImF1dGhfdGltZSI6MTUzMjUzMDQ4NCwiaWRwIjoiR29vZ2xlIiwiYW1yIjpbImV4dGVybmFsIl19.FMvDLM-9jv901Ms9bOuBGuJWDDYUEXbGU2yosT2KFbFBJE1s2XjPqqBgPQkQULRK_0i_y7VV4KMQP7upUMthahpuRiV0u-GpS88d6CFrS__dmA8tTD2UVyjdQJqJ8FA9uBkw9Ux3gcC6KzavNpSUZbbOyDIp984ITT5KaBHWOg2HbaN9KEiRFZp7UmgBIte3rwJSczaKH1dMDP4a2kwMzovkqterf_Aq4oY8z5kJjCOuPT-bcny_TPcvDe8Axg2s-J8hFd8wa3EIhZUZv7QV2iIkWE-DL6ZdCcmdiWTJucwXIWFOKVwNLtp9-fiAsC_SHfRSH5fdmAm94oh0M3FvIg",
    "post_logout_redirect_uri": "http://localhost:5003/index.html"
  }
}
2018-07-25 16:02:01.638 +01:00 [ERR] Error processing end session request Invalid request
2018-07-25 16:02:01.653 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:02:01.655 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:02:04.005 +01:00 [DBG] CORS request made for path: /account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2018-07-25 16:02:04.005 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:02:04.005 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:02:04.211 +01:00 [INF] AuthenticationScheme: idsrv signed out.
2018-07-25 16:02:04.273 +01:00 [INF] {
  "Name": "User Logout Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1002,
  "SubjectId": "TechDevs",
  "DisplayName": "Steve Kent",
  "ActivityId": "0HLFI7U2SOC0S:00000003",
  "TimeStamp": "2018-07-25T15:02:04Z",
  "ProcessId": 14016,
  "LocalIpAddress": "127.0.0.1:30439",
  "RemoteIpAddress": "::1"
}
2018-07-25 16:02:12.094 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 16:02:12.094 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 16:02:12.094 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 16:02:12.094 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 16:02:12.094 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 16:02:12.094 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 16:02:12.094 +01:00 [DBG] Start discovery request
2018-07-25 16:02:12.109 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-07-25 16:02:12.113 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-07-25 16:02:12.113 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-07-25 16:02:12.118 +01:00 [DBG] Start authorize request
2018-07-25 16:02:12.124 +01:00 [DBG] No user present in authorize request
2018-07-25 16:02:12.129 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 16:02:12.134 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:02:12.162 +01:00 [ERR] Invalid scope: name
2018-07-25 16:02:12.165 +01:00 [ERR] Request validation failed
2018-07-25 16:02:12.180 +01:00 [INF] {
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1 techdevs-accounts-api name",
  "State": "79680aeb6daf4bc59b88faff55f27890",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1 techdevs-accounts-api name",
    "state": "79680aeb6daf4bc59b88faff55f27890",
    "nonce": "e34dd720a0c34843ab31dec1d0113aa0"
  }
}
2018-07-25 16:02:12.189 +01:00 [INF] {
  "Name": "Token Issued Failure",
  "Category": "Token",
  "EventType": "Failure",
  "Id": 2001,
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "Endpoint": "Authorize",
  "Scopes": "openid profile api1 techdevs-accounts-api name",
  "GrantType": "implicit",
  "Error": "invalid_scope",
  "ActivityId": "0HLFI7U2SOC10:00000003",
  "TimeStamp": "2018-07-25T15:02:12Z",
  "ProcessId": 14016,
  "LocalIpAddress": "127.0.0.1:30439",
  "RemoteIpAddress": "::1"
}
2018-07-25 16:02:18.238 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 16:02:18.238 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 16:02:18.238 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 16:02:18.238 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 16:02:18.238 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 16:02:18.238 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 16:02:18.239 +01:00 [DBG] Start discovery request
2018-07-25 16:02:18.252 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-07-25 16:02:18.252 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-07-25 16:02:18.252 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-07-25 16:02:18.252 +01:00 [DBG] Start authorize request
2018-07-25 16:02:18.252 +01:00 [DBG] No user present in authorize request
2018-07-25 16:02:18.252 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 16:02:18.252 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:02:18.253 +01:00 [ERR] Invalid scope: name
2018-07-25 16:02:18.253 +01:00 [ERR] Request validation failed
2018-07-25 16:02:18.253 +01:00 [INF] {
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1 techdevs-accounts-api name",
  "State": "93a35fdb9902442b869f31e7a9ed3ed0",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1 techdevs-accounts-api name",
    "state": "93a35fdb9902442b869f31e7a9ed3ed0",
    "nonce": "0b3bba3cc83a4a24924b0a338a388145"
  }
}
2018-07-25 16:02:18.253 +01:00 [INF] {
  "Name": "Token Issued Failure",
  "Category": "Token",
  "EventType": "Failure",
  "Id": 2001,
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "Endpoint": "Authorize",
  "Scopes": "openid profile api1 techdevs-accounts-api name",
  "GrantType": "implicit",
  "Error": "invalid_scope",
  "ActivityId": "0HLFI7U2SOC11:00000003",
  "TimeStamp": "2018-07-25T15:02:18Z",
  "ProcessId": 14016,
  "LocalIpAddress": "127.0.0.1:30439",
  "RemoteIpAddress": "::1"
}
2018-07-25 16:02:50.264 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-07-25 16:02:50.397 +01:00 [DBG] Using idsrv as default scheme for authentication
2018-07-25 16:02:50.404 +01:00 [DBG] Using idsrv as default scheme for sign-in
2018-07-25 16:02:50.406 +01:00 [DBG] Using idsrv as default scheme for sign-out
2018-07-25 16:02:50.406 +01:00 [DBG] Using idsrv as default scheme for challenge
2018-07-25 16:02:50.407 +01:00 [DBG] Using idsrv as default scheme for forbid
2018-07-25 16:04:26.224 +01:00 [INF] AuthenticationScheme: idsrv was challenged.
2018-07-25 16:04:31.917 +01:00 [INF] AuthenticationScheme: Google was challenged.
2018-07-25 16:04:38.850 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 16:04:38.858 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 16:04:38.858 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 16:04:38.860 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 16:04:38.864 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 16:04:38.864 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 16:04:38.868 +01:00 [DBG] Start discovery request
2018-07-25 16:04:38.999 +01:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2018-07-25 16:04:39.003 +01:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2018-07-25 16:04:39.003 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2018-07-25 16:04:39.016 +01:00 [DBG] Processing signout request for anonymous
2018-07-25 16:04:39.025 +01:00 [DBG] Start end session request validation
2018-07-25 16:04:39.057 +01:00 [INF] End session request validation success
{
  "SubjectId": "unknown",
  "Raw": {
    "post_logout_redirect_uri": "http://localhost:5003/index.html"
  }
}
2018-07-25 16:04:39.057 +01:00 [DBG] Success validating end session request from null
2018-07-25 16:04:41.471 +01:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2018-07-25 16:04:41.474 +01:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2018-07-25 16:04:41.474 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2018-07-25 16:04:41.480 +01:00 [DBG] Processing signout callback request
2018-07-25 16:04:41.501 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:04:41.502 +01:00 [DBG] No client front-channel logout URLs
2018-07-25 16:04:41.502 +01:00 [DBG] No client back-channel logout URLs
2018-07-25 16:04:41.502 +01:00 [INF] Successful signout callback.
2018-07-25 16:04:41.502 +01:00 [DBG] No client front-channel iframe urls
2018-07-25 16:04:41.502 +01:00 [DBG] No client back-channel iframe urls
2018-07-25 16:04:43.202 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 16:04:43.203 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 16:04:43.203 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 16:04:43.203 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 16:04:43.203 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 16:04:43.203 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 16:04:43.203 +01:00 [DBG] Start discovery request
2018-07-25 16:04:43.217 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-07-25 16:04:43.220 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-07-25 16:04:43.220 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-07-25 16:04:43.226 +01:00 [DBG] Start authorize request
2018-07-25 16:04:43.233 +01:00 [DBG] No user present in authorize request
2018-07-25 16:04:43.238 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 16:04:43.246 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:04:43.279 +01:00 [ERR] Invalid scope: name
2018-07-25 16:04:43.283 +01:00 [ERR] Request validation failed
2018-07-25 16:04:43.294 +01:00 [INF] {
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1 techdevs-accounts-api name",
  "State": "ebaf6600564848d4b04552a157804ce0",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1 techdevs-accounts-api name",
    "state": "ebaf6600564848d4b04552a157804ce0",
    "nonce": "af27aefff28742b58da75af084dc866a"
  }
}
2018-07-25 16:04:43.339 +01:00 [INF] {
  "Name": "Token Issued Failure",
  "Category": "Token",
  "EventType": "Failure",
  "Id": 2001,
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "Endpoint": "Authorize",
  "Scopes": "openid profile api1 techdevs-accounts-api name",
  "GrantType": "implicit",
  "Error": "invalid_scope",
  "ActivityId": "0HLFI7UOHHKP5:0000000A",
  "TimeStamp": "2018-07-25T15:04:43Z",
  "ProcessId": 18644,
  "LocalIpAddress": "127.0.0.1:5559",
  "RemoteIpAddress": "::1"
}
2018-07-25 16:04:49.068 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 16:04:49.068 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 16:04:49.068 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 16:04:49.068 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 16:04:49.068 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 16:04:49.068 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 16:04:49.069 +01:00 [DBG] Start discovery request
2018-07-25 16:04:49.084 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-07-25 16:04:49.084 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-07-25 16:04:49.084 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-07-25 16:04:49.084 +01:00 [DBG] Start authorize request
2018-07-25 16:04:49.084 +01:00 [DBG] No user present in authorize request
2018-07-25 16:04:49.084 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 16:04:49.084 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:04:49.108 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 16:04:49.109 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1 techdevs-accounts-api",
  "State": "e80e0e4c59e04cfa9b516bd1d995f643",
  "Nonce": "6c898b87652b4972915c2aa91cc7d96e",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1 techdevs-accounts-api",
    "state": "e80e0e4c59e04cfa9b516bd1d995f643",
    "nonce": "6c898b87652b4972915c2aa91cc7d96e"
  }
}
2018-07-25 16:04:49.121 +01:00 [INF] Showing login: User is not authenticated
2018-07-25 16:04:49.136 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 16:04:49.136 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:04:49.136 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 16:04:49.139 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:04:50.414 +01:00 [INF] AuthenticationScheme: Google was challenged.
2018-07-25 16:04:55.288 +01:00 [INF] AuthenticationScheme: idsrv.external signed in.
2018-07-25 16:04:55.336 +01:00 [INF] AuthenticationScheme: idsrv.external was successfully authenticated.
2018-07-25 16:04:57.471 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Provider": "Google",
  "ProviderUserId": "107387075381855787656",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "DisplayName": "steve@techdevs.net",
  "Endpoint": "UI",
  "ActivityId": "0HLFI7UOHHKP6:00000004",
  "TimeStamp": "2018-07-25T15:04:57Z",
  "ProcessId": 18644,
  "LocalIpAddress": "127.0.0.1:5559",
  "RemoteIpAddress": "::1"
}
2018-07-25 16:04:57.487 +01:00 [DBG] Augmenting SignInContext
2018-07-25 16:04:57.489 +01:00 [DBG] Adding amr claim with value: external
2018-07-25 16:04:57.496 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2018-07-25 16:04:57.512 +01:00 [INF] AuthenticationScheme: idsrv.external signed out.
2018-07-25 16:04:57.512 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 16:04:57.512 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:04:57.512 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 16:04:57.514 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:04:57.529 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:04:57.530 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:04:57.530 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2018-07-25 16:04:57.531 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2018-07-25 16:04:57.531 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2018-07-25 16:04:57.539 +01:00 [DBG] Start authorize callback request
2018-07-25 16:04:57.548 +01:00 [DBG] User in authorize request: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 16:04:57.548 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 16:04:57.549 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:04:57.549 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 16:04:57.549 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1 techdevs-accounts-api",
  "State": "e80e0e4c59e04cfa9b516bd1d995f643",
  "Nonce": "6c898b87652b4972915c2aa91cc7d96e",
  "SessionId": "5cfffb7007db2466b31ba3e81f76dade",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1 techdevs-accounts-api",
    "state": "e80e0e4c59e04cfa9b516bd1d995f643",
    "nonce": "6c898b87652b4972915c2aa91cc7d96e"
  }
}
2018-07-25 16:04:57.550 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2018-07-25 16:04:57.571 +01:00 [DBG] user_consent grant with value: spa|5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 not found in store.
2018-07-25 16:04:57.571 +01:00 [DBG] Found no prior consent from consent store, consent is required
2018-07-25 16:04:57.571 +01:00 [INF] Showing consent: User has not yet consented
2018-07-25 16:04:57.580 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:04:57.581 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:04:57.593 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 16:04:57.593 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:04:57.593 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 16:04:57.593 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:04:59.234 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:04:59.234 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:05:09.548 +01:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2018-07-25 16:05:09.549 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:05:09.549 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:05:09.686 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 16:05:09.686 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:05:09.686 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 16:05:09.697 +01:00 [INF] {
  "Name": "Consent granted",
  "Category": "Grants",
  "EventType": "Information",
  "Id": 4000,
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ClientId": "spa",
  "RequestedScopes": [
    "openid",
    "profile",
    "api1",
    "techdevs-accounts-api"
  ],
  "GrantedScopes": [
    "openid",
    "profile",
    "api1",
    "techdevs-accounts-api"
  ],
  "ConsentRemembered": true,
  "ActivityId": "0HLFI7UOHHKP7:00000004",
  "TimeStamp": "2018-07-25T15:05:09Z",
  "ProcessId": 18644,
  "LocalIpAddress": "127.0.0.1:5559",
  "RemoteIpAddress": "::1"
}
2018-07-25 16:05:09.717 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:05:09.727 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:05:09.727 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:05:09.727 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2018-07-25 16:05:09.727 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2018-07-25 16:05:09.727 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2018-07-25 16:05:09.727 +01:00 [DBG] Start authorize callback request
2018-07-25 16:05:09.733 +01:00 [DBG] User in authorize request: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 16:05:09.733 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 16:05:09.733 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:05:09.733 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 16:05:09.733 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1 techdevs-accounts-api",
  "State": "e80e0e4c59e04cfa9b516bd1d995f643",
  "Nonce": "6c898b87652b4972915c2aa91cc7d96e",
  "SessionId": "5cfffb7007db2466b31ba3e81f76dade",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1 techdevs-accounts-api",
    "state": "e80e0e4c59e04cfa9b516bd1d995f643",
    "nonce": "6c898b87652b4972915c2aa91cc7d96e"
  }
}
2018-07-25 16:05:09.734 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2018-07-25 16:05:09.734 +01:00 [DBG] user_consent grant with value: spa|5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 not found in store.
2018-07-25 16:05:09.734 +01:00 [DBG] Found no prior consent from consent store, consent is required
2018-07-25 16:05:09.749 +01:00 [INF] User consented to scopes: ["openid","profile","api1","techdevs-accounts-api"]
2018-07-25 16:05:09.758 +01:00 [DBG] User indicated to remember consent for scopes: ["openid","profile","api1","techdevs-accounts-api"]
2018-07-25 16:05:09.763 +01:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 16:05:09.780 +01:00 [DBG] Creating Implicit Flow response.
2018-07-25 16:05:09.790 +01:00 [DBG] Getting claims for access token for client: spa
2018-07-25 16:05:09.791 +01:00 [DBG] Getting claims for access token for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 16:05:09.800 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["email"] via ClaimsProviderAccessToken
2018-07-25 16:05:09.804 +01:00 [DBG] Issued claims: []
2018-07-25 16:05:09.894 +01:00 [DBG] Getting claims for identity token for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 and client: spa
2018-07-25 16:05:09.894 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-07-25 16:05:09.908 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "Endpoint": "Authorize",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "Scopes": "openid profile api1 techdevs-accounts-api",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****rkng"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****vw7w"
    }
  ],
  "ActivityId": "0HLFI7UOHHKP5:00000013",
  "TimeStamp": "2018-07-25T15:05:09Z",
  "ProcessId": 18644,
  "LocalIpAddress": "127.0.0.1:5559",
  "RemoteIpAddress": "::1"
}
2018-07-25 16:05:09.913 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ClientId": "spa",
  "RedirectUri": "http://localhost:5003/callback.html",
  "State": "e80e0e4c59e04cfa9b516bd1d995f643",
  "Scope": "openid profile api1 techdevs-accounts-api"
}
2018-07-25 16:05:09.927 +01:00 [DBG] Augmenting SignInContext
2018-07-25 16:05:09.927 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2018-07-25 16:05:10.425 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 16:05:10.425 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 16:05:10.425 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 16:05:10.425 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 16:05:10.425 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 16:05:10.425 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 16:05:10.426 +01:00 [DBG] Start discovery request
2018-07-25 16:05:10.479 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:5003
2018-07-25 16:05:10.479 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 16:05:10.479 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 16:05:10.479 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-07-25 16:05:10.480 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-07-25 16:05:10.480 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-07-25 16:05:10.485 +01:00 [DBG] Start key discovery request
2018-07-25 16:05:10.578 +01:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:5003
2018-07-25 16:05:10.578 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 16:05:10.578 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 16:05:10.578 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-07-25 16:05:10.579 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-07-25 16:05:10.580 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-07-25 16:05:10.588 +01:00 [DBG] Start userinfo request
2018-07-25 16:05:10.593 +01:00 [DBG] Bearer token found in header
2018-07-25 16:05:10.667 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:05:10.670 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:05:10.671 +01:00 [DBG] IsActive called from: AccessTokenValidation
2018-07-25 16:05:10.671 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 16:05:10.676 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1532531109,
    "exp": 1532534709,
    "iss": "http://localhost:5000",
    "aud": [
      "http://localhost:5000/resources",
      "api1",
      "techdevs-accounts-api"
    ],
    "client_id": "spa",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532531097,
    "idp": "Google",
    "scope": [
      "openid",
      "profile",
      "api1",
      "techdevs-accounts-api"
    ],
    "amr": "external"
  }
}
2018-07-25 16:05:10.678 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2018-07-25 16:05:10.685 +01:00 [DBG] Creating userinfo response
2018-07-25 16:05:10.691 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 16:05:10.695 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 16:05:10.699 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-07-25 16:05:10.699 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 16:05:10.699 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2018-07-25 16:05:10.700 +01:00 [DBG] Issued claims: ["sub"]
2018-07-25 16:05:10.701 +01:00 [INF] Profile service returned to the following claim types: sub
2018-07-25 16:05:10.701 +01:00 [DBG] End userinfo request
2018-07-25 16:05:10.715 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:05:10.715 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:05:10.715 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 16:05:10.715 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 16:05:10.715 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 16:05:10.717 +01:00 [DBG] Rendering check session result
2018-07-25 16:05:10.882 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 16:05:10.882 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 16:05:10.882 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 16:05:10.882 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 16:05:10.882 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 16:05:10.882 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 16:05:10.882 +01:00 [DBG] Start discovery request
2018-07-25 16:05:10.907 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:05:10.907 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:05:10.908 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 16:05:10.908 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 16:05:10.908 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 16:05:10.908 +01:00 [DBG] Rendering check session result
2018-07-25 16:05:13.293 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 16:05:13.293 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 16:05:13.293 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 16:05:13.293 +01:00 [DBG] Start discovery request
2018-07-25 16:05:13.492 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-07-25 16:05:13.493 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-07-25 16:05:13.493 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-07-25 16:05:13.493 +01:00 [DBG] Start key discovery request
2018-07-25 16:05:37.040 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-07-25 16:05:37.040 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-07-25 16:05:37.040 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-07-25 16:05:37.041 +01:00 [DBG] Start userinfo request
2018-07-25 16:05:37.041 +01:00 [DBG] Bearer token found in header
2018-07-25 16:05:37.041 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:05:37.042 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:05:37.042 +01:00 [DBG] IsActive called from: AccessTokenValidation
2018-07-25 16:05:37.042 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 16:05:37.042 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1532530484,
    "exp": 1532534084,
    "iss": "http://localhost:5000",
    "aud": [
      "http://localhost:5000/resources",
      "api1",
      "techdevs-accounts-api"
    ],
    "client_id": "spa",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532530484,
    "idp": "Google",
    "scope": [
      "openid",
      "profile",
      "api1",
      "techdevs-accounts-api"
    ],
    "amr": "external"
  }
}
2018-07-25 16:05:37.042 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2018-07-25 16:05:37.042 +01:00 [DBG] Creating userinfo response
2018-07-25 16:05:37.042 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 16:05:37.042 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 16:05:37.042 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-07-25 16:05:37.042 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 16:05:37.042 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2018-07-25 16:05:37.042 +01:00 [DBG] Issued claims: ["sub"]
2018-07-25 16:05:37.043 +01:00 [INF] Profile service returned to the following claim types: sub
2018-07-25 16:05:37.043 +01:00 [DBG] End userinfo request
2018-07-25 16:05:37.707 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-07-25 16:05:37.707 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-07-25 16:05:37.707 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-07-25 16:05:37.707 +01:00 [DBG] Start userinfo request
2018-07-25 16:05:37.707 +01:00 [DBG] Bearer token found in header
2018-07-25 16:05:37.708 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:05:37.708 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:05:37.708 +01:00 [DBG] IsActive called from: AccessTokenValidation
2018-07-25 16:05:37.708 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 16:05:37.708 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1532530484,
    "exp": 1532534084,
    "iss": "http://localhost:5000",
    "aud": [
      "http://localhost:5000/resources",
      "api1",
      "techdevs-accounts-api"
    ],
    "client_id": "spa",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532530484,
    "idp": "Google",
    "scope": [
      "openid",
      "profile",
      "api1",
      "techdevs-accounts-api"
    ],
    "amr": "external"
  }
}
2018-07-25 16:05:37.708 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2018-07-25 16:05:37.708 +01:00 [DBG] Creating userinfo response
2018-07-25 16:05:37.708 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 16:05:37.708 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 16:05:37.708 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-07-25 16:05:37.708 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 16:05:37.708 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2018-07-25 16:05:37.708 +01:00 [DBG] Issued claims: ["sub"]
2018-07-25 16:05:37.709 +01:00 [INF] Profile service returned to the following claim types: sub
2018-07-25 16:05:37.709 +01:00 [DBG] End userinfo request
2018-07-25 16:05:38.141 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-07-25 16:05:38.141 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-07-25 16:05:38.141 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-07-25 16:05:38.141 +01:00 [DBG] Start userinfo request
2018-07-25 16:05:38.142 +01:00 [DBG] Bearer token found in header
2018-07-25 16:05:38.142 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:05:38.142 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:05:38.142 +01:00 [DBG] IsActive called from: AccessTokenValidation
2018-07-25 16:05:38.142 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 16:05:38.142 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1532530484,
    "exp": 1532534084,
    "iss": "http://localhost:5000",
    "aud": [
      "http://localhost:5000/resources",
      "api1",
      "techdevs-accounts-api"
    ],
    "client_id": "spa",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532530484,
    "idp": "Google",
    "scope": [
      "openid",
      "profile",
      "api1",
      "techdevs-accounts-api"
    ],
    "amr": "external"
  }
}
2018-07-25 16:05:38.142 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2018-07-25 16:05:38.143 +01:00 [DBG] Creating userinfo response
2018-07-25 16:05:38.143 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 16:05:38.143 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 16:05:38.143 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-07-25 16:05:38.143 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 16:05:38.143 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2018-07-25 16:05:38.143 +01:00 [DBG] Issued claims: ["sub"]
2018-07-25 16:05:38.143 +01:00 [INF] Profile service returned to the following claim types: sub
2018-07-25 16:05:38.143 +01:00 [DBG] End userinfo request
2018-07-25 16:05:38.329 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-07-25 16:05:38.329 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-07-25 16:05:38.329 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-07-25 16:05:38.329 +01:00 [DBG] Start userinfo request
2018-07-25 16:05:38.329 +01:00 [DBG] Bearer token found in header
2018-07-25 16:05:38.330 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:05:38.330 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:05:38.330 +01:00 [DBG] IsActive called from: AccessTokenValidation
2018-07-25 16:05:38.330 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 16:05:38.330 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1532530484,
    "exp": 1532534084,
    "iss": "http://localhost:5000",
    "aud": [
      "http://localhost:5000/resources",
      "api1",
      "techdevs-accounts-api"
    ],
    "client_id": "spa",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532530484,
    "idp": "Google",
    "scope": [
      "openid",
      "profile",
      "api1",
      "techdevs-accounts-api"
    ],
    "amr": "external"
  }
}
2018-07-25 16:05:38.331 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2018-07-25 16:05:38.331 +01:00 [DBG] Creating userinfo response
2018-07-25 16:05:38.331 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 16:05:38.331 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 16:05:38.331 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-07-25 16:05:38.331 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 16:05:38.331 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2018-07-25 16:05:38.331 +01:00 [DBG] Issued claims: ["sub"]
2018-07-25 16:05:38.331 +01:00 [INF] Profile service returned to the following claim types: sub
2018-07-25 16:05:38.331 +01:00 [DBG] End userinfo request
2018-07-25 16:05:38.511 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-07-25 16:05:38.511 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-07-25 16:05:38.511 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-07-25 16:05:38.511 +01:00 [DBG] Start userinfo request
2018-07-25 16:05:38.511 +01:00 [DBG] Bearer token found in header
2018-07-25 16:05:38.512 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:05:38.512 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:05:38.512 +01:00 [DBG] IsActive called from: AccessTokenValidation
2018-07-25 16:05:38.512 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 16:05:38.512 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1532530484,
    "exp": 1532534084,
    "iss": "http://localhost:5000",
    "aud": [
      "http://localhost:5000/resources",
      "api1",
      "techdevs-accounts-api"
    ],
    "client_id": "spa",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532530484,
    "idp": "Google",
    "scope": [
      "openid",
      "profile",
      "api1",
      "techdevs-accounts-api"
    ],
    "amr": "external"
  }
}
2018-07-25 16:05:38.512 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2018-07-25 16:05:38.512 +01:00 [DBG] Creating userinfo response
2018-07-25 16:05:38.513 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 16:05:38.513 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 16:05:38.513 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-07-25 16:05:38.513 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 16:05:38.513 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2018-07-25 16:05:38.513 +01:00 [DBG] Issued claims: ["sub"]
2018-07-25 16:05:38.513 +01:00 [INF] Profile service returned to the following claim types: sub
2018-07-25 16:05:38.513 +01:00 [DBG] End userinfo request
2018-07-25 16:05:38.731 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-07-25 16:05:38.731 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-07-25 16:05:38.732 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-07-25 16:05:38.732 +01:00 [DBG] Start userinfo request
2018-07-25 16:05:38.732 +01:00 [DBG] Bearer token found in header
2018-07-25 16:05:38.732 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:05:38.732 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:05:38.732 +01:00 [DBG] IsActive called from: AccessTokenValidation
2018-07-25 16:05:38.733 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 16:05:38.733 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1532530484,
    "exp": 1532534084,
    "iss": "http://localhost:5000",
    "aud": [
      "http://localhost:5000/resources",
      "api1",
      "techdevs-accounts-api"
    ],
    "client_id": "spa",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532530484,
    "idp": "Google",
    "scope": [
      "openid",
      "profile",
      "api1",
      "techdevs-accounts-api"
    ],
    "amr": "external"
  }
}
2018-07-25 16:05:38.733 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2018-07-25 16:05:38.733 +01:00 [DBG] Creating userinfo response
2018-07-25 16:05:38.733 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 16:05:38.733 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 16:05:38.733 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-07-25 16:05:38.733 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 16:05:38.733 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2018-07-25 16:05:38.733 +01:00 [DBG] Issued claims: ["sub"]
2018-07-25 16:05:38.733 +01:00 [INF] Profile service returned to the following claim types: sub
2018-07-25 16:05:38.733 +01:00 [DBG] End userinfo request
2018-07-25 16:05:49.434 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:05:49.434 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:05:49.434 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-07-25 16:05:49.434 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-07-25 16:05:49.434 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-07-25 16:05:49.434 +01:00 [DBG] Start authorize request
2018-07-25 16:05:49.434 +01:00 [DBG] User in authorize request: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 16:05:49.434 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 16:05:49.434 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:05:49.435 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 16:05:49.435 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1 techdevs-accounts-api",
  "State": "371ddaa91d954b0db8777b500cf40e8c",
  "Nonce": "9d6eda89b1e14267836f0876184e428b",
  "SessionId": "5cfffb7007db2466b31ba3e81f76dade",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1 techdevs-accounts-api",
    "state": "371ddaa91d954b0db8777b500cf40e8c",
    "nonce": "9d6eda89b1e14267836f0876184e428b"
  }
}
2018-07-25 16:05:49.435 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2018-07-25 16:05:49.451 +01:00 [DBG] Consent found in consent store is same as current request, consent is not required
2018-07-25 16:05:49.451 +01:00 [DBG] Creating Implicit Flow response.
2018-07-25 16:05:49.451 +01:00 [DBG] Getting claims for access token for client: spa
2018-07-25 16:05:49.451 +01:00 [DBG] Getting claims for access token for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 16:05:49.451 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["email"] via ClaimsProviderAccessToken
2018-07-25 16:05:49.451 +01:00 [DBG] Issued claims: []
2018-07-25 16:05:49.453 +01:00 [DBG] Getting claims for identity token for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 and client: spa
2018-07-25 16:05:49.454 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-07-25 16:05:49.456 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "Endpoint": "Authorize",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "Scopes": "openid profile api1 techdevs-accounts-api",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****33Fw"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****kwbA"
    }
  ],
  "ActivityId": "0HLFI7UOHHKP6:0000000B",
  "TimeStamp": "2018-07-25T15:05:49Z",
  "ProcessId": 18644,
  "LocalIpAddress": "127.0.0.1:5559",
  "RemoteIpAddress": "::1"
}
2018-07-25 16:05:49.456 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ClientId": "spa",
  "RedirectUri": "http://localhost:5003/callback.html",
  "State": "371ddaa91d954b0db8777b500cf40e8c",
  "Scope": "openid profile api1 techdevs-accounts-api"
}
2018-07-25 16:05:49.631 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 16:05:49.631 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 16:05:49.631 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 16:05:49.631 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 16:05:49.631 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 16:05:49.631 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 16:05:49.631 +01:00 [DBG] Start discovery request
2018-07-25 16:05:49.688 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:5003
2018-07-25 16:05:49.688 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 16:05:49.688 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 16:05:49.688 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-07-25 16:05:49.688 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-07-25 16:05:49.688 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-07-25 16:05:49.688 +01:00 [DBG] Start key discovery request
2018-07-25 16:05:49.802 +01:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:5003
2018-07-25 16:05:49.802 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 16:05:49.802 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 16:05:49.802 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-07-25 16:05:49.802 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-07-25 16:05:49.802 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-07-25 16:05:49.802 +01:00 [DBG] Start userinfo request
2018-07-25 16:05:49.802 +01:00 [DBG] Bearer token found in header
2018-07-25 16:05:49.803 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:05:49.803 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:05:49.803 +01:00 [DBG] IsActive called from: AccessTokenValidation
2018-07-25 16:05:49.804 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 16:05:49.804 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1532531149,
    "exp": 1532534749,
    "iss": "http://localhost:5000",
    "aud": [
      "http://localhost:5000/resources",
      "api1",
      "techdevs-accounts-api"
    ],
    "client_id": "spa",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532531097,
    "idp": "Google",
    "scope": [
      "openid",
      "profile",
      "api1",
      "techdevs-accounts-api"
    ],
    "amr": "external"
  }
}
2018-07-25 16:05:49.804 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2018-07-25 16:05:49.804 +01:00 [DBG] Creating userinfo response
2018-07-25 16:05:49.804 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 16:05:49.804 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 16:05:49.804 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-07-25 16:05:49.804 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 16:05:49.804 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2018-07-25 16:05:49.804 +01:00 [DBG] Issued claims: ["sub"]
2018-07-25 16:05:49.804 +01:00 [INF] Profile service returned to the following claim types: sub
2018-07-25 16:05:49.804 +01:00 [DBG] End userinfo request
2018-07-25 16:05:49.829 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:05:49.830 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:05:49.830 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 16:05:49.830 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 16:05:49.830 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 16:05:49.830 +01:00 [DBG] Rendering check session result
2018-07-25 16:05:49.987 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 16:05:49.987 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 16:05:49.987 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 16:05:49.987 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 16:05:49.987 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 16:05:49.987 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 16:05:49.987 +01:00 [DBG] Start discovery request
2018-07-25 16:05:50.064 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:05:50.064 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:05:50.065 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 16:05:50.065 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 16:05:50.065 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 16:05:50.065 +01:00 [DBG] Rendering check session result
2018-07-25 16:08:02.678 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:08:02.678 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:08:02.678 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 16:08:02.678 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 16:08:02.678 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 16:08:02.678 +01:00 [DBG] Rendering check session result
2018-07-25 16:08:03.929 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:08:03.929 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:08:03.929 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-07-25 16:08:03.930 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-07-25 16:08:03.930 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-07-25 16:08:03.930 +01:00 [DBG] Start authorize request
2018-07-25 16:08:03.930 +01:00 [DBG] User in authorize request: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 16:08:03.930 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 16:08:03.930 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:08:03.930 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 16:08:03.930 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1 techdevs-accounts-api",
  "State": "895c74254b964712966b7d2ecfb64bf4",
  "Nonce": "944ea8e723d44f74af1e61d6d28239ed",
  "SessionId": "5cfffb7007db2466b31ba3e81f76dade",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1 techdevs-accounts-api",
    "state": "895c74254b964712966b7d2ecfb64bf4",
    "nonce": "944ea8e723d44f74af1e61d6d28239ed"
  }
}
2018-07-25 16:08:03.930 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2018-07-25 16:08:03.935 +01:00 [DBG] Consent found in consent store is same as current request, consent is not required
2018-07-25 16:08:03.936 +01:00 [DBG] Creating Implicit Flow response.
2018-07-25 16:08:03.936 +01:00 [DBG] Getting claims for access token for client: spa
2018-07-25 16:08:03.936 +01:00 [DBG] Getting claims for access token for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 16:08:03.936 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["email"] via ClaimsProviderAccessToken
2018-07-25 16:08:03.936 +01:00 [DBG] Issued claims: []
2018-07-25 16:08:03.938 +01:00 [DBG] Getting claims for identity token for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 and client: spa
2018-07-25 16:08:03.938 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-07-25 16:08:03.940 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "Endpoint": "Authorize",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "Scopes": "openid profile api1 techdevs-accounts-api",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****ONiQ"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****Btdg"
    }
  ],
  "ActivityId": "0HLFI7UOHHKP8:00000002",
  "TimeStamp": "2018-07-25T15:08:03Z",
  "ProcessId": 18644,
  "LocalIpAddress": "127.0.0.1:5559",
  "RemoteIpAddress": "::1"
}
2018-07-25 16:08:03.940 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ClientId": "spa",
  "RedirectUri": "http://localhost:5003/callback.html",
  "State": "895c74254b964712966b7d2ecfb64bf4",
  "Scope": "openid profile api1 techdevs-accounts-api"
}
2018-07-25 16:08:04.089 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 16:08:04.089 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 16:08:04.089 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 16:08:04.089 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 16:08:04.089 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 16:08:04.089 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 16:08:04.089 +01:00 [DBG] Start discovery request
2018-07-25 16:08:04.136 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:5003
2018-07-25 16:08:04.136 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 16:08:04.136 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 16:08:04.136 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-07-25 16:08:04.136 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-07-25 16:08:04.136 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-07-25 16:08:04.136 +01:00 [DBG] Start key discovery request
2018-07-25 16:08:04.229 +01:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:5003
2018-07-25 16:08:04.229 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 16:08:04.229 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 16:08:04.229 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-07-25 16:08:04.229 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-07-25 16:08:04.229 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-07-25 16:08:04.229 +01:00 [DBG] Start userinfo request
2018-07-25 16:08:04.229 +01:00 [DBG] Bearer token found in header
2018-07-25 16:08:04.229 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:08:04.230 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:08:04.230 +01:00 [DBG] IsActive called from: AccessTokenValidation
2018-07-25 16:08:04.230 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 16:08:04.230 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1532531283,
    "exp": 1532534883,
    "iss": "http://localhost:5000",
    "aud": [
      "http://localhost:5000/resources",
      "api1",
      "techdevs-accounts-api"
    ],
    "client_id": "spa",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532531097,
    "idp": "Google",
    "scope": [
      "openid",
      "profile",
      "api1",
      "techdevs-accounts-api"
    ],
    "amr": "external"
  }
}
2018-07-25 16:08:04.230 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2018-07-25 16:08:04.230 +01:00 [DBG] Creating userinfo response
2018-07-25 16:08:04.230 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 16:08:04.230 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 16:08:04.230 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-07-25 16:08:04.230 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 16:08:04.230 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2018-07-25 16:08:04.230 +01:00 [DBG] Issued claims: ["sub"]
2018-07-25 16:08:04.231 +01:00 [INF] Profile service returned to the following claim types: sub
2018-07-25 16:08:04.231 +01:00 [DBG] End userinfo request
2018-07-25 16:08:04.255 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:08:04.255 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:08:04.255 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 16:08:04.256 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 16:08:04.256 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 16:08:04.256 +01:00 [DBG] Rendering check session result
2018-07-25 16:08:04.414 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 16:08:04.414 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 16:08:04.414 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 16:08:04.414 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 16:08:04.414 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 16:08:04.414 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 16:08:04.414 +01:00 [DBG] Start discovery request
2018-07-25 16:08:04.501 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:08:04.502 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:08:04.502 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 16:08:04.502 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 16:08:04.502 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 16:08:04.502 +01:00 [DBG] Rendering check session result
2018-07-25 16:08:07.618 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:08:07.618 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:08:07.618 +01:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2018-07-25 16:08:07.618 +01:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2018-07-25 16:08:07.618 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2018-07-25 16:08:07.618 +01:00 [DBG] Processing signout request for 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 16:08:07.618 +01:00 [DBG] Start end session request validation
2018-07-25 16:08:07.629 +01:00 [DBG] Start identity token validation
2018-07-25 16:08:07.631 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:08:07.631 +01:00 [DBG] Client found: spa / SPA Client
2018-07-25 16:08:07.633 +01:00 [DBG] IsActive called from: IdentityTokenValidation
2018-07-25 16:08:07.633 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 16:08:07.633 +01:00 [DBG] Token validation success
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "ValidateLifetime": false,
  "Claims": {
    "nbf": 1532531283,
    "exp": 1532531583,
    "iss": "http://localhost:5000",
    "aud": "spa",
    "nonce": "944ea8e723d44f74af1e61d6d28239ed",
    "iat": 1532531283,
    "at_hash": "Bgo79PfdSzU2tvBGQxfIBg",
    "sid": "5cfffb7007db2466b31ba3e81f76dade",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532531097,
    "idp": "Google",
    "amr": "external"
  }
}
2018-07-25 16:08:07.635 +01:00 [INF] End session request validation success
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "PostLogOutUri": "http://localhost:5003/index.html",
  "Raw": {
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjUxZTMyMGM2ODUzZjVmZmY4MDA2YTEwODE3Y2JiMTNiIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1MzI1MzEyODMsImV4cCI6MTUzMjUzMTU4MywiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiI5NDRlYThlNzIzZDQ0Zjc0YWYxZTYxZDZkMjgyMzllZCIsImlhdCI6MTUzMjUzMTI4MywiYXRfaGFzaCI6IkJnbzc5UGZkU3pVMnR2QkdReGZJQmciLCJzaWQiOiI1Y2ZmZmI3MDA3ZGIyNDY2YjMxYmEzZTgxZjc2ZGFkZSIsInN1YiI6IjVlNWMwMmE2LTJhZjEtNDdkMy1iOWRiLWE2YjE2MGQ4Y2E1OSIsImF1dGhfdGltZSI6MTUzMjUzMTA5NywiaWRwIjoiR29vZ2xlIiwiYW1yIjpbImV4dGVybmFsIl19.HwV7_y0PvEB8s0zaoUwV4YlQR38rnK5uLSI_f0FggvF_RRlYRcsXAFm12clgvflSkE5BVtY8Pnikt_cm4j2B1_cORmDKUnz9W3T1-3SIB3It0p5tjxR4g7OZg0spxLqudcbkv1k1pMaijpdZuuFT9h-aHmZ_YZGwQU_hc6_3ULRHyjIeBWsSyuGrifAyX7KUZP_ZJGsqM2_Y3SKEVUgcOULgYMuVnmbVP9lm-ZixAy2BUoMt4snmA2MrrITv0cEQPQn6T41u2g73BvPkvHVQO8LqcFGMi-u69MZeyhEki116qocNiGNpzJ6wHIKcT6JkrCeO_TvUysWW2aH8YqONiQ",
    "post_logout_redirect_uri": "http://localhost:5003/index.html"
  }
}
2018-07-25 16:08:07.635 +01:00 [DBG] Success validating end session request from spa
2018-07-25 16:08:07.651 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:08:07.651 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:08:07.662 +01:00 [INF] AuthenticationScheme: idsrv signed out.
2018-07-25 16:08:07.668 +01:00 [INF] {
  "Name": "User Logout Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1002,
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "DisplayName": "Steve Kent",
  "ActivityId": "0HLFI7UOHHKP8:0000000B",
  "TimeStamp": "2018-07-25T15:08:07Z",
  "ProcessId": 18644,
  "LocalIpAddress": "127.0.0.1:5559",
  "RemoteIpAddress": "::1"
}
2018-07-25 16:08:07.719 +01:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2018-07-25 16:08:07.719 +01:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2018-07-25 16:08:07.719 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2018-07-25 16:08:07.719 +01:00 [DBG] Processing signout callback request
2018-07-25 16:08:07.720 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:08:07.720 +01:00 [DBG] No client front-channel logout URLs
2018-07-25 16:08:07.720 +01:00 [DBG] No client back-channel logout URLs
2018-07-25 16:08:07.720 +01:00 [INF] Successful signout callback.
2018-07-25 16:08:07.720 +01:00 [DBG] No client front-channel iframe urls
2018-07-25 16:08:07.720 +01:00 [DBG] No client back-channel iframe urls
2018-07-25 16:08:09.948 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 16:08:09.948 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 16:08:09.948 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 16:08:09.948 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 16:08:09.948 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 16:08:09.948 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 16:08:09.948 +01:00 [DBG] Start discovery request
2018-07-25 16:08:09.966 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-07-25 16:08:09.966 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-07-25 16:08:09.966 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-07-25 16:08:09.966 +01:00 [DBG] Start authorize request
2018-07-25 16:08:09.966 +01:00 [DBG] No user present in authorize request
2018-07-25 16:08:09.966 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 16:08:09.966 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:08:09.967 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 16:08:09.967 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1 techdevs-accounts-api",
  "State": "20aeaa458f7644269c3ac6ddbb615ec6",
  "Nonce": "f535467eab9140eaa0c0b81eae34f9ff",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1 techdevs-accounts-api",
    "state": "20aeaa458f7644269c3ac6ddbb615ec6",
    "nonce": "f535467eab9140eaa0c0b81eae34f9ff"
  }
}
2018-07-25 16:08:09.967 +01:00 [INF] Showing login: User is not authenticated
2018-07-25 16:08:09.986 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 16:08:09.986 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:08:09.986 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 16:08:09.986 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:08:11.119 +01:00 [INF] AuthenticationScheme: Google was challenged.
2018-07-25 16:08:15.176 +01:00 [INF] AuthenticationScheme: idsrv.external signed in.
2018-07-25 16:08:15.183 +01:00 [INF] AuthenticationScheme: idsrv.external was successfully authenticated.
2018-07-25 16:08:56.397 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Provider": "Google",
  "ProviderUserId": "107387075381855787656",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "DisplayName": "steve@techdevs.net",
  "Endpoint": "UI",
  "ActivityId": "0HLFI7UOHHKP8:00000012",
  "TimeStamp": "2018-07-25T15:08:56Z",
  "ProcessId": 18644,
  "LocalIpAddress": "127.0.0.1:5559",
  "RemoteIpAddress": "::1"
}
2018-07-25 16:08:56.397 +01:00 [DBG] Augmenting SignInContext
2018-07-25 16:08:56.397 +01:00 [DBG] Adding amr claim with value: external
2018-07-25 16:08:56.397 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2018-07-25 16:08:56.397 +01:00 [INF] AuthenticationScheme: idsrv.external signed out.
2018-07-25 16:08:56.397 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 16:08:56.398 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:08:56.398 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 16:08:56.398 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:08:56.430 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:08:56.431 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:08:56.431 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2018-07-25 16:08:56.431 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2018-07-25 16:08:56.431 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2018-07-25 16:08:56.431 +01:00 [DBG] Start authorize callback request
2018-07-25 16:08:56.431 +01:00 [DBG] User in authorize request: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 16:08:56.431 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 16:08:56.432 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:08:56.432 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 16:08:56.432 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1 techdevs-accounts-api",
  "State": "20aeaa458f7644269c3ac6ddbb615ec6",
  "Nonce": "f535467eab9140eaa0c0b81eae34f9ff",
  "SessionId": "d6183140a60967a3dfb4f8266ea25422",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1 techdevs-accounts-api",
    "state": "20aeaa458f7644269c3ac6ddbb615ec6",
    "nonce": "f535467eab9140eaa0c0b81eae34f9ff"
  }
}
2018-07-25 16:08:56.432 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2018-07-25 16:08:56.438 +01:00 [DBG] Consent found in consent store is same as current request, consent is not required
2018-07-25 16:08:56.438 +01:00 [DBG] Creating Implicit Flow response.
2018-07-25 16:08:56.438 +01:00 [DBG] Getting claims for access token for client: spa
2018-07-25 16:08:56.438 +01:00 [DBG] Getting claims for access token for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 16:08:56.438 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["email"] via ClaimsProviderAccessToken
2018-07-25 16:08:56.438 +01:00 [DBG] Issued claims: []
2018-07-25 16:08:56.441 +01:00 [DBG] Getting claims for identity token for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 and client: spa
2018-07-25 16:08:56.441 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-07-25 16:08:56.443 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "Endpoint": "Authorize",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "Scopes": "openid profile api1 techdevs-accounts-api",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****nsvg"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****IdSA"
    }
  ],
  "ActivityId": "0HLFI7UOHHKP8:00000013",
  "TimeStamp": "2018-07-25T15:08:56Z",
  "ProcessId": 18644,
  "LocalIpAddress": "127.0.0.1:5559",
  "RemoteIpAddress": "::1"
}
2018-07-25 16:08:56.443 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ClientId": "spa",
  "RedirectUri": "http://localhost:5003/callback.html",
  "State": "20aeaa458f7644269c3ac6ddbb615ec6",
  "Scope": "openid profile api1 techdevs-accounts-api"
}
2018-07-25 16:08:56.443 +01:00 [DBG] Augmenting SignInContext
2018-07-25 16:08:56.444 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2018-07-25 16:08:56.667 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 16:08:56.668 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 16:08:56.668 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 16:08:56.668 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 16:08:56.668 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 16:08:56.668 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 16:08:56.668 +01:00 [DBG] Start discovery request
2018-07-25 16:08:56.721 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:5003
2018-07-25 16:08:56.721 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 16:08:56.721 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 16:08:56.721 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-07-25 16:08:56.721 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-07-25 16:08:56.721 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-07-25 16:08:56.721 +01:00 [DBG] Start key discovery request
2018-07-25 16:08:56.838 +01:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:5003
2018-07-25 16:08:56.838 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 16:08:56.838 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 16:08:56.838 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-07-25 16:08:56.838 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-07-25 16:08:56.839 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-07-25 16:08:56.839 +01:00 [DBG] Start userinfo request
2018-07-25 16:08:56.839 +01:00 [DBG] Bearer token found in header
2018-07-25 16:08:56.839 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:08:56.839 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:08:56.839 +01:00 [DBG] IsActive called from: AccessTokenValidation
2018-07-25 16:08:56.840 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 16:08:56.840 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1532531336,
    "exp": 1532534936,
    "iss": "http://localhost:5000",
    "aud": [
      "http://localhost:5000/resources",
      "api1",
      "techdevs-accounts-api"
    ],
    "client_id": "spa",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532531336,
    "idp": "Google",
    "scope": [
      "openid",
      "profile",
      "api1",
      "techdevs-accounts-api"
    ],
    "amr": "external"
  }
}
2018-07-25 16:08:56.840 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2018-07-25 16:08:56.840 +01:00 [DBG] Creating userinfo response
2018-07-25 16:08:56.840 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 16:08:56.840 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 16:08:56.840 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-07-25 16:08:56.840 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 16:08:56.840 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2018-07-25 16:08:56.840 +01:00 [DBG] Issued claims: ["sub"]
2018-07-25 16:08:56.840 +01:00 [INF] Profile service returned to the following claim types: sub
2018-07-25 16:08:56.840 +01:00 [DBG] End userinfo request
2018-07-25 16:08:56.870 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:08:56.870 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:08:56.870 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 16:08:56.870 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 16:08:56.870 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 16:08:56.871 +01:00 [DBG] Rendering check session result
2018-07-25 16:08:57.104 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 16:08:57.104 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 16:08:57.104 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 16:08:57.104 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 16:08:57.104 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 16:08:57.104 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 16:08:57.104 +01:00 [DBG] Start discovery request
2018-07-25 16:08:57.153 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:08:57.153 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:08:57.153 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 16:08:57.154 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 16:08:57.154 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 16:08:57.154 +01:00 [DBG] Rendering check session result
2018-07-25 16:09:01.613 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:09:01.613 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:09:01.613 +01:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2018-07-25 16:09:01.613 +01:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2018-07-25 16:09:01.614 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2018-07-25 16:09:01.614 +01:00 [DBG] Processing signout request for 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 16:09:01.614 +01:00 [DBG] Start end session request validation
2018-07-25 16:09:01.614 +01:00 [DBG] Start identity token validation
2018-07-25 16:09:01.614 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:09:01.614 +01:00 [DBG] Client found: spa / SPA Client
2018-07-25 16:09:01.615 +01:00 [DBG] IsActive called from: IdentityTokenValidation
2018-07-25 16:09:01.615 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 16:09:01.615 +01:00 [DBG] Token validation success
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "ValidateLifetime": false,
  "Claims": {
    "nbf": 1532531336,
    "exp": 1532531636,
    "iss": "http://localhost:5000",
    "aud": "spa",
    "nonce": "f535467eab9140eaa0c0b81eae34f9ff",
    "iat": 1532531336,
    "at_hash": "oXk0IE9LT2dpgVwgPtP0mw",
    "sid": "d6183140a60967a3dfb4f8266ea25422",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532531336,
    "idp": "Google",
    "amr": "external"
  }
}
2018-07-25 16:09:01.615 +01:00 [INF] End session request validation success
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "PostLogOutUri": "http://localhost:5003/index.html",
  "Raw": {
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjUxZTMyMGM2ODUzZjVmZmY4MDA2YTEwODE3Y2JiMTNiIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1MzI1MzEzMzYsImV4cCI6MTUzMjUzMTYzNiwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiJmNTM1NDY3ZWFiOTE0MGVhYTBjMGI4MWVhZTM0ZjlmZiIsImlhdCI6MTUzMjUzMTMzNiwiYXRfaGFzaCI6Im9YazBJRTlMVDJkcGdWd2dQdFAwbXciLCJzaWQiOiJkNjE4MzE0MGE2MDk2N2EzZGZiNGY4MjY2ZWEyNTQyMiIsInN1YiI6IjVlNWMwMmE2LTJhZjEtNDdkMy1iOWRiLWE2YjE2MGQ4Y2E1OSIsImF1dGhfdGltZSI6MTUzMjUzMTMzNiwiaWRwIjoiR29vZ2xlIiwiYW1yIjpbImV4dGVybmFsIl19.kmmiXjV2FrRVsEu48ifIZZusdYx-U672G1rgwy7iYKC2SytjWROl5obJjiORqqQUC_WgYqb2MduBaaj6mC3U8kQd5UD9CjYVqhUnTqtIc-61XAMV8tT3jZ2o7Y7zNvsPE1CNIOwW8jiX59vpAw6dW19t_sFuHF6qokc2TGtdl-XZkQZ96l7f0u9XpqKA_BhPYcBQ1jJ6S_XEETjHUKeJMfy2bdmViRQN-4cZg8GplfpjyxP84TbpXtBnHZaVjqAMsWX7ftc5LwcyChPN8TPSJ6vc1c1HTeuv7RKE1UcMproHpEUyBXVNYmnHXEObWCkXODvT2AVFNQMzdoUTJ6nsvg",
    "post_logout_redirect_uri": "http://localhost:5003/index.html"
  }
}
2018-07-25 16:09:01.615 +01:00 [DBG] Success validating end session request from spa
2018-07-25 16:09:01.624 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:09:01.624 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:09:01.625 +01:00 [INF] AuthenticationScheme: idsrv signed out.
2018-07-25 16:09:01.625 +01:00 [INF] {
  "Name": "User Logout Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1002,
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "DisplayName": "Steve Kent",
  "ActivityId": "0HLFI7UOHHKP8:0000001C",
  "TimeStamp": "2018-07-25T15:09:01Z",
  "ProcessId": 18644,
  "LocalIpAddress": "127.0.0.1:5559",
  "RemoteIpAddress": "::1"
}
2018-07-25 16:09:01.679 +01:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2018-07-25 16:09:01.679 +01:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2018-07-25 16:09:01.679 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2018-07-25 16:09:01.679 +01:00 [DBG] Processing signout callback request
2018-07-25 16:09:01.679 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:09:01.679 +01:00 [DBG] No client front-channel logout URLs
2018-07-25 16:09:01.679 +01:00 [DBG] No client back-channel logout URLs
2018-07-25 16:09:01.679 +01:00 [INF] Successful signout callback.
2018-07-25 16:09:01.679 +01:00 [DBG] No client front-channel iframe urls
2018-07-25 16:09:01.679 +01:00 [DBG] No client back-channel iframe urls
2018-07-25 16:09:04.524 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 16:09:04.525 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 16:09:04.525 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 16:09:04.525 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 16:09:04.525 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 16:09:04.525 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 16:09:04.525 +01:00 [DBG] Start discovery request
2018-07-25 16:09:04.538 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-07-25 16:09:04.539 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-07-25 16:09:04.539 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-07-25 16:09:04.539 +01:00 [DBG] Start authorize request
2018-07-25 16:09:04.539 +01:00 [DBG] No user present in authorize request
2018-07-25 16:09:04.539 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 16:09:04.539 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:09:04.539 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 16:09:04.539 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1 techdevs-accounts-api",
  "State": "ad3f0df0bd3d408189d3f0ceca3cc6c7",
  "Nonce": "51f31a0b152d4bf184c7600a123bf978",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1 techdevs-accounts-api",
    "state": "ad3f0df0bd3d408189d3f0ceca3cc6c7",
    "nonce": "51f31a0b152d4bf184c7600a123bf978"
  }
}
2018-07-25 16:09:04.539 +01:00 [INF] Showing login: User is not authenticated
2018-07-25 16:09:04.547 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 16:09:04.547 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:09:04.547 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 16:09:04.547 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:09:05.379 +01:00 [INF] AuthenticationScheme: Google was challenged.
2018-07-25 16:09:08.156 +01:00 [INF] AuthenticationScheme: idsrv.external signed in.
2018-07-25 16:09:08.164 +01:00 [INF] AuthenticationScheme: idsrv.external was successfully authenticated.
2018-07-25 16:09:52.057 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Provider": "Google",
  "ProviderUserId": "107387075381855787656",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "DisplayName": "steve@techdevs.net",
  "Endpoint": "UI",
  "ActivityId": "0HLFI7UOHHKP8:00000023",
  "TimeStamp": "2018-07-25T15:09:52Z",
  "ProcessId": 18644,
  "LocalIpAddress": "127.0.0.1:5559",
  "RemoteIpAddress": "::1"
}
2018-07-25 16:10:16.575 +01:00 [DBG] Augmenting SignInContext
2018-07-25 16:10:16.575 +01:00 [DBG] Adding amr claim with value: external
2018-07-25 16:10:16.575 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2018-07-25 16:10:21.157 +01:00 [INF] AuthenticationScheme: idsrv.external signed out.
2018-07-25 16:10:25.626 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 16:10:25.628 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:10:25.629 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 16:10:31.672 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:10:45.097 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:10:45.098 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:10:45.098 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2018-07-25 16:10:45.098 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2018-07-25 16:10:45.098 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2018-07-25 16:10:45.098 +01:00 [DBG] Start authorize callback request
2018-07-25 16:10:45.098 +01:00 [DBG] User in authorize request: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 16:10:45.098 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 16:10:45.098 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:10:45.098 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 16:10:45.098 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1 techdevs-accounts-api",
  "State": "ad3f0df0bd3d408189d3f0ceca3cc6c7",
  "Nonce": "51f31a0b152d4bf184c7600a123bf978",
  "SessionId": "fdbf4fe2e04fea6f71748d956821103c",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1 techdevs-accounts-api",
    "state": "ad3f0df0bd3d408189d3f0ceca3cc6c7",
    "nonce": "51f31a0b152d4bf184c7600a123bf978"
  }
}
2018-07-25 16:10:45.099 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2018-07-25 16:10:45.105 +01:00 [DBG] Consent found in consent store is same as current request, consent is not required
2018-07-25 16:10:45.105 +01:00 [DBG] Creating Implicit Flow response.
2018-07-25 16:10:45.105 +01:00 [DBG] Getting claims for access token for client: spa
2018-07-25 16:10:45.105 +01:00 [DBG] Getting claims for access token for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 16:10:45.105 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["email"] via ClaimsProviderAccessToken
2018-07-25 16:10:45.105 +01:00 [DBG] Issued claims: []
2018-07-25 16:10:45.108 +01:00 [DBG] Getting claims for identity token for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 and client: spa
2018-07-25 16:10:45.108 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-07-25 16:10:45.110 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "Endpoint": "Authorize",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "Scopes": "openid profile api1 techdevs-accounts-api",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****uG4A"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****klTA"
    }
  ],
  "ActivityId": "0HLFI7UOHHKP8:00000024",
  "TimeStamp": "2018-07-25T15:10:45Z",
  "ProcessId": 18644,
  "LocalIpAddress": "127.0.0.1:5559",
  "RemoteIpAddress": "::1"
}
2018-07-25 16:10:45.110 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ClientId": "spa",
  "RedirectUri": "http://localhost:5003/callback.html",
  "State": "ad3f0df0bd3d408189d3f0ceca3cc6c7",
  "Scope": "openid profile api1 techdevs-accounts-api"
}
2018-07-25 16:10:45.110 +01:00 [DBG] Augmenting SignInContext
2018-07-25 16:10:45.110 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2018-07-25 16:10:45.309 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 16:10:45.309 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 16:10:45.309 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 16:10:45.309 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 16:10:45.309 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 16:10:45.309 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 16:10:45.309 +01:00 [DBG] Start discovery request
2018-07-25 16:10:45.359 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:5003
2018-07-25 16:10:45.359 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 16:10:45.359 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 16:10:45.359 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-07-25 16:10:45.359 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-07-25 16:10:45.359 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-07-25 16:10:45.359 +01:00 [DBG] Start key discovery request
2018-07-25 16:10:45.474 +01:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:5003
2018-07-25 16:10:45.474 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 16:10:45.474 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 16:10:45.474 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-07-25 16:10:45.474 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-07-25 16:10:45.474 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-07-25 16:10:45.474 +01:00 [DBG] Start userinfo request
2018-07-25 16:10:45.474 +01:00 [DBG] Bearer token found in header
2018-07-25 16:10:45.475 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:10:45.475 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:10:45.475 +01:00 [DBG] IsActive called from: AccessTokenValidation
2018-07-25 16:10:45.475 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 16:10:45.475 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1532531445,
    "exp": 1532535045,
    "iss": "http://localhost:5000",
    "aud": [
      "http://localhost:5000/resources",
      "api1",
      "techdevs-accounts-api"
    ],
    "client_id": "spa",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532531416,
    "idp": "Google",
    "scope": [
      "openid",
      "profile",
      "api1",
      "techdevs-accounts-api"
    ],
    "amr": "external"
  }
}
2018-07-25 16:10:45.476 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2018-07-25 16:10:45.476 +01:00 [DBG] Creating userinfo response
2018-07-25 16:10:45.476 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 16:10:45.476 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 16:10:45.476 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-07-25 16:10:45.476 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 16:10:45.476 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2018-07-25 16:10:45.476 +01:00 [DBG] Issued claims: ["sub"]
2018-07-25 16:10:45.476 +01:00 [INF] Profile service returned to the following claim types: sub
2018-07-25 16:10:45.476 +01:00 [DBG] End userinfo request
2018-07-25 16:10:45.499 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:10:45.499 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:10:45.500 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 16:10:45.500 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 16:10:45.500 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 16:10:45.500 +01:00 [DBG] Rendering check session result
2018-07-25 16:10:45.707 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 16:10:45.707 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 16:10:45.707 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 16:10:45.707 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 16:10:45.707 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 16:10:45.707 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 16:10:45.707 +01:00 [DBG] Start discovery request
2018-07-25 16:10:45.738 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:10:45.738 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:10:45.738 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 16:10:45.738 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 16:10:45.738 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 16:10:45.738 +01:00 [DBG] Rendering check session result
2018-07-25 16:16:07.892 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-07-25 16:16:08.032 +01:00 [DBG] Using idsrv as default scheme for authentication
2018-07-25 16:16:08.037 +01:00 [DBG] Using idsrv as default scheme for sign-in
2018-07-25 16:16:08.039 +01:00 [DBG] Using idsrv as default scheme for sign-out
2018-07-25 16:16:08.039 +01:00 [DBG] Using idsrv as default scheme for challenge
2018-07-25 16:16:08.040 +01:00 [DBG] Using idsrv as default scheme for forbid
2018-07-25 16:16:09.393 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:16:09.420 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:16:21.890 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:16:21.890 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:16:21.890 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:16:21.890 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:16:21.890 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:16:21.890 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:16:21.890 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:16:21.890 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:16:21.890 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:16:21.891 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:16:21.893 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:16:21.893 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:17:10.008 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:17:10.008 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:17:10.014 +01:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2018-07-25 16:17:10.019 +01:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2018-07-25 16:17:10.020 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2018-07-25 16:17:10.041 +01:00 [DBG] Processing signout request for 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 16:17:10.046 +01:00 [DBG] Start end session request validation
2018-07-25 16:17:10.056 +01:00 [DBG] Start identity token validation
2018-07-25 16:17:10.132 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:17:10.132 +01:00 [DBG] Client found: spa / SPA Client
2018-07-25 16:17:10.234 +01:00 [DBG] IsActive called from: IdentityTokenValidation
2018-07-25 16:17:10.234 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 16:17:10.263 +01:00 [DBG] Token validation success
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "ValidateLifetime": false,
  "Claims": {
    "nbf": 1532531445,
    "exp": 1532531745,
    "iss": "http://localhost:5000",
    "aud": "spa",
    "nonce": "51f31a0b152d4bf184c7600a123bf978",
    "iat": 1532531445,
    "at_hash": "i1QBWZ_jV_TWynuPVuluUA",
    "sid": "fdbf4fe2e04fea6f71748d956821103c",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532531416,
    "idp": "Google",
    "amr": "external"
  }
}
2018-07-25 16:17:10.303 +01:00 [INF] End session request validation success
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "PostLogOutUri": "http://localhost:5003/index.html",
  "Raw": {
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjUxZTMyMGM2ODUzZjVmZmY4MDA2YTEwODE3Y2JiMTNiIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1MzI1MzE0NDUsImV4cCI6MTUzMjUzMTc0NSwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiI1MWYzMWEwYjE1MmQ0YmYxODRjNzYwMGExMjNiZjk3OCIsImlhdCI6MTUzMjUzMTQ0NSwiYXRfaGFzaCI6ImkxUUJXWl9qVl9UV3ludVBWdWx1VUEiLCJzaWQiOiJmZGJmNGZlMmUwNGZlYTZmNzE3NDhkOTU2ODIxMTAzYyIsInN1YiI6IjVlNWMwMmE2LTJhZjEtNDdkMy1iOWRiLWE2YjE2MGQ4Y2E1OSIsImF1dGhfdGltZSI6MTUzMjUzMTQxNiwiaWRwIjoiR29vZ2xlIiwiYW1yIjpbImV4dGVybmFsIl19.Xro7pkoHR7hFJjZYcCRoKiZ2VFT2Y6btsvj4Xz9nQuOR_T629uIpxayqucmtfKulW0SgVbf4cy9xm2jm3bojodt0swHClwam91wDHRwZaWP_xyzpF92AWuEcWJKyBnDau8wJUbvmLuTUwoSbi9J9WRNh7m1g0y58PruytxeMFGFrSZ2QatSupJnb-0oXEVhj2LOdjpl899UWA4lALnfHNyPvaGX9vtrLYHLQPXOk9SRolxFURDeCi82qFiykuwzaTlQAokMgPWVBXpGsehQ2k76igKP-h4-x1HOAZ4NaGXSCps8R790a3CMTMs0G7QixRf-Bv3gMaX-e4a28GwuG4A",
    "post_logout_redirect_uri": "http://localhost:5003/index.html"
  }
}
2018-07-25 16:17:10.303 +01:00 [DBG] Success validating end session request from spa
2018-07-25 16:17:10.344 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:17:10.344 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:17:11.090 +01:00 [INF] AuthenticationScheme: idsrv signed out.
2018-07-25 16:17:11.130 +01:00 [INF] {
  "Name": "User Logout Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1002,
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "DisplayName": "Steve Kent",
  "ActivityId": "0HLFI86692G3D:00000002",
  "TimeStamp": "2018-07-25T15:17:11Z",
  "ProcessId": 21720,
  "LocalIpAddress": "127.0.0.1:19352",
  "RemoteIpAddress": "::1"
}
2018-07-25 16:17:12.034 +01:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2018-07-25 16:17:12.037 +01:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2018-07-25 16:17:12.037 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2018-07-25 16:17:12.044 +01:00 [DBG] Processing signout callback request
2018-07-25 16:17:12.060 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:17:12.060 +01:00 [DBG] No client front-channel logout URLs
2018-07-25 16:17:12.061 +01:00 [DBG] No client back-channel logout URLs
2018-07-25 16:17:12.061 +01:00 [INF] Successful signout callback.
2018-07-25 16:17:12.061 +01:00 [DBG] No client front-channel iframe urls
2018-07-25 16:17:12.061 +01:00 [DBG] No client back-channel iframe urls
2018-07-25 16:17:14.499 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 16:17:14.508 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 16:17:14.508 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 16:17:14.509 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 16:17:14.512 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 16:17:14.512 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 16:17:14.517 +01:00 [DBG] Start discovery request
2018-07-25 16:17:14.582 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-07-25 16:17:14.585 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-07-25 16:17:14.586 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-07-25 16:17:14.591 +01:00 [DBG] Start authorize request
2018-07-25 16:17:14.598 +01:00 [DBG] No user present in authorize request
2018-07-25 16:17:14.604 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 16:17:14.610 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:17:14.659 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 16:17:14.670 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1 techdevs-accounts-api",
  "State": "a8c4b48b6c8d48c3982e5c5d4f2ff6c4",
  "Nonce": "c43a44ade1ca444a82b644b064e4ff73",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1 techdevs-accounts-api",
    "state": "a8c4b48b6c8d48c3982e5c5d4f2ff6c4",
    "nonce": "c43a44ade1ca444a82b644b064e4ff73"
  }
}
2018-07-25 16:17:14.682 +01:00 [INF] Showing login: User is not authenticated
2018-07-25 16:17:14.734 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 16:17:14.734 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:17:14.734 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 16:17:14.741 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:17:18.775 +01:00 [INF] AuthenticationScheme: Google was challenged.
2018-07-25 16:17:23.308 +01:00 [INF] AuthenticationScheme: idsrv.external signed in.
2018-07-25 16:17:23.323 +01:00 [INF] AuthenticationScheme: idsrv.external was successfully authenticated.
2018-07-25 16:17:43.047 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Provider": "Google",
  "ProviderUserId": "107387075381855787656",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "DisplayName": "steve@techdevs.net",
  "Endpoint": "UI",
  "ActivityId": "0HLFI86692G3D:00000003",
  "TimeStamp": "2018-07-25T15:17:43Z",
  "ProcessId": 21720,
  "LocalIpAddress": "127.0.0.1:19352",
  "RemoteIpAddress": "::1"
}
2018-07-25 16:17:43.061 +01:00 [DBG] Augmenting SignInContext
2018-07-25 16:17:43.063 +01:00 [DBG] Adding amr claim with value: external
2018-07-25 16:17:43.069 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2018-07-25 16:17:43.070 +01:00 [INF] AuthenticationScheme: idsrv.external signed out.
2018-07-25 16:17:43.070 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 16:17:43.070 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:17:43.070 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 16:17:43.073 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:17:43.090 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:17:43.090 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:17:43.090 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2018-07-25 16:17:43.091 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2018-07-25 16:17:43.091 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2018-07-25 16:17:43.099 +01:00 [DBG] Start authorize callback request
2018-07-25 16:17:43.107 +01:00 [DBG] User in authorize request: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 16:17:43.107 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 16:17:43.107 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:17:43.107 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 16:17:43.108 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1 techdevs-accounts-api",
  "State": "a8c4b48b6c8d48c3982e5c5d4f2ff6c4",
  "Nonce": "c43a44ade1ca444a82b644b064e4ff73",
  "SessionId": "13ce5cd687bc0cf401403da6adccb727",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1 techdevs-accounts-api",
    "state": "a8c4b48b6c8d48c3982e5c5d4f2ff6c4",
    "nonce": "c43a44ade1ca444a82b644b064e4ff73"
  }
}
2018-07-25 16:17:43.108 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2018-07-25 16:17:43.129 +01:00 [DBG] user_consent grant with value: spa|5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 not found in store.
2018-07-25 16:17:43.129 +01:00 [DBG] Found no prior consent from consent store, consent is required
2018-07-25 16:17:43.129 +01:00 [INF] Showing consent: User has not yet consented
2018-07-25 16:17:43.138 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:17:43.138 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:17:43.179 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 16:17:43.180 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:17:43.180 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 16:17:43.180 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:17:44.645 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:17:44.645 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:17:44.647 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:17:44.647 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:17:44.668 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:17:44.669 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:17:44.681 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:17:44.681 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:17:44.689 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:17:44.689 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:17:44.738 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:17:44.739 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:17:44.764 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:17:44.764 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:17:48.089 +01:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2018-07-25 16:17:48.090 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:17:48.090 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:17:48.218 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 16:17:48.218 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:17:48.219 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 16:17:48.231 +01:00 [INF] {
  "Name": "Consent granted",
  "Category": "Grants",
  "EventType": "Information",
  "Id": 4000,
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ClientId": "spa",
  "RequestedScopes": [
    "openid",
    "profile",
    "api1",
    "techdevs-accounts-api"
  ],
  "GrantedScopes": [
    "openid",
    "profile",
    "api1",
    "techdevs-accounts-api"
  ],
  "ConsentRemembered": true,
  "ActivityId": "0HLFI86692G3H:00000004",
  "TimeStamp": "2018-07-25T15:17:48Z",
  "ProcessId": 21720,
  "LocalIpAddress": "127.0.0.1:19352",
  "RemoteIpAddress": "::1"
}
2018-07-25 16:17:48.252 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:17:48.263 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:17:48.263 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:17:48.263 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2018-07-25 16:17:48.263 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2018-07-25 16:17:48.263 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2018-07-25 16:17:48.263 +01:00 [DBG] Start authorize callback request
2018-07-25 16:17:48.270 +01:00 [DBG] User in authorize request: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 16:17:48.270 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 16:17:48.270 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:17:48.270 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 16:17:48.270 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1 techdevs-accounts-api",
  "State": "a8c4b48b6c8d48c3982e5c5d4f2ff6c4",
  "Nonce": "c43a44ade1ca444a82b644b064e4ff73",
  "SessionId": "13ce5cd687bc0cf401403da6adccb727",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1 techdevs-accounts-api",
    "state": "a8c4b48b6c8d48c3982e5c5d4f2ff6c4",
    "nonce": "c43a44ade1ca444a82b644b064e4ff73"
  }
}
2018-07-25 16:17:48.270 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2018-07-25 16:17:48.271 +01:00 [DBG] user_consent grant with value: spa|5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 not found in store.
2018-07-25 16:17:48.271 +01:00 [DBG] Found no prior consent from consent store, consent is required
2018-07-25 16:17:48.283 +01:00 [INF] User consented to scopes: ["openid","profile","api1","techdevs-accounts-api"]
2018-07-25 16:17:48.296 +01:00 [DBG] User indicated to remember consent for scopes: ["openid","profile","api1","techdevs-accounts-api"]
2018-07-25 16:17:48.301 +01:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 16:17:48.320 +01:00 [DBG] Creating Implicit Flow response.
2018-07-25 16:17:48.331 +01:00 [DBG] Getting claims for access token for client: spa
2018-07-25 16:17:48.332 +01:00 [DBG] Getting claims for access token for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 16:17:48.340 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["email"] via ClaimsProviderAccessToken
2018-07-25 16:17:48.343 +01:00 [DBG] Issued claims: []
2018-07-25 16:17:48.391 +01:00 [DBG] Getting claims for identity token for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 and client: spa
2018-07-25 16:17:48.391 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-07-25 16:17:48.405 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "Endpoint": "Authorize",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "Scopes": "openid profile api1 techdevs-accounts-api",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****Kyng"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****Qghw"
    }
  ],
  "ActivityId": "0HLFI86692G3C:00000005",
  "TimeStamp": "2018-07-25T15:17:48Z",
  "ProcessId": 21720,
  "LocalIpAddress": "127.0.0.1:19352",
  "RemoteIpAddress": "::1"
}
2018-07-25 16:17:48.410 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ClientId": "spa",
  "RedirectUri": "http://localhost:5003/callback.html",
  "State": "a8c4b48b6c8d48c3982e5c5d4f2ff6c4",
  "Scope": "openid profile api1 techdevs-accounts-api"
}
2018-07-25 16:17:48.427 +01:00 [DBG] Augmenting SignInContext
2018-07-25 16:17:48.427 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2018-07-25 16:17:48.916 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 16:17:48.916 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 16:17:48.916 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 16:17:48.916 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 16:17:48.916 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 16:17:48.916 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 16:17:48.916 +01:00 [DBG] Start discovery request
2018-07-25 16:17:48.963 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:5003
2018-07-25 16:17:48.963 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 16:17:48.963 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 16:17:48.963 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-07-25 16:17:48.964 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-07-25 16:17:48.964 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-07-25 16:17:48.968 +01:00 [DBG] Start key discovery request
2018-07-25 16:17:49.057 +01:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:5003
2018-07-25 16:17:49.057 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 16:17:49.057 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 16:17:49.057 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-07-25 16:17:49.058 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-07-25 16:17:49.058 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-07-25 16:17:49.067 +01:00 [DBG] Start userinfo request
2018-07-25 16:17:49.071 +01:00 [DBG] Bearer token found in header
2018-07-25 16:17:49.087 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:17:49.088 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:17:49.088 +01:00 [DBG] IsActive called from: AccessTokenValidation
2018-07-25 16:17:49.089 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 16:17:49.089 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1532531868,
    "exp": 1532535468,
    "iss": "http://localhost:5000",
    "aud": [
      "http://localhost:5000/resources",
      "api1",
      "techdevs-accounts-api"
    ],
    "client_id": "spa",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532531863,
    "idp": "Google",
    "scope": [
      "openid",
      "profile",
      "api1",
      "techdevs-accounts-api"
    ],
    "amr": "external"
  }
}
2018-07-25 16:17:49.090 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2018-07-25 16:17:49.098 +01:00 [DBG] Creating userinfo response
2018-07-25 16:17:49.105 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 16:17:49.110 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 16:17:49.114 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-07-25 16:17:49.114 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 16:17:49.114 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2018-07-25 16:17:49.114 +01:00 [DBG] Issued claims: ["sub"]
2018-07-25 16:17:49.115 +01:00 [INF] Profile service returned to the following claim types: sub
2018-07-25 16:17:49.115 +01:00 [DBG] End userinfo request
2018-07-25 16:17:49.129 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:17:49.129 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:17:49.129 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 16:17:49.130 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 16:17:49.130 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 16:17:49.132 +01:00 [DBG] Rendering check session result
2018-07-25 16:17:49.303 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 16:17:49.303 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 16:17:49.303 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 16:17:49.303 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 16:17:49.303 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 16:17:49.303 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 16:17:49.303 +01:00 [DBG] Start discovery request
2018-07-25 16:17:49.346 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:17:49.346 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:17:49.347 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 16:17:49.347 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 16:17:49.347 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 16:17:49.347 +01:00 [DBG] Rendering check session result
2018-07-25 16:17:54.064 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-07-25 16:17:54.064 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-07-25 16:17:54.064 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-07-25 16:17:54.065 +01:00 [DBG] Start userinfo request
2018-07-25 16:17:54.065 +01:00 [DBG] Bearer token found in header
2018-07-25 16:17:54.065 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:17:54.065 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:17:54.065 +01:00 [DBG] IsActive called from: AccessTokenValidation
2018-07-25 16:17:54.066 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 16:17:54.066 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1532530484,
    "exp": 1532534084,
    "iss": "http://localhost:5000",
    "aud": [
      "http://localhost:5000/resources",
      "api1",
      "techdevs-accounts-api"
    ],
    "client_id": "spa",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532530484,
    "idp": "Google",
    "scope": [
      "openid",
      "profile",
      "api1",
      "techdevs-accounts-api"
    ],
    "amr": "external"
  }
}
2018-07-25 16:17:54.066 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2018-07-25 16:17:54.066 +01:00 [DBG] Creating userinfo response
2018-07-25 16:17:54.066 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 16:17:54.066 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 16:17:54.066 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-07-25 16:17:54.066 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 16:17:54.066 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2018-07-25 16:17:54.066 +01:00 [DBG] Issued claims: ["sub"]
2018-07-25 16:17:54.066 +01:00 [INF] Profile service returned to the following claim types: sub
2018-07-25 16:17:54.066 +01:00 [DBG] End userinfo request
2018-07-25 16:18:07.125 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-07-25 16:18:07.125 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-07-25 16:18:07.125 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-07-25 16:18:07.125 +01:00 [DBG] Start userinfo request
2018-07-25 16:18:07.125 +01:00 [DBG] Bearer token found in header
2018-07-25 16:18:07.126 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:18:07.126 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:18:07.126 +01:00 [DBG] IsActive called from: AccessTokenValidation
2018-07-25 16:18:07.126 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 16:18:07.126 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1532531868,
    "exp": 1532535468,
    "iss": "http://localhost:5000",
    "aud": [
      "http://localhost:5000/resources",
      "api1",
      "techdevs-accounts-api"
    ],
    "client_id": "spa",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532531863,
    "idp": "Google",
    "scope": [
      "openid",
      "profile",
      "api1",
      "techdevs-accounts-api"
    ],
    "amr": "external"
  }
}
2018-07-25 16:18:07.126 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2018-07-25 16:18:07.126 +01:00 [DBG] Creating userinfo response
2018-07-25 16:18:07.126 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 16:18:07.126 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 16:18:07.126 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-07-25 16:18:07.126 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 16:18:07.126 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2018-07-25 16:18:07.126 +01:00 [DBG] Issued claims: ["sub"]
2018-07-25 16:18:07.126 +01:00 [INF] Profile service returned to the following claim types: sub
2018-07-25 16:18:07.127 +01:00 [DBG] End userinfo request
2018-07-25 16:19:27.799 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-07-25 16:19:27.799 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-07-25 16:19:27.799 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-07-25 16:19:27.799 +01:00 [DBG] Start userinfo request
2018-07-25 16:19:27.799 +01:00 [DBG] Bearer token found in header
2018-07-25 16:19:27.799 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:19:27.799 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:19:27.800 +01:00 [DBG] IsActive called from: AccessTokenValidation
2018-07-25 16:19:27.800 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 16:19:27.800 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1532531868,
    "exp": 1532535468,
    "iss": "http://localhost:5000",
    "aud": [
      "http://localhost:5000/resources",
      "api1",
      "techdevs-accounts-api"
    ],
    "client_id": "spa",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532531863,
    "idp": "Google",
    "scope": [
      "openid",
      "profile",
      "api1",
      "techdevs-accounts-api"
    ],
    "amr": "external"
  }
}
2018-07-25 16:19:27.800 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2018-07-25 16:19:27.800 +01:00 [DBG] Creating userinfo response
2018-07-25 16:19:27.800 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 16:19:27.800 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 16:19:27.800 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-07-25 16:19:27.800 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 16:19:27.800 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2018-07-25 16:19:27.800 +01:00 [DBG] Issued claims: ["sub"]
2018-07-25 16:19:27.800 +01:00 [INF] Profile service returned to the following claim types: sub
2018-07-25 16:19:27.800 +01:00 [DBG] End userinfo request
2018-07-25 16:19:32.659 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 16:19:32.660 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 16:19:32.660 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 16:19:32.660 +01:00 [DBG] Start discovery request
2018-07-25 16:19:32.843 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-07-25 16:19:32.843 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-07-25 16:19:32.843 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-07-25 16:19:32.846 +01:00 [DBG] Start key discovery request
2018-07-25 16:20:12.779 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:20:12.779 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:20:12.779 +01:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2018-07-25 16:20:12.779 +01:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2018-07-25 16:20:12.780 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2018-07-25 16:20:12.780 +01:00 [DBG] Processing signout request for 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 16:20:12.780 +01:00 [DBG] Start end session request validation
2018-07-25 16:20:12.780 +01:00 [DBG] Start identity token validation
2018-07-25 16:20:12.780 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:20:12.780 +01:00 [DBG] Client found: spa / SPA Client
2018-07-25 16:20:12.785 +01:00 [DBG] IsActive called from: IdentityTokenValidation
2018-07-25 16:20:12.785 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 16:20:12.785 +01:00 [DBG] Token validation success
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "ValidateLifetime": false,
  "Claims": {
    "nbf": 1532531868,
    "exp": 1532532168,
    "iss": "http://localhost:5000",
    "aud": "spa",
    "nonce": "c43a44ade1ca444a82b644b064e4ff73",
    "iat": 1532531868,
    "at_hash": "eXGZi6ybU4RjYZfteE8AQA",
    "sid": "13ce5cd687bc0cf401403da6adccb727",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532531863,
    "idp": "Google",
    "amr": "external"
  }
}
2018-07-25 16:20:12.785 +01:00 [INF] End session request validation success
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "PostLogOutUri": "http://localhost:5003/index.html",
  "Raw": {
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjUxZTMyMGM2ODUzZjVmZmY4MDA2YTEwODE3Y2JiMTNiIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1MzI1MzE4NjgsImV4cCI6MTUzMjUzMjE2OCwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoic3BhIiwibm9uY2UiOiJjNDNhNDRhZGUxY2E0NDRhODJiNjQ0YjA2NGU0ZmY3MyIsImlhdCI6MTUzMjUzMTg2OCwiYXRfaGFzaCI6ImVYR1ppNnliVTRSallaZnRlRThBUUEiLCJzaWQiOiIxM2NlNWNkNjg3YmMwY2Y0MDE0MDNkYTZhZGNjYjcyNyIsInN1YiI6IjVlNWMwMmE2LTJhZjEtNDdkMy1iOWRiLWE2YjE2MGQ4Y2E1OSIsImF1dGhfdGltZSI6MTUzMjUzMTg2MywiaWRwIjoiR29vZ2xlIiwiYW1yIjpbImV4dGVybmFsIl19.Hb7DZG-YEDLBVc11U-0Or8yWqddqREGOpgQSLBIB29MWTSOxVAKky8orDeRFchERtetMO3ozidN0qTNVYIquiSF37EEqugF2o8sibd0INMVXmNIWfHAmMLzVb-lcnKsQJgplPaEYYYPvdVjvuPeluMn6uYiACG4r_m3unuPcaM4pW_5EniciyIneiQQPnCA5lNsT14ENCy3X7uP49kVAGUMcYN9UXJv85pbbYZvtciZSNy4jtEZmgytIm_6b68-eHn-WY6qYDQ6q3mvAOz8bKG6Zc6O0U8lWu9YSPWY-fAnnG2emej2KdGATERunH-LPa1RV4bpwZ-3-ci8HosKyng",
    "post_logout_redirect_uri": "http://localhost:5003/index.html"
  }
}
2018-07-25 16:20:12.785 +01:00 [DBG] Success validating end session request from spa
2018-07-25 16:20:12.795 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:20:12.795 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:20:12.798 +01:00 [INF] AuthenticationScheme: idsrv signed out.
2018-07-25 16:20:12.798 +01:00 [INF] {
  "Name": "User Logout Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1002,
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "DisplayName": "Steve Kent",
  "ActivityId": "0HLFI86692G3I:00000005",
  "TimeStamp": "2018-07-25T15:20:12Z",
  "ProcessId": 21720,
  "LocalIpAddress": "127.0.0.1:19352",
  "RemoteIpAddress": "::1"
}
2018-07-25 16:20:12.857 +01:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2018-07-25 16:20:12.858 +01:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2018-07-25 16:20:12.858 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2018-07-25 16:20:12.858 +01:00 [DBG] Processing signout callback request
2018-07-25 16:20:12.858 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:20:12.858 +01:00 [DBG] No client front-channel logout URLs
2018-07-25 16:20:12.858 +01:00 [DBG] No client back-channel logout URLs
2018-07-25 16:20:12.858 +01:00 [INF] Successful signout callback.
2018-07-25 16:20:12.858 +01:00 [DBG] No client front-channel iframe urls
2018-07-25 16:20:12.858 +01:00 [DBG] No client back-channel iframe urls
2018-07-25 16:20:15.005 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 16:20:15.005 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 16:20:15.005 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 16:20:15.005 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 16:20:15.005 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 16:20:15.005 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 16:20:15.005 +01:00 [DBG] Start discovery request
2018-07-25 16:20:15.020 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-07-25 16:20:15.020 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-07-25 16:20:15.020 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-07-25 16:20:15.020 +01:00 [DBG] Start authorize request
2018-07-25 16:20:15.020 +01:00 [DBG] No user present in authorize request
2018-07-25 16:20:15.020 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 16:20:15.021 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:20:15.021 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 16:20:15.021 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1 techdevs-accounts-api",
  "State": "eefdfa9052244193a8304dbb167f97f8",
  "Nonce": "8f27f757adc6486a8a98e1ed29e621d2",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1 techdevs-accounts-api",
    "state": "eefdfa9052244193a8304dbb167f97f8",
    "nonce": "8f27f757adc6486a8a98e1ed29e621d2"
  }
}
2018-07-25 16:20:15.021 +01:00 [INF] Showing login: User is not authenticated
2018-07-25 16:20:15.028 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 16:20:15.028 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:20:15.028 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 16:20:15.028 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:20:16.302 +01:00 [INF] AuthenticationScheme: Google was challenged.
2018-07-25 16:20:21.477 +01:00 [INF] AuthenticationScheme: idsrv.external signed in.
2018-07-25 16:20:21.490 +01:00 [INF] AuthenticationScheme: idsrv.external was successfully authenticated.
2018-07-25 16:20:21.691 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Provider": "Google",
  "ProviderUserId": "107387075381855787656",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "DisplayName": "steve@techdevs.net",
  "Endpoint": "UI",
  "ActivityId": "0HLFI86692G3I:0000000C",
  "TimeStamp": "2018-07-25T15:20:21Z",
  "ProcessId": 21720,
  "LocalIpAddress": "127.0.0.1:19352",
  "RemoteIpAddress": "::1"
}
2018-07-25 16:20:21.691 +01:00 [DBG] Augmenting SignInContext
2018-07-25 16:20:21.691 +01:00 [DBG] Adding amr claim with value: external
2018-07-25 16:20:21.691 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2018-07-25 16:20:21.691 +01:00 [INF] AuthenticationScheme: idsrv.external signed out.
2018-07-25 16:20:21.692 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 16:20:21.692 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:20:21.692 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 16:20:21.692 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:20:21.700 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:20:21.700 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:20:21.700 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2018-07-25 16:20:21.701 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2018-07-25 16:20:21.701 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2018-07-25 16:20:21.701 +01:00 [DBG] Start authorize callback request
2018-07-25 16:20:21.701 +01:00 [DBG] User in authorize request: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 16:20:21.701 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 16:20:21.701 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:20:21.701 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 16:20:21.701 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1 techdevs-accounts-api",
  "State": "eefdfa9052244193a8304dbb167f97f8",
  "Nonce": "8f27f757adc6486a8a98e1ed29e621d2",
  "SessionId": "516bf640ba8b5966dcbb67150100ce4f",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1 techdevs-accounts-api",
    "state": "eefdfa9052244193a8304dbb167f97f8",
    "nonce": "8f27f757adc6486a8a98e1ed29e621d2"
  }
}
2018-07-25 16:20:21.701 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2018-07-25 16:20:21.718 +01:00 [DBG] Consent found in consent store is same as current request, consent is not required
2018-07-25 16:20:21.718 +01:00 [DBG] Creating Implicit Flow response.
2018-07-25 16:20:21.718 +01:00 [DBG] Getting claims for access token for client: spa
2018-07-25 16:20:21.718 +01:00 [DBG] Getting claims for access token for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 16:20:21.718 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["email"] via ClaimsProviderAccessToken
2018-07-25 16:20:21.719 +01:00 [DBG] Issued claims: []
2018-07-25 16:20:21.721 +01:00 [DBG] Getting claims for identity token for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 and client: spa
2018-07-25 16:20:21.721 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-07-25 16:20:21.724 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "Endpoint": "Authorize",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "Scopes": "openid profile api1 techdevs-accounts-api",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****7IWw"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****riig"
    }
  ],
  "ActivityId": "0HLFI86692G3I:0000000D",
  "TimeStamp": "2018-07-25T15:20:21Z",
  "ProcessId": 21720,
  "LocalIpAddress": "127.0.0.1:19352",
  "RemoteIpAddress": "::1"
}
2018-07-25 16:20:21.724 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ClientId": "spa",
  "RedirectUri": "http://localhost:5003/callback.html",
  "State": "eefdfa9052244193a8304dbb167f97f8",
  "Scope": "openid profile api1 techdevs-accounts-api"
}
2018-07-25 16:20:21.724 +01:00 [DBG] Augmenting SignInContext
2018-07-25 16:20:21.724 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2018-07-25 16:20:21.902 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 16:20:21.902 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 16:20:21.902 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 16:20:21.902 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 16:20:21.902 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 16:20:21.902 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 16:20:21.902 +01:00 [DBG] Start discovery request
2018-07-25 16:20:21.948 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:5003
2018-07-25 16:20:21.948 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 16:20:21.948 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 16:20:21.948 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-07-25 16:20:21.948 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-07-25 16:20:21.948 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-07-25 16:20:21.948 +01:00 [DBG] Start key discovery request
2018-07-25 16:20:22.036 +01:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:5003
2018-07-25 16:20:22.036 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 16:20:22.037 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 16:20:22.037 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-07-25 16:20:22.037 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-07-25 16:20:22.037 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-07-25 16:20:22.037 +01:00 [DBG] Start userinfo request
2018-07-25 16:20:22.037 +01:00 [DBG] Bearer token found in header
2018-07-25 16:20:22.038 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:20:22.038 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:20:22.038 +01:00 [DBG] IsActive called from: AccessTokenValidation
2018-07-25 16:20:22.038 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 16:20:22.038 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1532532021,
    "exp": 1532535621,
    "iss": "http://localhost:5000",
    "aud": [
      "http://localhost:5000/resources",
      "api1",
      "techdevs-accounts-api"
    ],
    "client_id": "spa",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532532021,
    "idp": "Google",
    "scope": [
      "openid",
      "profile",
      "api1",
      "techdevs-accounts-api"
    ],
    "amr": "external"
  }
}
2018-07-25 16:20:22.038 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2018-07-25 16:20:22.038 +01:00 [DBG] Creating userinfo response
2018-07-25 16:20:22.038 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 16:20:22.038 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 16:20:22.038 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-07-25 16:20:22.038 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 16:20:22.038 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2018-07-25 16:20:22.039 +01:00 [DBG] Issued claims: ["sub"]
2018-07-25 16:20:22.039 +01:00 [INF] Profile service returned to the following claim types: sub
2018-07-25 16:20:22.039 +01:00 [DBG] End userinfo request
2018-07-25 16:20:22.051 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:20:22.052 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:20:22.052 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 16:20:22.052 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 16:20:22.052 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 16:20:22.052 +01:00 [DBG] Rendering check session result
2018-07-25 16:20:22.256 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 16:20:22.257 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 16:20:22.257 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 16:20:22.257 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 16:20:22.257 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 16:20:22.257 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 16:20:22.257 +01:00 [DBG] Start discovery request
2018-07-25 16:20:22.283 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:20:22.283 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:20:22.283 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 16:20:22.283 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 16:20:22.283 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 16:20:22.283 +01:00 [DBG] Rendering check session result
2018-07-25 16:32:54.896 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-07-25 16:32:55.027 +01:00 [DBG] Using idsrv as default scheme for authentication
2018-07-25 16:32:55.031 +01:00 [DBG] Using idsrv as default scheme for sign-in
2018-07-25 16:32:55.032 +01:00 [DBG] Using idsrv as default scheme for sign-out
2018-07-25 16:32:55.032 +01:00 [DBG] Using idsrv as default scheme for challenge
2018-07-25 16:32:55.033 +01:00 [DBG] Using idsrv as default scheme for forbid
2018-07-25 16:32:56.129 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:32:56.149 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:33:07.934 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:33:07.934 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:33:07.934 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:33:07.934 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:33:07.934 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:33:07.934 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:33:07.934 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:33:07.934 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:33:07.935 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:33:07.934 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:33:07.935 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:33:07.935 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:34:07.441 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:34:07.441 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:34:07.447 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-07-25 16:34:07.454 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-07-25 16:34:07.454 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-07-25 16:34:07.462 +01:00 [DBG] Start authorize request
2018-07-25 16:34:07.488 +01:00 [DBG] User in authorize request: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 16:34:07.494 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 16:34:07.509 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:34:07.569 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 16:34:07.655 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1 techdevs-accounts-api",
  "State": "22828f38af904ad0adca28e8b716b798",
  "Nonce": "446a7a6608b64f2394bd0237583c1ea6",
  "SessionId": "516bf640ba8b5966dcbb67150100ce4f",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1 techdevs-accounts-api",
    "state": "22828f38af904ad0adca28e8b716b798",
    "nonce": "446a7a6608b64f2394bd0237583c1ea6"
  }
}
2018-07-25 16:34:07.669 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2018-07-25 16:34:07.686 +01:00 [DBG] user_consent grant with value: spa|5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 not found in store.
2018-07-25 16:34:07.688 +01:00 [DBG] Found no prior consent from consent store, consent is required
2018-07-25 16:34:07.688 +01:00 [INF] Showing consent: User has not yet consented
2018-07-25 16:34:07.708 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:34:07.712 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:34:07.904 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 16:34:07.905 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:34:07.906 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 16:34:07.908 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:34:10.868 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:34:10.868 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:34:10.876 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:34:10.877 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:34:10.882 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:34:10.882 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:34:10.887 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:34:10.887 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:34:10.919 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:34:10.919 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:34:10.976 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:34:10.976 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:34:10.989 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:34:10.989 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:34:12.252 +01:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2018-07-25 16:34:12.252 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:34:12.252 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:34:12.398 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 16:34:12.398 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:34:12.399 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 16:34:12.450 +01:00 [INF] {
  "Name": "Consent granted",
  "Category": "Grants",
  "EventType": "Information",
  "Id": 4000,
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ClientId": "spa",
  "RequestedScopes": [
    "openid",
    "profile",
    "api1",
    "techdevs-accounts-api"
  ],
  "GrantedScopes": [
    "openid",
    "profile",
    "api1",
    "techdevs-accounts-api"
  ],
  "ConsentRemembered": true,
  "ActivityId": "0HLFI8FIAMC4N:00000008",
  "TimeStamp": "2018-07-25T15:34:12Z",
  "ProcessId": 11408,
  "LocalIpAddress": "127.0.0.1:32061",
  "RemoteIpAddress": "::1"
}
2018-07-25 16:34:12.513 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:34:12.530 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:34:12.530 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:34:12.530 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2018-07-25 16:34:12.531 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2018-07-25 16:34:12.531 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2018-07-25 16:34:12.539 +01:00 [DBG] Start authorize callback request
2018-07-25 16:34:12.573 +01:00 [DBG] User in authorize request: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 16:34:12.573 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 16:34:12.573 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:34:12.573 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 16:34:12.573 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1 techdevs-accounts-api",
  "State": "22828f38af904ad0adca28e8b716b798",
  "Nonce": "446a7a6608b64f2394bd0237583c1ea6",
  "SessionId": "516bf640ba8b5966dcbb67150100ce4f",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1 techdevs-accounts-api",
    "state": "22828f38af904ad0adca28e8b716b798",
    "nonce": "446a7a6608b64f2394bd0237583c1ea6"
  }
}
2018-07-25 16:34:12.574 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2018-07-25 16:34:12.574 +01:00 [DBG] user_consent grant with value: spa|5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 not found in store.
2018-07-25 16:34:12.574 +01:00 [DBG] Found no prior consent from consent store, consent is required
2018-07-25 16:34:12.589 +01:00 [INF] User consented to scopes: ["openid","profile","api1","techdevs-accounts-api"]
2018-07-25 16:34:12.603 +01:00 [DBG] User indicated to remember consent for scopes: ["openid","profile","api1","techdevs-accounts-api"]
2018-07-25 16:34:12.607 +01:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 16:34:12.624 +01:00 [DBG] Creating Implicit Flow response.
2018-07-25 16:34:12.637 +01:00 [DBG] Getting claims for access token for client: spa
2018-07-25 16:34:12.639 +01:00 [DBG] Getting claims for access token for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 16:34:12.650 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["email"] via ClaimsProviderAccessToken
2018-07-25 16:34:12.656 +01:00 [DBG] Issued claims: []
2018-07-25 16:34:12.758 +01:00 [DBG] Getting claims for identity token for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 and client: spa
2018-07-25 16:34:12.759 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-07-25 16:34:12.777 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "Endpoint": "Authorize",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "Scopes": "openid profile api1 techdevs-accounts-api",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****6zBA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****iTHA"
    }
  ],
  "ActivityId": "0HLFI8FIAMC4K:00000005",
  "TimeStamp": "2018-07-25T15:34:12Z",
  "ProcessId": 11408,
  "LocalIpAddress": "127.0.0.1:32061",
  "RemoteIpAddress": "::1"
}
2018-07-25 16:34:12.782 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ClientId": "spa",
  "RedirectUri": "http://localhost:5003/callback.html",
  "State": "22828f38af904ad0adca28e8b716b798",
  "Scope": "openid profile api1 techdevs-accounts-api"
}
2018-07-25 16:34:13.314 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 16:34:13.318 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 16:34:13.318 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 16:34:13.321 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 16:34:13.324 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 16:34:13.324 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 16:34:13.329 +01:00 [DBG] Start discovery request
2018-07-25 16:34:13.422 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:5003
2018-07-25 16:34:13.423 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 16:34:13.423 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 16:34:13.423 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-07-25 16:34:13.423 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-07-25 16:34:13.423 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-07-25 16:34:13.428 +01:00 [DBG] Start key discovery request
2018-07-25 16:34:13.531 +01:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:5003
2018-07-25 16:34:13.531 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 16:34:13.531 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 16:34:13.531 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-07-25 16:34:13.534 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-07-25 16:34:13.534 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-07-25 16:34:13.547 +01:00 [DBG] Start userinfo request
2018-07-25 16:34:13.554 +01:00 [DBG] Bearer token found in header
2018-07-25 16:34:13.638 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:34:13.641 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 16:34:13.643 +01:00 [DBG] IsActive called from: AccessTokenValidation
2018-07-25 16:34:13.643 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 16:34:13.648 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1532532852,
    "exp": 1532536452,
    "iss": "http://localhost:5000",
    "aud": [
      "http://localhost:5000/resources",
      "api1",
      "techdevs-accounts-api"
    ],
    "client_id": "spa",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532532021,
    "idp": "Google",
    "scope": [
      "openid",
      "profile",
      "api1",
      "techdevs-accounts-api"
    ],
    "amr": "external"
  }
}
2018-07-25 16:34:13.650 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2018-07-25 16:34:13.660 +01:00 [DBG] Creating userinfo response
2018-07-25 16:34:13.668 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 16:34:13.675 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 16:34:13.682 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-07-25 16:34:13.682 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 16:34:13.682 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2018-07-25 16:34:13.683 +01:00 [DBG] Issued claims: ["sub"]
2018-07-25 16:34:13.683 +01:00 [INF] Profile service returned to the following claim types: sub
2018-07-25 16:34:13.684 +01:00 [DBG] End userinfo request
2018-07-25 16:34:13.699 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:34:13.699 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:34:13.699 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 16:34:13.700 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 16:34:13.700 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 16:34:13.702 +01:00 [DBG] Rendering check session result
2018-07-25 16:34:13.880 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 16:34:13.881 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 16:34:13.881 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 16:34:13.881 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 16:34:13.881 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 16:34:13.881 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 16:34:13.881 +01:00 [DBG] Start discovery request
2018-07-25 16:34:13.908 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:34:13.909 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:34:13.909 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 16:34:13.909 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 16:34:13.909 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 16:34:13.909 +01:00 [DBG] Rendering check session result
2018-07-25 16:34:25.832 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 16:34:25.833 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 16:34:25.833 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 16:34:25.833 +01:00 [DBG] Start discovery request
2018-07-25 16:34:26.014 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-07-25 16:34:26.014 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-07-25 16:34:26.014 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-07-25 16:34:26.014 +01:00 [DBG] Start key discovery request
2018-07-25 16:36:33.034 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-07-25 16:36:33.167 +01:00 [DBG] Using idsrv as default scheme for authentication
2018-07-25 16:36:33.172 +01:00 [DBG] Using idsrv as default scheme for sign-in
2018-07-25 16:36:33.174 +01:00 [DBG] Using idsrv as default scheme for sign-out
2018-07-25 16:36:33.174 +01:00 [DBG] Using idsrv as default scheme for challenge
2018-07-25 16:36:33.175 +01:00 [DBG] Using idsrv as default scheme for forbid
2018-07-25 16:36:34.430 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 16:36:34.450 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:22:00.987 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-07-25 17:22:01.106 +01:00 [DBG] Using idsrv as default scheme for authentication
2018-07-25 17:22:01.111 +01:00 [DBG] Using idsrv as default scheme for sign-in
2018-07-25 17:22:01.113 +01:00 [DBG] Using idsrv as default scheme for sign-out
2018-07-25 17:22:01.113 +01:00 [DBG] Using idsrv as default scheme for challenge
2018-07-25 17:22:01.114 +01:00 [DBG] Using idsrv as default scheme for forbid
2018-07-25 17:22:02.181 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:22:02.212 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:22:14.245 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:22:14.245 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:22:14.245 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:22:14.245 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:22:14.245 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:22:14.245 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:22:14.246 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:22:14.246 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:22:14.246 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:22:14.247 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:22:14.247 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:22:14.247 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:22:30.649 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 17:22:30.660 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 17:22:30.660 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 17:22:30.664 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 17:22:30.671 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 17:22:30.671 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 17:22:30.678 +01:00 [DBG] Start discovery request
2018-07-25 17:22:30.850 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:22:30.850 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:22:30.850 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 17:22:30.851 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 17:22:30.851 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 17:22:30.852 +01:00 [DBG] Rendering check session result
2018-07-25 17:22:32.438 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:22:32.438 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:22:32.438 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-07-25 17:22:32.442 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-07-25 17:22:32.442 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-07-25 17:22:32.447 +01:00 [DBG] Start authorize request
2018-07-25 17:22:32.468 +01:00 [DBG] User in authorize request: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 17:22:32.473 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 17:22:32.486 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 17:22:32.535 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 17:22:32.567 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1 techdevs-accounts-api",
  "State": "375d67bc97b54ff4a682708a6f7cd542",
  "Nonce": "135cf5a1136343a9a578eccb17969f28",
  "SessionId": "516bf640ba8b5966dcbb67150100ce4f",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1 techdevs-accounts-api",
    "state": "375d67bc97b54ff4a682708a6f7cd542",
    "nonce": "135cf5a1136343a9a578eccb17969f28"
  }
}
2018-07-25 17:22:32.579 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2018-07-25 17:22:32.596 +01:00 [DBG] user_consent grant with value: spa|5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 not found in store.
2018-07-25 17:22:32.597 +01:00 [DBG] Found no prior consent from consent store, consent is required
2018-07-25 17:22:32.597 +01:00 [INF] Showing consent: User has not yet consented
2018-07-25 17:22:32.618 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:22:32.618 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:22:32.799 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 17:22:32.801 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 17:22:32.801 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 17:22:32.804 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 17:22:35.636 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:22:35.636 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:22:35.636 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:22:35.636 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:22:35.668 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:22:35.668 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:22:35.700 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:22:35.700 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:22:35.700 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:22:35.700 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:22:35.704 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:22:35.704 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:22:35.740 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:22:35.741 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:22:36.851 +01:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2018-07-25 17:22:36.852 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:22:36.852 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:22:37.007 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 17:22:37.007 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 17:22:37.007 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 17:22:37.059 +01:00 [INF] {
  "Name": "Consent granted",
  "Category": "Grants",
  "EventType": "Information",
  "Id": 4000,
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ClientId": "spa",
  "RequestedScopes": [
    "openid",
    "profile",
    "api1",
    "techdevs-accounts-api"
  ],
  "GrantedScopes": [
    "openid",
    "profile",
    "api1",
    "techdevs-accounts-api"
  ],
  "ConsentRemembered": true,
  "ActivityId": "0HLFI9B0A7R46:00000004",
  "TimeStamp": "2018-07-25T16:22:37Z",
  "ProcessId": 23220,
  "LocalIpAddress": "127.0.0.1:19635",
  "RemoteIpAddress": "::1"
}
2018-07-25 17:22:37.101 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 17:22:37.117 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:22:37.117 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:22:37.117 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2018-07-25 17:22:37.118 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2018-07-25 17:22:37.118 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2018-07-25 17:22:37.126 +01:00 [DBG] Start authorize callback request
2018-07-25 17:22:37.161 +01:00 [DBG] User in authorize request: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 17:22:37.161 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 17:22:37.161 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 17:22:37.161 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 17:22:37.161 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1 techdevs-accounts-api",
  "State": "375d67bc97b54ff4a682708a6f7cd542",
  "Nonce": "135cf5a1136343a9a578eccb17969f28",
  "SessionId": "516bf640ba8b5966dcbb67150100ce4f",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1 techdevs-accounts-api",
    "state": "375d67bc97b54ff4a682708a6f7cd542",
    "nonce": "135cf5a1136343a9a578eccb17969f28"
  }
}
2018-07-25 17:22:37.161 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2018-07-25 17:22:37.162 +01:00 [DBG] user_consent grant with value: spa|5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 not found in store.
2018-07-25 17:22:37.162 +01:00 [DBG] Found no prior consent from consent store, consent is required
2018-07-25 17:22:37.173 +01:00 [INF] User consented to scopes: ["openid","profile","api1","techdevs-accounts-api"]
2018-07-25 17:22:37.184 +01:00 [DBG] User indicated to remember consent for scopes: ["openid","profile","api1","techdevs-accounts-api"]
2018-07-25 17:22:37.188 +01:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 17:22:37.204 +01:00 [DBG] Creating Implicit Flow response.
2018-07-25 17:22:37.216 +01:00 [DBG] Getting claims for access token for client: spa
2018-07-25 17:22:37.217 +01:00 [DBG] Getting claims for access token for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 17:22:37.225 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["email"] via ClaimsProviderAccessToken
2018-07-25 17:22:37.231 +01:00 [DBG] Issued claims: []
2018-07-25 17:22:37.321 +01:00 [DBG] Getting claims for identity token for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 and client: spa
2018-07-25 17:22:37.321 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-07-25 17:22:37.339 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "Endpoint": "Authorize",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "Scopes": "openid profile api1 techdevs-accounts-api",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****H2aA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****xUKA"
    }
  ],
  "ActivityId": "0HLFI9B0A7R48:00000003",
  "TimeStamp": "2018-07-25T16:22:37Z",
  "ProcessId": 23220,
  "LocalIpAddress": "127.0.0.1:19635",
  "RemoteIpAddress": "::1"
}
2018-07-25 17:22:37.344 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ClientId": "spa",
  "RedirectUri": "http://localhost:5003/callback.html",
  "State": "375d67bc97b54ff4a682708a6f7cd542",
  "Scope": "openid profile api1 techdevs-accounts-api"
}
2018-07-25 17:22:37.535 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 17:22:37.535 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 17:22:37.535 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 17:22:37.535 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 17:22:37.535 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 17:22:37.535 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 17:22:37.535 +01:00 [DBG] Start discovery request
2018-07-25 17:22:37.579 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:5003
2018-07-25 17:22:37.579 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 17:22:37.579 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 17:22:37.579 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-07-25 17:22:37.580 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-07-25 17:22:37.580 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-07-25 17:22:37.584 +01:00 [DBG] Start key discovery request
2018-07-25 17:22:37.693 +01:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:5003
2018-07-25 17:22:37.693 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 17:22:37.693 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 17:22:37.693 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-07-25 17:22:37.696 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-07-25 17:22:37.696 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-07-25 17:22:37.705 +01:00 [DBG] Start userinfo request
2018-07-25 17:22:37.711 +01:00 [DBG] Bearer token found in header
2018-07-25 17:22:37.796 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 17:22:37.799 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 17:22:37.802 +01:00 [DBG] IsActive called from: AccessTokenValidation
2018-07-25 17:22:37.802 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 17:22:37.809 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1532535757,
    "exp": 1532539357,
    "iss": "http://localhost:5000",
    "aud": [
      "http://localhost:5000/resources",
      "api1",
      "techdevs-accounts-api"
    ],
    "client_id": "spa",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532532021,
    "idp": "Google",
    "scope": [
      "openid",
      "profile",
      "api1",
      "techdevs-accounts-api"
    ],
    "amr": "external"
  }
}
2018-07-25 17:22:37.810 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2018-07-25 17:22:37.818 +01:00 [DBG] Creating userinfo response
2018-07-25 17:22:37.823 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 17:22:37.826 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 17:22:37.830 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-07-25 17:22:37.830 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 17:22:37.830 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2018-07-25 17:22:37.830 +01:00 [DBG] Issued claims: ["sub"]
2018-07-25 17:22:37.830 +01:00 [INF] Profile service returned to the following claim types: sub
2018-07-25 17:22:37.831 +01:00 [DBG] End userinfo request
2018-07-25 17:22:37.853 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:22:37.853 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:22:37.853 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 17:22:37.853 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 17:22:37.853 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 17:22:37.853 +01:00 [DBG] Rendering check session result
2018-07-25 17:22:38.034 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 17:22:38.034 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 17:22:38.034 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 17:22:38.034 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 17:22:38.034 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 17:22:38.034 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 17:22:38.034 +01:00 [DBG] Start discovery request
2018-07-25 17:22:38.061 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:22:38.061 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:22:38.061 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 17:22:38.061 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 17:22:38.061 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 17:22:38.061 +01:00 [DBG] Rendering check session result
2018-07-25 17:22:39.080 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 17:22:39.080 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 17:22:39.080 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 17:22:39.080 +01:00 [DBG] Start discovery request
2018-07-25 17:22:39.254 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-07-25 17:22:39.254 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-07-25 17:22:39.254 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-07-25 17:22:39.254 +01:00 [DBG] Start key discovery request
2018-07-25 17:24:48.917 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-07-25 17:24:49.045 +01:00 [DBG] Using idsrv as default scheme for authentication
2018-07-25 17:24:49.050 +01:00 [DBG] Using idsrv as default scheme for sign-in
2018-07-25 17:24:49.052 +01:00 [DBG] Using idsrv as default scheme for sign-out
2018-07-25 17:24:49.052 +01:00 [DBG] Using idsrv as default scheme for challenge
2018-07-25 17:24:49.053 +01:00 [DBG] Using idsrv as default scheme for forbid
2018-07-25 17:24:50.263 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:24:50.286 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:24:55.544 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 17:24:55.549 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 17:24:55.549 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 17:24:55.554 +01:00 [DBG] Start discovery request
2018-07-25 17:24:55.902 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-07-25 17:24:55.902 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-07-25 17:24:55.902 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-07-25 17:24:55.907 +01:00 [DBG] Start key discovery request
2018-07-25 17:25:01.311 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:25:01.312 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:25:01.313 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:25:01.313 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:25:01.314 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:25:01.314 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:25:01.314 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:25:01.314 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:25:01.314 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:25:01.314 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:25:01.314 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:25:01.314 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:29:37.424 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-07-25 17:29:37.554 +01:00 [DBG] Using idsrv as default scheme for authentication
2018-07-25 17:29:37.558 +01:00 [DBG] Using idsrv as default scheme for sign-in
2018-07-25 17:29:37.560 +01:00 [DBG] Using idsrv as default scheme for sign-out
2018-07-25 17:29:37.561 +01:00 [DBG] Using idsrv as default scheme for challenge
2018-07-25 17:29:37.561 +01:00 [DBG] Using idsrv as default scheme for forbid
2018-07-25 17:29:38.845 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:29:38.867 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:29:53.893 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 17:29:53.897 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 17:29:53.897 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 17:29:53.902 +01:00 [DBG] Start discovery request
2018-07-25 17:29:54.188 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-07-25 17:29:54.189 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-07-25 17:29:54.189 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-07-25 17:29:54.193 +01:00 [DBG] Start key discovery request
2018-07-25 17:30:26.144 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-07-25 17:30:26.281 +01:00 [DBG] Using idsrv as default scheme for authentication
2018-07-25 17:30:26.286 +01:00 [DBG] Using idsrv as default scheme for sign-in
2018-07-25 17:30:26.288 +01:00 [DBG] Using idsrv as default scheme for sign-out
2018-07-25 17:30:26.289 +01:00 [DBG] Using idsrv as default scheme for challenge
2018-07-25 17:30:26.289 +01:00 [DBG] Using idsrv as default scheme for forbid
2018-07-25 17:30:27.378 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:30:27.399 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:30:46.788 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:30:46.788 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:30:46.794 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-07-25 17:30:46.799 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-07-25 17:30:46.799 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-07-25 17:30:46.805 +01:00 [DBG] Start authorize request
2018-07-25 17:30:46.825 +01:00 [DBG] User in authorize request: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 17:30:46.830 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 17:30:46.846 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 17:30:46.905 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 17:30:46.986 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1 techdevs-accounts-api",
  "State": "907a1622e17b4bb98354cd4dd123de7d",
  "Nonce": "db8a42176c1b4256857ee33f042c8d95",
  "SessionId": "516bf640ba8b5966dcbb67150100ce4f",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1 techdevs-accounts-api",
    "state": "907a1622e17b4bb98354cd4dd123de7d",
    "nonce": "db8a42176c1b4256857ee33f042c8d95"
  }
}
2018-07-25 17:30:46.999 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2018-07-25 17:30:47.014 +01:00 [DBG] user_consent grant with value: spa|5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 not found in store.
2018-07-25 17:30:47.016 +01:00 [DBG] Found no prior consent from consent store, consent is required
2018-07-25 17:30:47.016 +01:00 [INF] Showing consent: User has not yet consented
2018-07-25 17:30:47.034 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:30:47.034 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:30:47.208 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 17:30:47.210 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 17:30:47.210 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 17:30:47.213 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 17:30:52.469 +01:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2018-07-25 17:30:52.469 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:30:52.470 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:30:52.606 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 17:30:52.606 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 17:30:52.607 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 17:30:52.664 +01:00 [INF] {
  "Name": "Consent granted",
  "Category": "Grants",
  "EventType": "Information",
  "Id": 4000,
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ClientId": "spa",
  "RequestedScopes": [
    "openid",
    "profile",
    "api1",
    "techdevs-accounts-api"
  ],
  "GrantedScopes": [
    "openid",
    "profile",
    "api1",
    "techdevs-accounts-api"
  ],
  "ConsentRemembered": true,
  "ActivityId": "0HLFI9FMSAPHO:00000003",
  "TimeStamp": "2018-07-25T16:30:52Z",
  "ProcessId": 10744,
  "LocalIpAddress": "127.0.0.1:30300",
  "RemoteIpAddress": "::1"
}
2018-07-25 17:30:52.714 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 17:30:52.731 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:30:52.731 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:30:52.731 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2018-07-25 17:30:52.732 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2018-07-25 17:30:52.732 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2018-07-25 17:30:52.739 +01:00 [DBG] Start authorize callback request
2018-07-25 17:30:52.770 +01:00 [DBG] User in authorize request: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 17:30:52.770 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 17:30:52.770 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 17:30:52.771 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 17:30:52.771 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1 techdevs-accounts-api",
  "State": "907a1622e17b4bb98354cd4dd123de7d",
  "Nonce": "db8a42176c1b4256857ee33f042c8d95",
  "SessionId": "516bf640ba8b5966dcbb67150100ce4f",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1 techdevs-accounts-api",
    "state": "907a1622e17b4bb98354cd4dd123de7d",
    "nonce": "db8a42176c1b4256857ee33f042c8d95"
  }
}
2018-07-25 17:30:52.771 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2018-07-25 17:30:52.771 +01:00 [DBG] user_consent grant with value: spa|5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 not found in store.
2018-07-25 17:30:52.771 +01:00 [DBG] Found no prior consent from consent store, consent is required
2018-07-25 17:30:52.785 +01:00 [INF] User consented to scopes: ["openid","profile","api1","techdevs-accounts-api"]
2018-07-25 17:30:52.797 +01:00 [DBG] User indicated to remember consent for scopes: ["openid","profile","api1","techdevs-accounts-api"]
2018-07-25 17:30:52.802 +01:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 17:30:52.819 +01:00 [DBG] Creating Implicit Flow response.
2018-07-25 17:30:52.832 +01:00 [DBG] Getting claims for access token for client: spa
2018-07-25 17:30:52.833 +01:00 [DBG] Getting claims for access token for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 17:30:52.841 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["email"] via ClaimsProviderAccessToken
2018-07-25 17:30:52.847 +01:00 [DBG] Issued claims: []
2018-07-25 17:30:52.938 +01:00 [DBG] Getting claims for identity token for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 and client: spa
2018-07-25 17:30:52.939 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-07-25 17:30:52.957 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "Endpoint": "Authorize",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "Scopes": "openid profile api1 techdevs-accounts-api",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****RK8w"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****uwLw"
    }
  ],
  "ActivityId": "0HLFI9FMSAPHN:00000003",
  "TimeStamp": "2018-07-25T16:30:52Z",
  "ProcessId": 10744,
  "LocalIpAddress": "127.0.0.1:30300",
  "RemoteIpAddress": "::1"
}
2018-07-25 17:30:52.962 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ClientId": "spa",
  "RedirectUri": "http://localhost:5003/callback.html",
  "State": "907a1622e17b4bb98354cd4dd123de7d",
  "Scope": "openid profile api1 techdevs-accounts-api"
}
2018-07-25 17:30:53.457 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 17:30:53.462 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 17:30:53.462 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 17:30:53.465 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 17:30:53.468 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 17:30:53.468 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 17:30:53.472 +01:00 [DBG] Start discovery request
2018-07-25 17:30:53.560 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:5003
2018-07-25 17:30:53.560 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 17:30:53.560 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 17:30:53.560 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-07-25 17:30:53.561 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-07-25 17:30:53.561 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-07-25 17:30:53.566 +01:00 [DBG] Start key discovery request
2018-07-25 17:30:53.632 +01:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:5003
2018-07-25 17:30:53.632 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 17:30:53.632 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 17:30:53.632 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-07-25 17:30:53.635 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-07-25 17:30:53.635 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-07-25 17:30:53.646 +01:00 [DBG] Start userinfo request
2018-07-25 17:30:53.652 +01:00 [DBG] Bearer token found in header
2018-07-25 17:30:53.727 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 17:30:53.730 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 17:30:53.732 +01:00 [DBG] IsActive called from: AccessTokenValidation
2018-07-25 17:30:53.733 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 17:30:53.737 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1532536252,
    "exp": 1532539852,
    "iss": "http://localhost:5000",
    "aud": [
      "http://localhost:5000/resources",
      "api1",
      "techdevs-accounts-api"
    ],
    "client_id": "spa",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532532021,
    "idp": "Google",
    "scope": [
      "openid",
      "profile",
      "api1",
      "techdevs-accounts-api"
    ],
    "amr": "external"
  }
}
2018-07-25 17:30:53.738 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2018-07-25 17:30:53.746 +01:00 [DBG] Creating userinfo response
2018-07-25 17:30:53.751 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 17:30:53.755 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 17:30:53.759 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-07-25 17:30:53.759 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 17:30:53.759 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2018-07-25 17:30:53.760 +01:00 [DBG] Issued claims: ["sub"]
2018-07-25 17:30:53.760 +01:00 [INF] Profile service returned to the following claim types: sub
2018-07-25 17:30:53.760 +01:00 [DBG] End userinfo request
2018-07-25 17:30:53.773 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:30:53.773 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:30:53.773 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 17:30:53.774 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 17:30:53.774 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 17:30:53.775 +01:00 [DBG] Rendering check session result
2018-07-25 17:30:53.954 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 17:30:53.954 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 17:30:53.954 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 17:30:53.954 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 17:30:53.954 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 17:30:53.954 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 17:30:53.954 +01:00 [DBG] Start discovery request
2018-07-25 17:30:53.997 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:30:53.997 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:30:53.997 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 17:30:53.997 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 17:30:53.997 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 17:30:53.997 +01:00 [DBG] Rendering check session result
2018-07-25 17:30:55.502 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 17:30:55.502 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 17:30:55.503 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 17:30:55.503 +01:00 [DBG] Start discovery request
2018-07-25 17:30:55.689 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-07-25 17:30:55.689 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-07-25 17:30:55.689 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-07-25 17:30:55.690 +01:00 [DBG] Start key discovery request
2018-07-25 17:31:54.259 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2018-07-25 17:31:54.374 +01:00 [DBG] Using idsrv as default scheme for authentication
2018-07-25 17:31:54.378 +01:00 [DBG] Using idsrv as default scheme for sign-in
2018-07-25 17:31:54.380 +01:00 [DBG] Using idsrv as default scheme for sign-out
2018-07-25 17:31:54.380 +01:00 [DBG] Using idsrv as default scheme for challenge
2018-07-25 17:31:54.381 +01:00 [DBG] Using idsrv as default scheme for forbid
2018-07-25 17:31:55.128 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 17:31:55.138 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 17:31:55.138 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 17:31:55.143 +01:00 [DBG] Start discovery request
2018-07-25 17:31:55.453 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-07-25 17:31:55.454 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-07-25 17:31:55.454 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-07-25 17:31:55.459 +01:00 [DBG] Start key discovery request
2018-07-25 17:31:58.053 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:31:58.055 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:31:58.056 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-07-25 17:31:58.061 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-07-25 17:31:58.061 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-07-25 17:31:58.066 +01:00 [DBG] Start authorize request
2018-07-25 17:31:58.086 +01:00 [DBG] User in authorize request: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 17:31:58.091 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 17:31:58.104 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 17:31:58.148 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 17:31:58.163 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1 techdevs-accounts-api",
  "State": "7c80cc1d983c48ccb1482902811fda89",
  "Nonce": "aa841596bc0d4018ab17967ec476b9b3",
  "SessionId": "516bf640ba8b5966dcbb67150100ce4f",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1 techdevs-accounts-api",
    "state": "7c80cc1d983c48ccb1482902811fda89",
    "nonce": "aa841596bc0d4018ab17967ec476b9b3"
  }
}
2018-07-25 17:31:58.174 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2018-07-25 17:31:58.190 +01:00 [DBG] user_consent grant with value: spa|5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 not found in store.
2018-07-25 17:31:58.192 +01:00 [DBG] Found no prior consent from consent store, consent is required
2018-07-25 17:31:58.192 +01:00 [INF] Showing consent: User has not yet consented
2018-07-25 17:31:58.210 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:31:58.210 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:31:58.715 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 17:31:58.717 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 17:31:58.717 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 17:31:58.720 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 17:32:07.338 +01:00 [DBG] CORS request made for path: /consent from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2018-07-25 17:32:07.339 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:32:07.339 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:32:07.467 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 17:32:07.467 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 17:32:07.467 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 17:32:07.502 +01:00 [INF] {
  "Name": "Consent granted",
  "Category": "Grants",
  "EventType": "Information",
  "Id": 4000,
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ClientId": "spa",
  "RequestedScopes": [
    "openid",
    "profile",
    "api1",
    "techdevs-accounts-api"
  ],
  "GrantedScopes": [
    "openid",
    "profile",
    "api1",
    "techdevs-accounts-api"
  ],
  "ConsentRemembered": true,
  "ActivityId": "0HLFI9GH2NBV8:00000005",
  "TimeStamp": "2018-07-25T16:32:07Z",
  "ProcessId": 20012,
  "LocalIpAddress": "127.0.0.1:31537",
  "RemoteIpAddress": "::1"
}
2018-07-25 17:32:07.543 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 17:32:07.557 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:32:07.557 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:32:07.557 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2018-07-25 17:32:07.558 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2018-07-25 17:32:07.558 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2018-07-25 17:32:07.566 +01:00 [DBG] Start authorize callback request
2018-07-25 17:32:07.603 +01:00 [DBG] User in authorize request: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 17:32:07.603 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 17:32:07.603 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 17:32:07.603 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 17:32:07.603 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1 techdevs-accounts-api",
  "State": "7c80cc1d983c48ccb1482902811fda89",
  "Nonce": "aa841596bc0d4018ab17967ec476b9b3",
  "SessionId": "516bf640ba8b5966dcbb67150100ce4f",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1 techdevs-accounts-api",
    "state": "7c80cc1d983c48ccb1482902811fda89",
    "nonce": "aa841596bc0d4018ab17967ec476b9b3"
  }
}
2018-07-25 17:32:07.604 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2018-07-25 17:32:07.604 +01:00 [DBG] user_consent grant with value: spa|5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 not found in store.
2018-07-25 17:32:07.604 +01:00 [DBG] Found no prior consent from consent store, consent is required
2018-07-25 17:32:07.618 +01:00 [INF] User consented to scopes: ["openid","profile","api1","techdevs-accounts-api"]
2018-07-25 17:32:07.630 +01:00 [DBG] User indicated to remember consent for scopes: ["openid","profile","api1","techdevs-accounts-api"]
2018-07-25 17:32:07.634 +01:00 [DBG] Client allows remembering consent, and consent given. Updating consent store for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 17:32:07.652 +01:00 [DBG] Creating Implicit Flow response.
2018-07-25 17:32:07.666 +01:00 [DBG] Getting claims for access token for client: spa
2018-07-25 17:32:07.667 +01:00 [DBG] Getting claims for access token for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 17:32:07.676 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["email"] via ClaimsProviderAccessToken
2018-07-25 17:32:07.683 +01:00 [DBG] Issued claims: []
2018-07-25 17:32:07.761 +01:00 [DBG] Getting claims for identity token for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 and client: spa
2018-07-25 17:32:07.761 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-07-25 17:32:07.777 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "Endpoint": "Authorize",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "Scopes": "openid profile api1 techdevs-accounts-api",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****hrHw"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****BsMw"
    }
  ],
  "ActivityId": "0HLFI9GH2NBV8:00000006",
  "TimeStamp": "2018-07-25T16:32:07Z",
  "ProcessId": 20012,
  "LocalIpAddress": "127.0.0.1:31537",
  "RemoteIpAddress": "::1"
}
2018-07-25 17:32:07.782 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ClientId": "spa",
  "RedirectUri": "http://localhost:5003/callback.html",
  "State": "7c80cc1d983c48ccb1482902811fda89",
  "Scope": "openid profile api1 techdevs-accounts-api"
}
2018-07-25 17:32:08.267 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 17:32:08.270 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 17:32:08.271 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 17:32:08.272 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 17:32:08.272 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 17:32:08.272 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 17:32:08.272 +01:00 [DBG] Start discovery request
2018-07-25 17:32:08.310 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:5003
2018-07-25 17:32:08.311 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 17:32:08.311 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 17:32:08.311 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-07-25 17:32:08.311 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-07-25 17:32:08.311 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-07-25 17:32:08.311 +01:00 [DBG] Start key discovery request
2018-07-25 17:32:08.406 +01:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:5003
2018-07-25 17:32:08.406 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 17:32:08.407 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 17:32:08.407 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-07-25 17:32:08.410 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-07-25 17:32:08.411 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-07-25 17:32:08.420 +01:00 [DBG] Start userinfo request
2018-07-25 17:32:08.425 +01:00 [DBG] Bearer token found in header
2018-07-25 17:32:08.502 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 17:32:08.505 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 17:32:08.507 +01:00 [DBG] IsActive called from: AccessTokenValidation
2018-07-25 17:32:08.508 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 17:32:08.512 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1532536327,
    "exp": 1532539927,
    "iss": "http://localhost:5000",
    "aud": [
      "http://localhost:5000/resources",
      "api1",
      "techdevs-accounts-api"
    ],
    "client_id": "spa",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532532021,
    "idp": "Google",
    "scope": [
      "openid",
      "profile",
      "api1",
      "techdevs-accounts-api"
    ],
    "amr": "external"
  }
}
2018-07-25 17:32:08.513 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2018-07-25 17:32:08.521 +01:00 [DBG] Creating userinfo response
2018-07-25 17:32:08.527 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 17:32:08.531 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 17:32:08.536 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-07-25 17:32:08.536 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 17:32:08.536 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2018-07-25 17:32:08.536 +01:00 [DBG] Issued claims: ["sub"]
2018-07-25 17:32:08.536 +01:00 [INF] Profile service returned to the following claim types: sub
2018-07-25 17:32:08.537 +01:00 [DBG] End userinfo request
2018-07-25 17:32:08.549 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:32:08.549 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:32:08.549 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 17:32:08.550 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 17:32:08.550 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 17:32:08.551 +01:00 [DBG] Rendering check session result
2018-07-25 17:32:08.730 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 17:32:08.730 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 17:32:08.730 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 17:32:08.730 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 17:32:08.730 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 17:32:08.730 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 17:32:08.730 +01:00 [DBG] Start discovery request
2018-07-25 17:32:08.796 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:32:08.796 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:32:08.796 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 17:32:08.796 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 17:32:08.797 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 17:32:08.797 +01:00 [DBG] Rendering check session result
2018-07-25 17:41:14.970 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:41:14.970 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:41:14.970 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2018-07-25 17:41:14.970 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2018-07-25 17:41:14.970 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2018-07-25 17:41:14.970 +01:00 [DBG] Start authorize request
2018-07-25 17:41:14.970 +01:00 [DBG] User in authorize request: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 17:41:14.970 +01:00 [DBG] Start authorize request protocol validation
2018-07-25 17:41:14.971 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 17:41:14.971 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2018-07-25 17:41:14.971 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "AllowedRedirectUris": [
    "http://localhost:5003/index.html",
    "http://localhost:5003/callback.html",
    "http://localhost:5003/silent.html",
    "http://localhost:5003/popup.html"
  ],
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ResponseType": "id_token token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile api1 techdevs-accounts-api",
  "State": "2632f0f4b9db41078a1505f023e09a15",
  "Nonce": "a4ad339cb6d74a29800f83525e6e4368",
  "SessionId": "516bf640ba8b5966dcbb67150100ce4f",
  "Raw": {
    "client_id": "spa",
    "redirect_uri": "http://localhost:5003/callback.html",
    "response_type": "id_token token",
    "scope": "openid profile api1 techdevs-accounts-api",
    "state": "2632f0f4b9db41078a1505f023e09a15",
    "nonce": "a4ad339cb6d74a29800f83525e6e4368"
  }
}
2018-07-25 17:41:14.971 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2018-07-25 17:41:14.983 +01:00 [DBG] Consent found in consent store is same as current request, consent is not required
2018-07-25 17:41:14.983 +01:00 [DBG] Creating Implicit Flow response.
2018-07-25 17:41:14.983 +01:00 [DBG] Getting claims for access token for client: spa
2018-07-25 17:41:14.983 +01:00 [DBG] Getting claims for access token for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59
2018-07-25 17:41:14.983 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["email"] via ClaimsProviderAccessToken
2018-07-25 17:41:14.983 +01:00 [DBG] Issued claims: []
2018-07-25 17:41:14.985 +01:00 [DBG] Getting claims for identity token for subject: 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 and client: spa
2018-07-25 17:41:14.985 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2018-07-25 17:41:14.987 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "spa",
  "ClientName": "SPA Client",
  "RedirectUri": "http://localhost:5003/callback.html",
  "Endpoint": "Authorize",
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "Scopes": "openid profile api1 techdevs-accounts-api",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****vKag"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****BsNg"
    }
  ],
  "ActivityId": "0HLFI9GH2NBVA:00000001",
  "TimeStamp": "2018-07-25T16:41:14Z",
  "ProcessId": 20012,
  "LocalIpAddress": "127.0.0.1:31537",
  "RemoteIpAddress": "::1"
}
2018-07-25 17:41:14.988 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
  "ClientId": "spa",
  "RedirectUri": "http://localhost:5003/callback.html",
  "State": "2632f0f4b9db41078a1505f023e09a15",
  "Scope": "openid profile api1 techdevs-accounts-api"
}
2018-07-25 17:41:15.144 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 17:41:15.144 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 17:41:15.144 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 17:41:15.144 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 17:41:15.144 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 17:41:15.144 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 17:41:15.145 +01:00 [DBG] Start discovery request
2018-07-25 17:41:15.195 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:5003
2018-07-25 17:41:15.196 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 17:41:15.196 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 17:41:15.196 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2018-07-25 17:41:15.196 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2018-07-25 17:41:15.196 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2018-07-25 17:41:15.196 +01:00 [DBG] Start key discovery request
2018-07-25 17:41:15.289 +01:00 [DBG] CORS request made for path: /connect/userinfo from origin: http://localhost:5003
2018-07-25 17:41:15.290 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 17:41:15.290 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 17:41:15.290 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2018-07-25 17:41:15.290 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2018-07-25 17:41:15.290 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2018-07-25 17:41:15.290 +01:00 [DBG] Start userinfo request
2018-07-25 17:41:15.290 +01:00 [DBG] Bearer token found in header
2018-07-25 17:41:15.291 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 17:41:15.291 +01:00 [DBG] client configuration validation for client spa succeeded.
2018-07-25 17:41:15.291 +01:00 [DBG] IsActive called from: AccessTokenValidation
2018-07-25 17:41:15.291 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2018-07-25 17:41:15.292 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1532536874,
    "exp": 1532540474,
    "iss": "http://localhost:5000",
    "aud": [
      "http://localhost:5000/resources",
      "api1",
      "techdevs-accounts-api"
    ],
    "client_id": "spa",
    "sub": "5e5c02a6-2af1-47d3-b9db-a6b160d8ca59",
    "auth_time": 1532532021,
    "idp": "Google",
    "scope": [
      "openid",
      "profile",
      "api1",
      "techdevs-accounts-api"
    ],
    "amr": "external"
  }
}
2018-07-25 17:41:15.292 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2018-07-25 17:41:15.292 +01:00 [DBG] Creating userinfo response
2018-07-25 17:41:15.292 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 17:41:15.292 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 17:41:15.292 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2018-07-25 17:41:15.292 +01:00 [DBG] Scopes in access token: openid profile api1 techdevs-accounts-api
2018-07-25 17:41:15.292 +01:00 [DBG] Get profile called for subject 5e5c02a6-2af1-47d3-b9db-a6b160d8ca59 from client SPA Client with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2018-07-25 17:41:15.292 +01:00 [DBG] Issued claims: ["sub"]
2018-07-25 17:41:15.292 +01:00 [INF] Profile service returned to the following claim types: sub
2018-07-25 17:41:15.292 +01:00 [DBG] End userinfo request
2018-07-25 17:41:15.316 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:41:15.316 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:41:15.316 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 17:41:15.316 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 17:41:15.316 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 17:41:15.316 +01:00 [DBG] Rendering check session result
2018-07-25 17:41:15.461 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:5003
2018-07-25 17:41:15.462 +01:00 [DBG] Client list checked and origin: http://localhost:5003 is allowed
2018-07-25 17:41:15.462 +01:00 [DBG] CorsPolicyService allowed origin: http://localhost:5003
2018-07-25 17:41:15.462 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2018-07-25 17:41:15.462 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2018-07-25 17:41:15.462 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2018-07-25 17:41:15.462 +01:00 [DBG] Start discovery request
2018-07-25 17:41:15.537 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:41:15.537 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2018-07-25 17:41:15.537 +01:00 [DBG] Request path /connect/checksession matched to endpoint type Checksession
2018-07-25 17:41:15.537 +01:00 [DBG] Endpoint enabled: Checksession, successfully created handler: IdentityServer4.Endpoints.CheckSessionEndpoint
2018-07-25 17:41:15.537 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.CheckSessionEndpoint for /connect/checksession
2018-07-25 17:41:15.537 +01:00 [DBG] Rendering check session result
